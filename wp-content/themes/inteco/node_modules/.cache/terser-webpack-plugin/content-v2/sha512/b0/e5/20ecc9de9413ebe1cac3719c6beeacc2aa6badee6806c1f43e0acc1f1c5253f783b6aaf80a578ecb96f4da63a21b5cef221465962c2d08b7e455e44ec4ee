{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[\"vendors\"],{\"8L3F\":function(module,__webpack_exports__,__webpack_require__){\"use strict\";eval(\"__webpack_require__.r(__webpack_exports__);\\n/* WEBPACK VAR INJECTION */(function(global) {/**!\\r\\n * @fileOverview Kickass library to create and place poppers near their reference elements.\\r\\n * @version 1.16.1\\r\\n * @license\\r\\n * Copyright (c) 2016 Federico Zivolo and contributors\\r\\n *\\r\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\r\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\r\\n * in the Software without restriction, including without limitation the rights\\r\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\r\\n * copies of the Software, and to permit persons to whom the Software is\\r\\n * furnished to do so, subject to the following conditions:\\r\\n *\\r\\n * The above copyright notice and this permission notice shall be included in all\\r\\n * copies or substantial portions of the Software.\\r\\n *\\r\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\r\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\r\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\r\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\r\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\r\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\\r\\n * SOFTWARE.\\r\\n */\\r\\nvar isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';\\r\\n\\r\\nvar timeoutDuration = function () {\\r\\n  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\\r\\n  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {\\r\\n    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\\r\\n      return 1;\\r\\n    }\\r\\n  }\\r\\n  return 0;\\r\\n}();\\r\\n\\r\\nfunction microtaskDebounce(fn) {\\r\\n  var called = false;\\r\\n  return function () {\\r\\n    if (called) {\\r\\n      return;\\r\\n    }\\r\\n    called = true;\\r\\n    window.Promise.resolve().then(function () {\\r\\n      called = false;\\r\\n      fn();\\r\\n    });\\r\\n  };\\r\\n}\\r\\n\\r\\nfunction taskDebounce(fn) {\\r\\n  var scheduled = false;\\r\\n  return function () {\\r\\n    if (!scheduled) {\\r\\n      scheduled = true;\\r\\n      setTimeout(function () {\\r\\n        scheduled = false;\\r\\n        fn();\\r\\n      }, timeoutDuration);\\r\\n    }\\r\\n  };\\r\\n}\\r\\n\\r\\nvar supportsMicroTasks = isBrowser && window.Promise;\\r\\n\\r\\n/**\\r\\n* Create a debounced version of a method, that's asynchronously deferred\\r\\n* but called in the minimum time possible.\\r\\n*\\r\\n* @method\\r\\n* @memberof Popper.Utils\\r\\n* @argument {Function} fn\\r\\n* @returns {Function}\\r\\n*/\\r\\nvar debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;\\r\\n\\r\\n/**\\r\\n * Check if the given variable is a function\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Any} functionToCheck - variable to check\\r\\n * @returns {Boolean} answer to: is a function?\\r\\n */\\r\\nfunction isFunction(functionToCheck) {\\r\\n  var getType = {};\\r\\n  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get CSS computed property of the given element\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Eement} element\\r\\n * @argument {String} property\\r\\n */\\r\\nfunction getStyleComputedProperty(element, property) {\\r\\n  if (element.nodeType !== 1) {\\r\\n    return [];\\r\\n  }\\r\\n  // NOTE: 1 DOM access here\\r\\n  var window = element.ownerDocument.defaultView;\\r\\n  var css = window.getComputedStyle(element, null);\\r\\n  return property ? css[property] : css;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the parentNode or the host of the element\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element\\r\\n * @returns {Element} parent\\r\\n */\\r\\nfunction getParentNode(element) {\\r\\n  if (element.nodeName === 'HTML') {\\r\\n    return element;\\r\\n  }\\r\\n  return element.parentNode || element.host;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the scrolling parent of the given element\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element\\r\\n * @returns {Element} scroll parent\\r\\n */\\r\\nfunction getScrollParent(element) {\\r\\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\\r\\n  if (!element) {\\r\\n    return document.body;\\r\\n  }\\r\\n\\r\\n  switch (element.nodeName) {\\r\\n    case 'HTML':\\r\\n    case 'BODY':\\r\\n      return element.ownerDocument.body;\\r\\n    case '#document':\\r\\n      return element.body;\\r\\n  }\\r\\n\\r\\n  // Firefox want us to check `-x` and `-y` variations as well\\r\\n\\r\\n  var _getStyleComputedProp = getStyleComputedProperty(element),\\r\\n      overflow = _getStyleComputedProp.overflow,\\r\\n      overflowX = _getStyleComputedProp.overflowX,\\r\\n      overflowY = _getStyleComputedProp.overflowY;\\r\\n\\r\\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\\r\\n    return element;\\r\\n  }\\r\\n\\r\\n  return getScrollParent(getParentNode(element));\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the reference node of the reference object, or the reference object itself.\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {Element|Object} reference - the reference element (the popper will be relative to this)\\r\\n * @returns {Element} parent\\r\\n */\\r\\nfunction getReferenceNode(reference) {\\r\\n  return reference && reference.referenceNode ? reference.referenceNode : reference;\\r\\n}\\r\\n\\r\\nvar isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\\r\\nvar isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\\r\\n\\r\\n/**\\r\\n * Determines if the browser is Internet Explorer\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {Number} version to check\\r\\n * @returns {Boolean} isIE\\r\\n */\\r\\nfunction isIE(version) {\\r\\n  if (version === 11) {\\r\\n    return isIE11;\\r\\n  }\\r\\n  if (version === 10) {\\r\\n    return isIE10;\\r\\n  }\\r\\n  return isIE11 || isIE10;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns the offset parent of the given element\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element\\r\\n * @returns {Element} offset parent\\r\\n */\\r\\nfunction getOffsetParent(element) {\\r\\n  if (!element) {\\r\\n    return document.documentElement;\\r\\n  }\\r\\n\\r\\n  var noOffsetParent = isIE(10) ? document.body : null;\\r\\n\\r\\n  // NOTE: 1 DOM access here\\r\\n  var offsetParent = element.offsetParent || null;\\r\\n  // Skip hidden elements which don't have an offsetParent\\r\\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\\r\\n    offsetParent = (element = element.nextElementSibling).offsetParent;\\r\\n  }\\r\\n\\r\\n  var nodeName = offsetParent && offsetParent.nodeName;\\r\\n\\r\\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\\r\\n    return element ? element.ownerDocument.documentElement : document.documentElement;\\r\\n  }\\r\\n\\r\\n  // .offsetParent will return the closest TH, TD or TABLE in case\\r\\n  // no offsetParent is present, I hate this job...\\r\\n  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {\\r\\n    return getOffsetParent(offsetParent);\\r\\n  }\\r\\n\\r\\n  return offsetParent;\\r\\n}\\r\\n\\r\\nfunction isOffsetContainer(element) {\\r\\n  var nodeName = element.nodeName;\\r\\n\\r\\n  if (nodeName === 'BODY') {\\r\\n    return false;\\r\\n  }\\r\\n  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Finds the root node (document, shadowDOM root) of the given element\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} node\\r\\n * @returns {Element} root node\\r\\n */\\r\\nfunction getRoot(node) {\\r\\n  if (node.parentNode !== null) {\\r\\n    return getRoot(node.parentNode);\\r\\n  }\\r\\n\\r\\n  return node;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Finds the offset parent common to the two provided nodes\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element1\\r\\n * @argument {Element} element2\\r\\n * @returns {Element} common offset parent\\r\\n */\\r\\nfunction findCommonOffsetParent(element1, element2) {\\r\\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\\r\\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\\r\\n    return document.documentElement;\\r\\n  }\\r\\n\\r\\n  // Here we make sure to give as \\\"start\\\" the element that comes first in the DOM\\r\\n  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;\\r\\n  var start = order ? element1 : element2;\\r\\n  var end = order ? element2 : element1;\\r\\n\\r\\n  // Get common ancestor container\\r\\n  var range = document.createRange();\\r\\n  range.setStart(start, 0);\\r\\n  range.setEnd(end, 0);\\r\\n  var commonAncestorContainer = range.commonAncestorContainer;\\r\\n\\r\\n  // Both nodes are inside #document\\r\\n\\r\\n  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {\\r\\n    if (isOffsetContainer(commonAncestorContainer)) {\\r\\n      return commonAncestorContainer;\\r\\n    }\\r\\n\\r\\n    return getOffsetParent(commonAncestorContainer);\\r\\n  }\\r\\n\\r\\n  // one of the nodes is inside shadowDOM, find which one\\r\\n  var element1root = getRoot(element1);\\r\\n  if (element1root.host) {\\r\\n    return findCommonOffsetParent(element1root.host, element2);\\r\\n  } else {\\r\\n    return findCommonOffsetParent(element1, getRoot(element2).host);\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Gets the scroll value of the given element in the given side (top and left)\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element\\r\\n * @argument {String} side `top` or `left`\\r\\n * @returns {number} amount of scrolled pixels\\r\\n */\\r\\nfunction getScroll(element) {\\r\\n  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';\\r\\n\\r\\n  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\\r\\n  var nodeName = element.nodeName;\\r\\n\\r\\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\\r\\n    var html = element.ownerDocument.documentElement;\\r\\n    var scrollingElement = element.ownerDocument.scrollingElement || html;\\r\\n    return scrollingElement[upperSide];\\r\\n  }\\r\\n\\r\\n  return element[upperSide];\\r\\n}\\r\\n\\r\\n/*\\r\\n * Sum or subtract the element scroll values (left and top) from a given rect object\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {Object} rect - Rect object you want to change\\r\\n * @param {HTMLElement} element - The element from the function reads the scroll values\\r\\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\\r\\n * @return {Object} rect - The modifier rect object\\r\\n */\\r\\nfunction includeScroll(rect, element) {\\r\\n  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\r\\n\\r\\n  var scrollTop = getScroll(element, 'top');\\r\\n  var scrollLeft = getScroll(element, 'left');\\r\\n  var modifier = subtract ? -1 : 1;\\r\\n  rect.top += scrollTop * modifier;\\r\\n  rect.bottom += scrollTop * modifier;\\r\\n  rect.left += scrollLeft * modifier;\\r\\n  rect.right += scrollLeft * modifier;\\r\\n  return rect;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Helper to detect borders of a given element\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {CSSStyleDeclaration} styles\\r\\n * Result of `getStyleComputedProperty` on the given element\\r\\n * @param {String} axis - `x` or `y`\\r\\n * @return {number} borders - The borders size of the given axis\\r\\n */\\r\\n\\r\\nfunction getBordersSize(styles, axis) {\\r\\n  var sideA = axis === 'x' ? 'Left' : 'Top';\\r\\n  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';\\r\\n\\r\\n  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);\\r\\n}\\r\\n\\r\\nfunction getSize(axis, body, html, computedStyle) {\\r\\n  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);\\r\\n}\\r\\n\\r\\nfunction getWindowSizes(document) {\\r\\n  var body = document.body;\\r\\n  var html = document.documentElement;\\r\\n  var computedStyle = isIE(10) && getComputedStyle(html);\\r\\n\\r\\n  return {\\r\\n    height: getSize('Height', body, html, computedStyle),\\r\\n    width: getSize('Width', body, html, computedStyle)\\r\\n  };\\r\\n}\\r\\n\\r\\nvar classCallCheck = function (instance, Constructor) {\\r\\n  if (!(instance instanceof Constructor)) {\\r\\n    throw new TypeError(\\\"Cannot call a class as a function\\\");\\r\\n  }\\r\\n};\\r\\n\\r\\nvar createClass = function () {\\r\\n  function defineProperties(target, props) {\\r\\n    for (var i = 0; i < props.length; i++) {\\r\\n      var descriptor = props[i];\\r\\n      descriptor.enumerable = descriptor.enumerable || false;\\r\\n      descriptor.configurable = true;\\r\\n      if (\\\"value\\\" in descriptor) descriptor.writable = true;\\r\\n      Object.defineProperty(target, descriptor.key, descriptor);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return function (Constructor, protoProps, staticProps) {\\r\\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\\r\\n    if (staticProps) defineProperties(Constructor, staticProps);\\r\\n    return Constructor;\\r\\n  };\\r\\n}();\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nvar defineProperty = function (obj, key, value) {\\r\\n  if (key in obj) {\\r\\n    Object.defineProperty(obj, key, {\\r\\n      value: value,\\r\\n      enumerable: true,\\r\\n      configurable: true,\\r\\n      writable: true\\r\\n    });\\r\\n  } else {\\r\\n    obj[key] = value;\\r\\n  }\\r\\n\\r\\n  return obj;\\r\\n};\\r\\n\\r\\nvar _extends = Object.assign || function (target) {\\r\\n  for (var i = 1; i < arguments.length; i++) {\\r\\n    var source = arguments[i];\\r\\n\\r\\n    for (var key in source) {\\r\\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\\r\\n        target[key] = source[key];\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n\\r\\n  return target;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Given element offsets, generate an output similar to getBoundingClientRect\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Object} offsets\\r\\n * @returns {Object} ClientRect like output\\r\\n */\\r\\nfunction getClientRect(offsets) {\\r\\n  return _extends({}, offsets, {\\r\\n    right: offsets.left + offsets.width,\\r\\n    bottom: offsets.top + offsets.height\\r\\n  });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get bounding client rect of given element\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {HTMLElement} element\\r\\n * @return {Object} client rect\\r\\n */\\r\\nfunction getBoundingClientRect(element) {\\r\\n  var rect = {};\\r\\n\\r\\n  // IE10 10 FIX: Please, don't ask, the element isn't\\r\\n  // considered in DOM in some circumstances...\\r\\n  // This isn't reproducible in IE10 compatibility mode of IE11\\r\\n  try {\\r\\n    if (isIE(10)) {\\r\\n      rect = element.getBoundingClientRect();\\r\\n      var scrollTop = getScroll(element, 'top');\\r\\n      var scrollLeft = getScroll(element, 'left');\\r\\n      rect.top += scrollTop;\\r\\n      rect.left += scrollLeft;\\r\\n      rect.bottom += scrollTop;\\r\\n      rect.right += scrollLeft;\\r\\n    } else {\\r\\n      rect = element.getBoundingClientRect();\\r\\n    }\\r\\n  } catch (e) {}\\r\\n\\r\\n  var result = {\\r\\n    left: rect.left,\\r\\n    top: rect.top,\\r\\n    width: rect.right - rect.left,\\r\\n    height: rect.bottom - rect.top\\r\\n  };\\r\\n\\r\\n  // subtract scrollbar size from sizes\\r\\n  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\\r\\n  var width = sizes.width || element.clientWidth || result.width;\\r\\n  var height = sizes.height || element.clientHeight || result.height;\\r\\n\\r\\n  var horizScrollbar = element.offsetWidth - width;\\r\\n  var vertScrollbar = element.offsetHeight - height;\\r\\n\\r\\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\\r\\n  // we make this check conditional for performance reasons\\r\\n  if (horizScrollbar || vertScrollbar) {\\r\\n    var styles = getStyleComputedProperty(element);\\r\\n    horizScrollbar -= getBordersSize(styles, 'x');\\r\\n    vertScrollbar -= getBordersSize(styles, 'y');\\r\\n\\r\\n    result.width -= horizScrollbar;\\r\\n    result.height -= vertScrollbar;\\r\\n  }\\r\\n\\r\\n  return getClientRect(result);\\r\\n}\\r\\n\\r\\nfunction getOffsetRectRelativeToArbitraryNode(children, parent) {\\r\\n  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\\r\\n\\r\\n  var isIE10 = isIE(10);\\r\\n  var isHTML = parent.nodeName === 'HTML';\\r\\n  var childrenRect = getBoundingClientRect(children);\\r\\n  var parentRect = getBoundingClientRect(parent);\\r\\n  var scrollParent = getScrollParent(children);\\r\\n\\r\\n  var styles = getStyleComputedProperty(parent);\\r\\n  var borderTopWidth = parseFloat(styles.borderTopWidth);\\r\\n  var borderLeftWidth = parseFloat(styles.borderLeftWidth);\\r\\n\\r\\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\\r\\n  if (fixedPosition && isHTML) {\\r\\n    parentRect.top = Math.max(parentRect.top, 0);\\r\\n    parentRect.left = Math.max(parentRect.left, 0);\\r\\n  }\\r\\n  var offsets = getClientRect({\\r\\n    top: childrenRect.top - parentRect.top - borderTopWidth,\\r\\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\\r\\n    width: childrenRect.width,\\r\\n    height: childrenRect.height\\r\\n  });\\r\\n  offsets.marginTop = 0;\\r\\n  offsets.marginLeft = 0;\\r\\n\\r\\n  // Subtract margins of documentElement in case it's being used as parent\\r\\n  // we do this only on HTML because it's the only element that behaves\\r\\n  // differently when margins are applied to it. The margins are included in\\r\\n  // the box of the documentElement, in the other cases not.\\r\\n  if (!isIE10 && isHTML) {\\r\\n    var marginTop = parseFloat(styles.marginTop);\\r\\n    var marginLeft = parseFloat(styles.marginLeft);\\r\\n\\r\\n    offsets.top -= borderTopWidth - marginTop;\\r\\n    offsets.bottom -= borderTopWidth - marginTop;\\r\\n    offsets.left -= borderLeftWidth - marginLeft;\\r\\n    offsets.right -= borderLeftWidth - marginLeft;\\r\\n\\r\\n    // Attach marginTop and marginLeft because in some circumstances we may need them\\r\\n    offsets.marginTop = marginTop;\\r\\n    offsets.marginLeft = marginLeft;\\r\\n  }\\r\\n\\r\\n  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {\\r\\n    offsets = includeScroll(offsets, parent);\\r\\n  }\\r\\n\\r\\n  return offsets;\\r\\n}\\r\\n\\r\\nfunction getViewportOffsetRectRelativeToArtbitraryNode(element) {\\r\\n  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\r\\n\\r\\n  var html = element.ownerDocument.documentElement;\\r\\n  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\\r\\n  var width = Math.max(html.clientWidth, window.innerWidth || 0);\\r\\n  var height = Math.max(html.clientHeight, window.innerHeight || 0);\\r\\n\\r\\n  var scrollTop = !excludeScroll ? getScroll(html) : 0;\\r\\n  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\\r\\n\\r\\n  var offset = {\\r\\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\\r\\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\\r\\n    width: width,\\r\\n    height: height\\r\\n  };\\r\\n\\r\\n  return getClientRect(offset);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Check if the given element is fixed or is inside a fixed parent\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element\\r\\n * @argument {Element} customContainer\\r\\n * @returns {Boolean} answer to \\\"isFixed?\\\"\\r\\n */\\r\\nfunction isFixed(element) {\\r\\n  var nodeName = element.nodeName;\\r\\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\\r\\n    return false;\\r\\n  }\\r\\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\\r\\n    return true;\\r\\n  }\\r\\n  var parentNode = getParentNode(element);\\r\\n  if (!parentNode) {\\r\\n    return false;\\r\\n  }\\r\\n  return isFixed(parentNode);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Finds the first parent of an element that has a transformed property defined\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element\\r\\n * @returns {Element} first transformed parent or documentElement\\r\\n */\\r\\n\\r\\nfunction getFixedPositionOffsetParent(element) {\\r\\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\\r\\n  if (!element || !element.parentElement || isIE()) {\\r\\n    return document.documentElement;\\r\\n  }\\r\\n  var el = element.parentElement;\\r\\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\\r\\n    el = el.parentElement;\\r\\n  }\\r\\n  return el || document.documentElement;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Computed the boundaries limits and return them\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {HTMLElement} popper\\r\\n * @param {HTMLElement} reference\\r\\n * @param {number} padding\\r\\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\\r\\n * @param {Boolean} fixedPosition - Is in fixed position mode\\r\\n * @returns {Object} Coordinates of the boundaries\\r\\n */\\r\\nfunction getBoundaries(popper, reference, padding, boundariesElement) {\\r\\n  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\\r\\n\\r\\n  // NOTE: 1 DOM access here\\r\\n\\r\\n  var boundaries = { top: 0, left: 0 };\\r\\n  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\\r\\n\\r\\n  // Handle viewport case\\r\\n  if (boundariesElement === 'viewport') {\\r\\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\\r\\n  } else {\\r\\n    // Handle other cases based on DOM element used as boundaries\\r\\n    var boundariesNode = void 0;\\r\\n    if (boundariesElement === 'scrollParent') {\\r\\n      boundariesNode = getScrollParent(getParentNode(reference));\\r\\n      if (boundariesNode.nodeName === 'BODY') {\\r\\n        boundariesNode = popper.ownerDocument.documentElement;\\r\\n      }\\r\\n    } else if (boundariesElement === 'window') {\\r\\n      boundariesNode = popper.ownerDocument.documentElement;\\r\\n    } else {\\r\\n      boundariesNode = boundariesElement;\\r\\n    }\\r\\n\\r\\n    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);\\r\\n\\r\\n    // In case of HTML, we need a different computation\\r\\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\\r\\n      var _getWindowSizes = getWindowSizes(popper.ownerDocument),\\r\\n          height = _getWindowSizes.height,\\r\\n          width = _getWindowSizes.width;\\r\\n\\r\\n      boundaries.top += offsets.top - offsets.marginTop;\\r\\n      boundaries.bottom = height + offsets.top;\\r\\n      boundaries.left += offsets.left - offsets.marginLeft;\\r\\n      boundaries.right = width + offsets.left;\\r\\n    } else {\\r\\n      // for all the other DOM elements, this one is good\\r\\n      boundaries = offsets;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  // Add paddings\\r\\n  padding = padding || 0;\\r\\n  var isPaddingNumber = typeof padding === 'number';\\r\\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0;\\r\\n  boundaries.top += isPaddingNumber ? padding : padding.top || 0;\\r\\n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;\\r\\n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;\\r\\n\\r\\n  return boundaries;\\r\\n}\\r\\n\\r\\nfunction getArea(_ref) {\\r\\n  var width = _ref.width,\\r\\n      height = _ref.height;\\r\\n\\r\\n  return width * height;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Utility used to transform the `auto` placement to the placement with more\\r\\n * available space.\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Object} data - The data object generated by update method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {\\r\\n  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\\r\\n\\r\\n  if (placement.indexOf('auto') === -1) {\\r\\n    return placement;\\r\\n  }\\r\\n\\r\\n  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);\\r\\n\\r\\n  var rects = {\\r\\n    top: {\\r\\n      width: boundaries.width,\\r\\n      height: refRect.top - boundaries.top\\r\\n    },\\r\\n    right: {\\r\\n      width: boundaries.right - refRect.right,\\r\\n      height: boundaries.height\\r\\n    },\\r\\n    bottom: {\\r\\n      width: boundaries.width,\\r\\n      height: boundaries.bottom - refRect.bottom\\r\\n    },\\r\\n    left: {\\r\\n      width: refRect.left - boundaries.left,\\r\\n      height: boundaries.height\\r\\n    }\\r\\n  };\\r\\n\\r\\n  var sortedAreas = Object.keys(rects).map(function (key) {\\r\\n    return _extends({\\r\\n      key: key\\r\\n    }, rects[key], {\\r\\n      area: getArea(rects[key])\\r\\n    });\\r\\n  }).sort(function (a, b) {\\r\\n    return b.area - a.area;\\r\\n  });\\r\\n\\r\\n  var filteredAreas = sortedAreas.filter(function (_ref2) {\\r\\n    var width = _ref2.width,\\r\\n        height = _ref2.height;\\r\\n    return width >= popper.clientWidth && height >= popper.clientHeight;\\r\\n  });\\r\\n\\r\\n  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;\\r\\n\\r\\n  var variation = placement.split('-')[1];\\r\\n\\r\\n  return computedPlacement + (variation ? '-' + variation : '');\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get offsets to the reference element\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {Object} state\\r\\n * @param {Element} popper - the popper element\\r\\n * @param {Element} reference - the reference element (the popper will be relative to this)\\r\\n * @param {Element} fixedPosition - is in fixed position mode\\r\\n * @returns {Object} An object containing the offsets which will be applied to the popper\\r\\n */\\r\\nfunction getReferenceOffsets(state, popper, reference) {\\r\\n  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\\r\\n\\r\\n  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));\\r\\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get the outer sizes of the given element (offset size + margins)\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element\\r\\n * @returns {Object} object containing width and height properties\\r\\n */\\r\\nfunction getOuterSizes(element) {\\r\\n  var window = element.ownerDocument.defaultView;\\r\\n  var styles = window.getComputedStyle(element);\\r\\n  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\\r\\n  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\\r\\n  var result = {\\r\\n    width: element.offsetWidth + y,\\r\\n    height: element.offsetHeight + x\\r\\n  };\\r\\n  return result;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get the opposite placement of the given one\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {String} placement\\r\\n * @returns {String} flipped placement\\r\\n */\\r\\nfunction getOppositePlacement(placement) {\\r\\n  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\\r\\n  return placement.replace(/left|right|bottom|top/g, function (matched) {\\r\\n    return hash[matched];\\r\\n  });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get offsets to the popper\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {Object} position - CSS position the Popper will get applied\\r\\n * @param {HTMLElement} popper - the popper element\\r\\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\\r\\n * @param {String} placement - one of the valid placement options\\r\\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\\r\\n */\\r\\nfunction getPopperOffsets(popper, referenceOffsets, placement) {\\r\\n  placement = placement.split('-')[0];\\r\\n\\r\\n  // Get popper node sizes\\r\\n  var popperRect = getOuterSizes(popper);\\r\\n\\r\\n  // Add position, width and height to our offsets object\\r\\n  var popperOffsets = {\\r\\n    width: popperRect.width,\\r\\n    height: popperRect.height\\r\\n  };\\r\\n\\r\\n  // depending by the popper placement we have to compute its offsets slightly differently\\r\\n  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;\\r\\n  var mainSide = isHoriz ? 'top' : 'left';\\r\\n  var secondarySide = isHoriz ? 'left' : 'top';\\r\\n  var measurement = isHoriz ? 'height' : 'width';\\r\\n  var secondaryMeasurement = !isHoriz ? 'height' : 'width';\\r\\n\\r\\n  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;\\r\\n  if (placement === secondarySide) {\\r\\n    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\\r\\n  } else {\\r\\n    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];\\r\\n  }\\r\\n\\r\\n  return popperOffsets;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Mimics the `find` method of Array\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Array} arr\\r\\n * @argument prop\\r\\n * @argument value\\r\\n * @returns index or -1\\r\\n */\\r\\nfunction find(arr, check) {\\r\\n  // use native find if supported\\r\\n  if (Array.prototype.find) {\\r\\n    return arr.find(check);\\r\\n  }\\r\\n\\r\\n  // use `filter` to obtain the same behavior of `find`\\r\\n  return arr.filter(check)[0];\\r\\n}\\r\\n\\r\\n/**\\r\\n * Return the index of the matching object\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Array} arr\\r\\n * @argument prop\\r\\n * @argument value\\r\\n * @returns index or -1\\r\\n */\\r\\nfunction findIndex(arr, prop, value) {\\r\\n  // use native findIndex if supported\\r\\n  if (Array.prototype.findIndex) {\\r\\n    return arr.findIndex(function (cur) {\\r\\n      return cur[prop] === value;\\r\\n    });\\r\\n  }\\r\\n\\r\\n  // use `find` + `indexOf` if `findIndex` isn't supported\\r\\n  var match = find(arr, function (obj) {\\r\\n    return obj[prop] === value;\\r\\n  });\\r\\n  return arr.indexOf(match);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Loop trough the list of modifiers and run them in order,\\r\\n * each of them will then edit the data object.\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {dataObject} data\\r\\n * @param {Array} modifiers\\r\\n * @param {String} ends - Optional modifier name used as stopper\\r\\n * @returns {dataObject}\\r\\n */\\r\\nfunction runModifiers(modifiers, data, ends) {\\r\\n  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));\\r\\n\\r\\n  modifiersToRun.forEach(function (modifier) {\\r\\n    if (modifier['function']) {\\r\\n      // eslint-disable-line dot-notation\\r\\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\\r\\n    }\\r\\n    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\\r\\n    if (modifier.enabled && isFunction(fn)) {\\r\\n      // Add properties to offsets to make them a complete clientRect object\\r\\n      // we do this before each modifier to make sure the previous one doesn't\\r\\n      // mess with these values\\r\\n      data.offsets.popper = getClientRect(data.offsets.popper);\\r\\n      data.offsets.reference = getClientRect(data.offsets.reference);\\r\\n\\r\\n      data = fn(data, modifier);\\r\\n    }\\r\\n  });\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Updates the position of the popper, computing the new offsets and applying\\r\\n * the new style.<br />\\r\\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\\r\\n * @method\\r\\n * @memberof Popper\\r\\n */\\r\\nfunction update() {\\r\\n  // if popper is destroyed, don't perform any further update\\r\\n  if (this.state.isDestroyed) {\\r\\n    return;\\r\\n  }\\r\\n\\r\\n  var data = {\\r\\n    instance: this,\\r\\n    styles: {},\\r\\n    arrowStyles: {},\\r\\n    attributes: {},\\r\\n    flipped: false,\\r\\n    offsets: {}\\r\\n  };\\r\\n\\r\\n  // compute reference element offsets\\r\\n  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);\\r\\n\\r\\n  // compute auto placement, store placement inside the data object,\\r\\n  // modifiers will be able to edit `placement` if needed\\r\\n  // and refer to originalPlacement to know the original value\\r\\n  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);\\r\\n\\r\\n  // store the computed placement inside `originalPlacement`\\r\\n  data.originalPlacement = data.placement;\\r\\n\\r\\n  data.positionFixed = this.options.positionFixed;\\r\\n\\r\\n  // compute the popper offsets\\r\\n  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);\\r\\n\\r\\n  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';\\r\\n\\r\\n  // run the modifiers\\r\\n  data = runModifiers(this.modifiers, data);\\r\\n\\r\\n  // the first `update` will call `onCreate` callback\\r\\n  // the other ones will call `onUpdate` callback\\r\\n  if (!this.state.isCreated) {\\r\\n    this.state.isCreated = true;\\r\\n    this.options.onCreate(data);\\r\\n  } else {\\r\\n    this.options.onUpdate(data);\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Helper used to know if the given modifier is enabled.\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @returns {Boolean}\\r\\n */\\r\\nfunction isModifierEnabled(modifiers, modifierName) {\\r\\n  return modifiers.some(function (_ref) {\\r\\n    var name = _ref.name,\\r\\n        enabled = _ref.enabled;\\r\\n    return enabled && name === modifierName;\\r\\n  });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get the prefixed supported property name\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {String} property (camelCase)\\r\\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\\r\\n */\\r\\nfunction getSupportedPropertyName(property) {\\r\\n  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\\r\\n  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);\\r\\n\\r\\n  for (var i = 0; i < prefixes.length; i++) {\\r\\n    var prefix = prefixes[i];\\r\\n    var toCheck = prefix ? '' + prefix + upperProp : property;\\r\\n    if (typeof document.body.style[toCheck] !== 'undefined') {\\r\\n      return toCheck;\\r\\n    }\\r\\n  }\\r\\n  return null;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Destroys the popper.\\r\\n * @method\\r\\n * @memberof Popper\\r\\n */\\r\\nfunction destroy() {\\r\\n  this.state.isDestroyed = true;\\r\\n\\r\\n  // touch DOM only if `applyStyle` modifier is enabled\\r\\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\\r\\n    this.popper.removeAttribute('x-placement');\\r\\n    this.popper.style.position = '';\\r\\n    this.popper.style.top = '';\\r\\n    this.popper.style.left = '';\\r\\n    this.popper.style.right = '';\\r\\n    this.popper.style.bottom = '';\\r\\n    this.popper.style.willChange = '';\\r\\n    this.popper.style[getSupportedPropertyName('transform')] = '';\\r\\n  }\\r\\n\\r\\n  this.disableEventListeners();\\r\\n\\r\\n  // remove the popper if user explicitly asked for the deletion on destroy\\r\\n  // do not use `remove` because IE11 doesn't support it\\r\\n  if (this.options.removeOnDestroy) {\\r\\n    this.popper.parentNode.removeChild(this.popper);\\r\\n  }\\r\\n  return this;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get the window associated with the element\\r\\n * @argument {Element} element\\r\\n * @returns {Window}\\r\\n */\\r\\nfunction getWindow(element) {\\r\\n  var ownerDocument = element.ownerDocument;\\r\\n  return ownerDocument ? ownerDocument.defaultView : window;\\r\\n}\\r\\n\\r\\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\\r\\n  var isBody = scrollParent.nodeName === 'BODY';\\r\\n  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\\r\\n  target.addEventListener(event, callback, { passive: true });\\r\\n\\r\\n  if (!isBody) {\\r\\n    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);\\r\\n  }\\r\\n  scrollParents.push(target);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Setup needed event listeners used to update the popper position\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @private\\r\\n */\\r\\nfunction setupEventListeners(reference, options, state, updateBound) {\\r\\n  // Resize event listener on window\\r\\n  state.updateBound = updateBound;\\r\\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\\r\\n\\r\\n  // Scroll event listener on scroll parents\\r\\n  var scrollElement = getScrollParent(reference);\\r\\n  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);\\r\\n  state.scrollElement = scrollElement;\\r\\n  state.eventsEnabled = true;\\r\\n\\r\\n  return state;\\r\\n}\\r\\n\\r\\n/**\\r\\n * It will add resize/scroll events and start recalculating\\r\\n * position of the popper element when they are triggered.\\r\\n * @method\\r\\n * @memberof Popper\\r\\n */\\r\\nfunction enableEventListeners() {\\r\\n  if (!this.state.eventsEnabled) {\\r\\n    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Remove event listeners used to update the popper position\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @private\\r\\n */\\r\\nfunction removeEventListeners(reference, state) {\\r\\n  // Remove resize event listener on window\\r\\n  getWindow(reference).removeEventListener('resize', state.updateBound);\\r\\n\\r\\n  // Remove scroll event listener on scroll parents\\r\\n  state.scrollParents.forEach(function (target) {\\r\\n    target.removeEventListener('scroll', state.updateBound);\\r\\n  });\\r\\n\\r\\n  // Reset state\\r\\n  state.updateBound = null;\\r\\n  state.scrollParents = [];\\r\\n  state.scrollElement = null;\\r\\n  state.eventsEnabled = false;\\r\\n  return state;\\r\\n}\\r\\n\\r\\n/**\\r\\n * It will remove resize/scroll events and won't recalculate popper position\\r\\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\\r\\n * unless you call `update` method manually.\\r\\n * @method\\r\\n * @memberof Popper\\r\\n */\\r\\nfunction disableEventListeners() {\\r\\n  if (this.state.eventsEnabled) {\\r\\n    cancelAnimationFrame(this.scheduleUpdate);\\r\\n    this.state = removeEventListeners(this.reference, this.state);\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Tells if a given input is a number\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {*} input to check\\r\\n * @return {Boolean}\\r\\n */\\r\\nfunction isNumeric(n) {\\r\\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the style to the given popper\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element - Element to apply the style to\\r\\n * @argument {Object} styles\\r\\n * Object with a list of properties and values which will be applied to the element\\r\\n */\\r\\nfunction setStyles(element, styles) {\\r\\n  Object.keys(styles).forEach(function (prop) {\\r\\n    var unit = '';\\r\\n    // add unit if the value is numeric and is one of the following\\r\\n    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {\\r\\n      unit = 'px';\\r\\n    }\\r\\n    element.style[prop] = styles[prop] + unit;\\r\\n  });\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the attributes to the given popper\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Element} element - Element to apply the attributes to\\r\\n * @argument {Object} styles\\r\\n * Object with a list of properties and values which will be applied to the element\\r\\n */\\r\\nfunction setAttributes(element, attributes) {\\r\\n  Object.keys(attributes).forEach(function (prop) {\\r\\n    var value = attributes[prop];\\r\\n    if (value !== false) {\\r\\n      element.setAttribute(prop, attributes[prop]);\\r\\n    } else {\\r\\n      element.removeAttribute(prop);\\r\\n    }\\r\\n  });\\r\\n}\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by `update` method\\r\\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\\r\\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The same data object\\r\\n */\\r\\nfunction applyStyle(data) {\\r\\n  // any property present in `data.styles` will be applied to the popper,\\r\\n  // in this way we can make the 3rd party modifiers add custom styles to it\\r\\n  // Be aware, modifiers could override the properties defined in the previous\\r\\n  // lines of this modifier!\\r\\n  setStyles(data.instance.popper, data.styles);\\r\\n\\r\\n  // any property present in `data.attributes` will be applied to the popper,\\r\\n  // they will be set as HTML attributes of the element\\r\\n  setAttributes(data.instance.popper, data.attributes);\\r\\n\\r\\n  // if arrowElement is defined and arrowStyles has some properties\\r\\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\\r\\n    setStyles(data.arrowElement, data.arrowStyles);\\r\\n  }\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Set the x-placement attribute before everything else because it could be used\\r\\n * to add margins to the popper margins needs to be calculated to get the\\r\\n * correct popper offsets.\\r\\n * @method\\r\\n * @memberof Popper.modifiers\\r\\n * @param {HTMLElement} reference - The reference element used to position the popper\\r\\n * @param {HTMLElement} popper - The HTML element used as popper\\r\\n * @param {Object} options - Popper.js options\\r\\n */\\r\\nfunction applyStyleOnLoad(reference, popper, options, modifierOptions, state) {\\r\\n  // compute reference element offsets\\r\\n  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\\r\\n\\r\\n  // compute auto placement, store placement inside the data object,\\r\\n  // modifiers will be able to edit `placement` if needed\\r\\n  // and refer to originalPlacement to know the original value\\r\\n  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);\\r\\n\\r\\n  popper.setAttribute('x-placement', placement);\\r\\n\\r\\n  // Apply `position` to popper before anything else because\\r\\n  // without the position applied we can't guarantee correct computations\\r\\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\\r\\n\\r\\n  return options;\\r\\n}\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Popper.Utils\\r\\n * @argument {Object} data - The data object generated by `update` method\\r\\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\\r\\n * @returns {Object} The popper's position offsets rounded\\r\\n *\\r\\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\\r\\n * good as it can be within reason.\\r\\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\\r\\n *\\r\\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\\r\\n * as well on High DPI screens).\\r\\n *\\r\\n * Firefox prefers no rounding for positioning and does not have blurriness on\\r\\n * high DPI screens.\\r\\n *\\r\\n * Only horizontal placement and left/right values need to be considered.\\r\\n */\\r\\nfunction getRoundedOffsets(data, shouldRound) {\\r\\n  var _data$offsets = data.offsets,\\r\\n      popper = _data$offsets.popper,\\r\\n      reference = _data$offsets.reference;\\r\\n  var round = Math.round,\\r\\n      floor = Math.floor;\\r\\n\\r\\n  var noRound = function noRound(v) {\\r\\n    return v;\\r\\n  };\\r\\n\\r\\n  var referenceWidth = round(reference.width);\\r\\n  var popperWidth = round(popper.width);\\r\\n\\r\\n  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\\r\\n  var isVariation = data.placement.indexOf('-') !== -1;\\r\\n  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;\\r\\n  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\\r\\n\\r\\n  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;\\r\\n  var verticalToInteger = !shouldRound ? noRound : round;\\r\\n\\r\\n  return {\\r\\n    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),\\r\\n    top: verticalToInteger(popper.top),\\r\\n    bottom: verticalToInteger(popper.bottom),\\r\\n    right: horizontalToInteger(popper.right)\\r\\n  };\\r\\n}\\r\\n\\r\\nvar isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by `update` method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction computeStyle(data, options) {\\r\\n  var x = options.x,\\r\\n      y = options.y;\\r\\n  var popper = data.offsets.popper;\\r\\n\\r\\n  // Remove this legacy support in Popper.js v2\\r\\n\\r\\n  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {\\r\\n    return modifier.name === 'applyStyle';\\r\\n  }).gpuAcceleration;\\r\\n  if (legacyGpuAccelerationOption !== undefined) {\\r\\n    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');\\r\\n  }\\r\\n  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;\\r\\n\\r\\n  var offsetParent = getOffsetParent(data.instance.popper);\\r\\n  var offsetParentRect = getBoundingClientRect(offsetParent);\\r\\n\\r\\n  // Styles\\r\\n  var styles = {\\r\\n    position: popper.position\\r\\n  };\\r\\n\\r\\n  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);\\r\\n\\r\\n  var sideA = x === 'bottom' ? 'top' : 'bottom';\\r\\n  var sideB = y === 'right' ? 'left' : 'right';\\r\\n\\r\\n  // if gpuAcceleration is set to `true` and transform is supported,\\r\\n  //  we use `translate3d` to apply the position to the popper we\\r\\n  // automatically use the supported prefixed version if needed\\r\\n  var prefixedProperty = getSupportedPropertyName('transform');\\r\\n\\r\\n  // now, let's make a step back and look at this code closely (wtf?)\\r\\n  // If the content of the popper grows once it's been positioned, it\\r\\n  // may happen that the popper gets misplaced because of the new content\\r\\n  // overflowing its reference element\\r\\n  // To avoid this problem, we provide two options (x and y), which allow\\r\\n  // the consumer to define the offset origin.\\r\\n  // If we position a popper on top of a reference element, we can set\\r\\n  // `x` to `top` to make the popper grow towards its top instead of\\r\\n  // its bottom.\\r\\n  var left = void 0,\\r\\n      top = void 0;\\r\\n  if (sideA === 'bottom') {\\r\\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\\r\\n    // and not the bottom of the html element\\r\\n    if (offsetParent.nodeName === 'HTML') {\\r\\n      top = -offsetParent.clientHeight + offsets.bottom;\\r\\n    } else {\\r\\n      top = -offsetParentRect.height + offsets.bottom;\\r\\n    }\\r\\n  } else {\\r\\n    top = offsets.top;\\r\\n  }\\r\\n  if (sideB === 'right') {\\r\\n    if (offsetParent.nodeName === 'HTML') {\\r\\n      left = -offsetParent.clientWidth + offsets.right;\\r\\n    } else {\\r\\n      left = -offsetParentRect.width + offsets.right;\\r\\n    }\\r\\n  } else {\\r\\n    left = offsets.left;\\r\\n  }\\r\\n  if (gpuAcceleration && prefixedProperty) {\\r\\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\\r\\n    styles[sideA] = 0;\\r\\n    styles[sideB] = 0;\\r\\n    styles.willChange = 'transform';\\r\\n  } else {\\r\\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\\r\\n    var invertTop = sideA === 'bottom' ? -1 : 1;\\r\\n    var invertLeft = sideB === 'right' ? -1 : 1;\\r\\n    styles[sideA] = top * invertTop;\\r\\n    styles[sideB] = left * invertLeft;\\r\\n    styles.willChange = sideA + ', ' + sideB;\\r\\n  }\\r\\n\\r\\n  // Attributes\\r\\n  var attributes = {\\r\\n    'x-placement': data.placement\\r\\n  };\\r\\n\\r\\n  // Update `data` attributes, styles and arrowStyles\\r\\n  data.attributes = _extends({}, attributes, data.attributes);\\r\\n  data.styles = _extends({}, styles, data.styles);\\r\\n  data.arrowStyles = _extends({}, data.offsets.arrow, data.arrowStyles);\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Helper used to know if the given modifier depends from another one.<br />\\r\\n * It checks if the needed modifier is listed and enabled.\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @param {Array} modifiers - list of modifiers\\r\\n * @param {String} requestingName - name of requesting modifier\\r\\n * @param {String} requestedName - name of requested modifier\\r\\n * @returns {Boolean}\\r\\n */\\r\\nfunction isModifierRequired(modifiers, requestingName, requestedName) {\\r\\n  var requesting = find(modifiers, function (_ref) {\\r\\n    var name = _ref.name;\\r\\n    return name === requestingName;\\r\\n  });\\r\\n\\r\\n  var isRequired = !!requesting && modifiers.some(function (modifier) {\\r\\n    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;\\r\\n  });\\r\\n\\r\\n  if (!isRequired) {\\r\\n    var _requesting = '`' + requestingName + '`';\\r\\n    var requested = '`' + requestedName + '`';\\r\\n    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');\\r\\n  }\\r\\n  return isRequired;\\r\\n}\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by update method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction arrow(data, options) {\\r\\n  var _data$offsets$arrow;\\r\\n\\r\\n  // arrow depends on keepTogether in order to work\\r\\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\\r\\n    return data;\\r\\n  }\\r\\n\\r\\n  var arrowElement = options.element;\\r\\n\\r\\n  // if arrowElement is a string, suppose it's a CSS selector\\r\\n  if (typeof arrowElement === 'string') {\\r\\n    arrowElement = data.instance.popper.querySelector(arrowElement);\\r\\n\\r\\n    // if arrowElement is not found, don't run the modifier\\r\\n    if (!arrowElement) {\\r\\n      return data;\\r\\n    }\\r\\n  } else {\\r\\n    // if the arrowElement isn't a query selector we must check that the\\r\\n    // provided DOM node is child of its popper node\\r\\n    if (!data.instance.popper.contains(arrowElement)) {\\r\\n      console.warn('WARNING: `arrow.element` must be child of its popper element!');\\r\\n      return data;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  var placement = data.placement.split('-')[0];\\r\\n  var _data$offsets = data.offsets,\\r\\n      popper = _data$offsets.popper,\\r\\n      reference = _data$offsets.reference;\\r\\n\\r\\n  var isVertical = ['left', 'right'].indexOf(placement) !== -1;\\r\\n\\r\\n  var len = isVertical ? 'height' : 'width';\\r\\n  var sideCapitalized = isVertical ? 'Top' : 'Left';\\r\\n  var side = sideCapitalized.toLowerCase();\\r\\n  var altSide = isVertical ? 'left' : 'top';\\r\\n  var opSide = isVertical ? 'bottom' : 'right';\\r\\n  var arrowElementSize = getOuterSizes(arrowElement)[len];\\r\\n\\r\\n  //\\r\\n  // extends keepTogether behavior making sure the popper and its\\r\\n  // reference have enough pixels in conjunction\\r\\n  //\\r\\n\\r\\n  // top/left side\\r\\n  if (reference[opSide] - arrowElementSize < popper[side]) {\\r\\n    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);\\r\\n  }\\r\\n  // bottom/right side\\r\\n  if (reference[side] + arrowElementSize > popper[opSide]) {\\r\\n    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];\\r\\n  }\\r\\n  data.offsets.popper = getClientRect(data.offsets.popper);\\r\\n\\r\\n  // compute center of the popper\\r\\n  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\\r\\n\\r\\n  // Compute the sideValue using the updated popper offsets\\r\\n  // take popper margin in account because we don't have this info available\\r\\n  var css = getStyleComputedProperty(data.instance.popper);\\r\\n  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);\\r\\n  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);\\r\\n  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\\r\\n\\r\\n  // prevent arrowElement from being placed not contiguously to its popper\\r\\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\\r\\n\\r\\n  data.arrowElement = arrowElement;\\r\\n  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Get the opposite placement variation of the given one\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {String} placement variation\\r\\n * @returns {String} flipped placement variation\\r\\n */\\r\\nfunction getOppositeVariation(variation) {\\r\\n  if (variation === 'end') {\\r\\n    return 'start';\\r\\n  } else if (variation === 'start') {\\r\\n    return 'end';\\r\\n  }\\r\\n  return variation;\\r\\n}\\r\\n\\r\\n/**\\r\\n * List of accepted placements to use as values of the `placement` option.<br />\\r\\n * Valid placements are:\\r\\n * - `auto`\\r\\n * - `top`\\r\\n * - `right`\\r\\n * - `bottom`\\r\\n * - `left`\\r\\n *\\r\\n * Each placement can have a variation from this list:\\r\\n * - `-start`\\r\\n * - `-end`\\r\\n *\\r\\n * Variations are interpreted easily if you think of them as the left to right\\r\\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\\r\\n * is right.<br />\\r\\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\\r\\n *\\r\\n * Some valid examples are:\\r\\n * - `top-end` (on top of reference, right aligned)\\r\\n * - `right-start` (on right of reference, top aligned)\\r\\n * - `bottom` (on bottom, centered)\\r\\n * - `auto-end` (on the side with more space available, alignment depends by placement)\\r\\n *\\r\\n * @static\\r\\n * @type {Array}\\r\\n * @enum {String}\\r\\n * @readonly\\r\\n * @method placements\\r\\n * @memberof Popper\\r\\n */\\r\\nvar placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];\\r\\n\\r\\n// Get rid of `auto` `auto-start` and `auto-end`\\r\\nvar validPlacements = placements.slice(3);\\r\\n\\r\\n/**\\r\\n * Given an initial placement, returns all the subsequent placements\\r\\n * clockwise (or counter-clockwise).\\r\\n *\\r\\n * @method\\r\\n * @memberof Popper.Utils\\r\\n * @argument {String} placement - A valid placement (it accepts variations)\\r\\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\\r\\n * @returns {Array} placements including their variations\\r\\n */\\r\\nfunction clockwise(placement) {\\r\\n  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\\r\\n\\r\\n  var index = validPlacements.indexOf(placement);\\r\\n  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));\\r\\n  return counter ? arr.reverse() : arr;\\r\\n}\\r\\n\\r\\nvar BEHAVIORS = {\\r\\n  FLIP: 'flip',\\r\\n  CLOCKWISE: 'clockwise',\\r\\n  COUNTERCLOCKWISE: 'counterclockwise'\\r\\n};\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by update method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction flip(data, options) {\\r\\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\\r\\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\\r\\n    return data;\\r\\n  }\\r\\n\\r\\n  if (data.flipped && data.placement === data.originalPlacement) {\\r\\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\\r\\n    return data;\\r\\n  }\\r\\n\\r\\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);\\r\\n\\r\\n  var placement = data.placement.split('-')[0];\\r\\n  var placementOpposite = getOppositePlacement(placement);\\r\\n  var variation = data.placement.split('-')[1] || '';\\r\\n\\r\\n  var flipOrder = [];\\r\\n\\r\\n  switch (options.behavior) {\\r\\n    case BEHAVIORS.FLIP:\\r\\n      flipOrder = [placement, placementOpposite];\\r\\n      break;\\r\\n    case BEHAVIORS.CLOCKWISE:\\r\\n      flipOrder = clockwise(placement);\\r\\n      break;\\r\\n    case BEHAVIORS.COUNTERCLOCKWISE:\\r\\n      flipOrder = clockwise(placement, true);\\r\\n      break;\\r\\n    default:\\r\\n      flipOrder = options.behavior;\\r\\n  }\\r\\n\\r\\n  flipOrder.forEach(function (step, index) {\\r\\n    if (placement !== step || flipOrder.length === index + 1) {\\r\\n      return data;\\r\\n    }\\r\\n\\r\\n    placement = data.placement.split('-')[0];\\r\\n    placementOpposite = getOppositePlacement(placement);\\r\\n\\r\\n    var popperOffsets = data.offsets.popper;\\r\\n    var refOffsets = data.offsets.reference;\\r\\n\\r\\n    // using floor because the reference offsets may contain decimals we are not going to consider here\\r\\n    var floor = Math.floor;\\r\\n    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);\\r\\n\\r\\n    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\\r\\n    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\\r\\n    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\\r\\n    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);\\r\\n\\r\\n    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;\\r\\n\\r\\n    // flip the variation if required\\r\\n    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\\r\\n\\r\\n    // flips variation if reference element overflows boundaries\\r\\n    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);\\r\\n\\r\\n    // flips variation if popper content overflows boundaries\\r\\n    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);\\r\\n\\r\\n    var flippedVariation = flippedVariationByRef || flippedVariationByContent;\\r\\n\\r\\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\\r\\n      // this boolean to detect any flip loop\\r\\n      data.flipped = true;\\r\\n\\r\\n      if (overlapsRef || overflowsBoundaries) {\\r\\n        placement = flipOrder[index + 1];\\r\\n      }\\r\\n\\r\\n      if (flippedVariation) {\\r\\n        variation = getOppositeVariation(variation);\\r\\n      }\\r\\n\\r\\n      data.placement = placement + (variation ? '-' + variation : '');\\r\\n\\r\\n      // this object contains `position`, we want to preserve it along with\\r\\n      // any additional property we may add in the future\\r\\n      data.offsets.popper = _extends({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));\\r\\n\\r\\n      data = runModifiers(data.instance.modifiers, data, 'flip');\\r\\n    }\\r\\n  });\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by update method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction keepTogether(data) {\\r\\n  var _data$offsets = data.offsets,\\r\\n      popper = _data$offsets.popper,\\r\\n      reference = _data$offsets.reference;\\r\\n\\r\\n  var placement = data.placement.split('-')[0];\\r\\n  var floor = Math.floor;\\r\\n  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\\r\\n  var side = isVertical ? 'right' : 'bottom';\\r\\n  var opSide = isVertical ? 'left' : 'top';\\r\\n  var measurement = isVertical ? 'width' : 'height';\\r\\n\\r\\n  if (popper[side] < floor(reference[opSide])) {\\r\\n    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];\\r\\n  }\\r\\n  if (popper[opSide] > floor(reference[side])) {\\r\\n    data.offsets.popper[opSide] = floor(reference[side]);\\r\\n  }\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Converts a string containing value + unit into a px value number\\r\\n * @function\\r\\n * @memberof {modifiers~offset}\\r\\n * @private\\r\\n * @argument {String} str - Value + unit string\\r\\n * @argument {String} measurement - `height` or `width`\\r\\n * @argument {Object} popperOffsets\\r\\n * @argument {Object} referenceOffsets\\r\\n * @returns {Number|String}\\r\\n * Value in pixels, or original string if no values were extracted\\r\\n */\\r\\nfunction toValue(str, measurement, popperOffsets, referenceOffsets) {\\r\\n  // separate value from unit\\r\\n  var split = str.match(/((?:\\\\-|\\\\+)?\\\\d*\\\\.?\\\\d*)(.*)/);\\r\\n  var value = +split[1];\\r\\n  var unit = split[2];\\r\\n\\r\\n  // If it's not a number it's an operator, I guess\\r\\n  if (!value) {\\r\\n    return str;\\r\\n  }\\r\\n\\r\\n  if (unit.indexOf('%') === 0) {\\r\\n    var element = void 0;\\r\\n    switch (unit) {\\r\\n      case '%p':\\r\\n        element = popperOffsets;\\r\\n        break;\\r\\n      case '%':\\r\\n      case '%r':\\r\\n      default:\\r\\n        element = referenceOffsets;\\r\\n    }\\r\\n\\r\\n    var rect = getClientRect(element);\\r\\n    return rect[measurement] / 100 * value;\\r\\n  } else if (unit === 'vh' || unit === 'vw') {\\r\\n    // if is a vh or vw, we calculate the size based on the viewport\\r\\n    var size = void 0;\\r\\n    if (unit === 'vh') {\\r\\n      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\\r\\n    } else {\\r\\n      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\\r\\n    }\\r\\n    return size / 100 * value;\\r\\n  } else {\\r\\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\\r\\n    // if is an implicit unit, it's px, and we return just the value\\r\\n    return value;\\r\\n  }\\r\\n}\\r\\n\\r\\n/**\\r\\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\\r\\n * @function\\r\\n * @memberof {modifiers~offset}\\r\\n * @private\\r\\n * @argument {String} offset\\r\\n * @argument {Object} popperOffsets\\r\\n * @argument {Object} referenceOffsets\\r\\n * @argument {String} basePlacement\\r\\n * @returns {Array} a two cells array with x and y offsets in numbers\\r\\n */\\r\\nfunction parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {\\r\\n  var offsets = [0, 0];\\r\\n\\r\\n  // Use height if placement is left or right and index is 0 otherwise use width\\r\\n  // in this way the first offset will use an axis and the second one\\r\\n  // will use the other one\\r\\n  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\\r\\n\\r\\n  // Split the offset string to obtain a list of values and operands\\r\\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\\r\\n  var fragments = offset.split(/(\\\\+|\\\\-)/).map(function (frag) {\\r\\n    return frag.trim();\\r\\n  });\\r\\n\\r\\n  // Detect if the offset string contains a pair of values or a single one\\r\\n  // they could be separated by comma or space\\r\\n  var divider = fragments.indexOf(find(fragments, function (frag) {\\r\\n    return frag.search(/,|\\\\s/) !== -1;\\r\\n  }));\\r\\n\\r\\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\\r\\n    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');\\r\\n  }\\r\\n\\r\\n  // If divider is found, we divide the list of values and operands to divide\\r\\n  // them by ofset X and Y.\\r\\n  var splitRegex = /\\\\s*,\\\\s*|\\\\s+/;\\r\\n  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];\\r\\n\\r\\n  // Convert the values with units to absolute pixels to allow our computations\\r\\n  ops = ops.map(function (op, index) {\\r\\n    // Most of the units rely on the orientation of the popper\\r\\n    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';\\r\\n    var mergeWithPrevious = false;\\r\\n    return op\\r\\n    // This aggregates any `+` or `-` sign that aren't considered operators\\r\\n    // e.g.: 10 + +5 => [10, +, +5]\\r\\n    .reduce(function (a, b) {\\r\\n      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\\r\\n        a[a.length - 1] = b;\\r\\n        mergeWithPrevious = true;\\r\\n        return a;\\r\\n      } else if (mergeWithPrevious) {\\r\\n        a[a.length - 1] += b;\\r\\n        mergeWithPrevious = false;\\r\\n        return a;\\r\\n      } else {\\r\\n        return a.concat(b);\\r\\n      }\\r\\n    }, [])\\r\\n    // Here we convert the string values into number values (in px)\\r\\n    .map(function (str) {\\r\\n      return toValue(str, measurement, popperOffsets, referenceOffsets);\\r\\n    });\\r\\n  });\\r\\n\\r\\n  // Loop trough the offsets arrays and execute the operations\\r\\n  ops.forEach(function (op, index) {\\r\\n    op.forEach(function (frag, index2) {\\r\\n      if (isNumeric(frag)) {\\r\\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\\r\\n      }\\r\\n    });\\r\\n  });\\r\\n  return offsets;\\r\\n}\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by update method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @argument {Number|String} options.offset=0\\r\\n * The offset value as described in the modifier description\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction offset(data, _ref) {\\r\\n  var offset = _ref.offset;\\r\\n  var placement = data.placement,\\r\\n      _data$offsets = data.offsets,\\r\\n      popper = _data$offsets.popper,\\r\\n      reference = _data$offsets.reference;\\r\\n\\r\\n  var basePlacement = placement.split('-')[0];\\r\\n\\r\\n  var offsets = void 0;\\r\\n  if (isNumeric(+offset)) {\\r\\n    offsets = [+offset, 0];\\r\\n  } else {\\r\\n    offsets = parseOffset(offset, popper, reference, basePlacement);\\r\\n  }\\r\\n\\r\\n  if (basePlacement === 'left') {\\r\\n    popper.top += offsets[0];\\r\\n    popper.left -= offsets[1];\\r\\n  } else if (basePlacement === 'right') {\\r\\n    popper.top += offsets[0];\\r\\n    popper.left += offsets[1];\\r\\n  } else if (basePlacement === 'top') {\\r\\n    popper.left += offsets[0];\\r\\n    popper.top -= offsets[1];\\r\\n  } else if (basePlacement === 'bottom') {\\r\\n    popper.left += offsets[0];\\r\\n    popper.top += offsets[1];\\r\\n  }\\r\\n\\r\\n  data.popper = popper;\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by `update` method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction preventOverflow(data, options) {\\r\\n  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);\\r\\n\\r\\n  // If offsetParent is the reference element, we really want to\\r\\n  // go one step up and use the next offsetParent as reference to\\r\\n  // avoid to make this modifier completely useless and look like broken\\r\\n  if (data.instance.reference === boundariesElement) {\\r\\n    boundariesElement = getOffsetParent(boundariesElement);\\r\\n  }\\r\\n\\r\\n  // NOTE: DOM access here\\r\\n  // resets the popper's position so that the document size can be calculated excluding\\r\\n  // the size of the popper element itself\\r\\n  var transformProp = getSupportedPropertyName('transform');\\r\\n  var popperStyles = data.instance.popper.style; // assignment to help minification\\r\\n  var top = popperStyles.top,\\r\\n      left = popperStyles.left,\\r\\n      transform = popperStyles[transformProp];\\r\\n\\r\\n  popperStyles.top = '';\\r\\n  popperStyles.left = '';\\r\\n  popperStyles[transformProp] = '';\\r\\n\\r\\n  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);\\r\\n\\r\\n  // NOTE: DOM access here\\r\\n  // restores the original style properties after the offsets have been computed\\r\\n  popperStyles.top = top;\\r\\n  popperStyles.left = left;\\r\\n  popperStyles[transformProp] = transform;\\r\\n\\r\\n  options.boundaries = boundaries;\\r\\n\\r\\n  var order = options.priority;\\r\\n  var popper = data.offsets.popper;\\r\\n\\r\\n  var check = {\\r\\n    primary: function primary(placement) {\\r\\n      var value = popper[placement];\\r\\n      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {\\r\\n        value = Math.max(popper[placement], boundaries[placement]);\\r\\n      }\\r\\n      return defineProperty({}, placement, value);\\r\\n    },\\r\\n    secondary: function secondary(placement) {\\r\\n      var mainSide = placement === 'right' ? 'left' : 'top';\\r\\n      var value = popper[mainSide];\\r\\n      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {\\r\\n        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));\\r\\n      }\\r\\n      return defineProperty({}, mainSide, value);\\r\\n    }\\r\\n  };\\r\\n\\r\\n  order.forEach(function (placement) {\\r\\n    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\\r\\n    popper = _extends({}, popper, check[side](placement));\\r\\n  });\\r\\n\\r\\n  data.offsets.popper = popper;\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by `update` method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction shift(data) {\\r\\n  var placement = data.placement;\\r\\n  var basePlacement = placement.split('-')[0];\\r\\n  var shiftvariation = placement.split('-')[1];\\r\\n\\r\\n  // if shift shiftvariation is specified, run the modifier\\r\\n  if (shiftvariation) {\\r\\n    var _data$offsets = data.offsets,\\r\\n        reference = _data$offsets.reference,\\r\\n        popper = _data$offsets.popper;\\r\\n\\r\\n    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\\r\\n    var side = isVertical ? 'left' : 'top';\\r\\n    var measurement = isVertical ? 'width' : 'height';\\r\\n\\r\\n    var shiftOffsets = {\\r\\n      start: defineProperty({}, side, reference[side]),\\r\\n      end: defineProperty({}, side, reference[side] + reference[measurement] - popper[measurement])\\r\\n    };\\r\\n\\r\\n    data.offsets.popper = _extends({}, popper, shiftOffsets[shiftvariation]);\\r\\n  }\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by update method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction hide(data) {\\r\\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\\r\\n    return data;\\r\\n  }\\r\\n\\r\\n  var refRect = data.offsets.reference;\\r\\n  var bound = find(data.instance.modifiers, function (modifier) {\\r\\n    return modifier.name === 'preventOverflow';\\r\\n  }).boundaries;\\r\\n\\r\\n  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {\\r\\n    // Avoid unnecessary DOM access if visibility hasn't changed\\r\\n    if (data.hide === true) {\\r\\n      return data;\\r\\n    }\\r\\n\\r\\n    data.hide = true;\\r\\n    data.attributes['x-out-of-boundaries'] = '';\\r\\n  } else {\\r\\n    // Avoid unnecessary DOM access if visibility hasn't changed\\r\\n    if (data.hide === false) {\\r\\n      return data;\\r\\n    }\\r\\n\\r\\n    data.hide = false;\\r\\n    data.attributes['x-out-of-boundaries'] = false;\\r\\n  }\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * @function\\r\\n * @memberof Modifiers\\r\\n * @argument {Object} data - The data object generated by `update` method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {Object} The data object, properly modified\\r\\n */\\r\\nfunction inner(data) {\\r\\n  var placement = data.placement;\\r\\n  var basePlacement = placement.split('-')[0];\\r\\n  var _data$offsets = data.offsets,\\r\\n      popper = _data$offsets.popper,\\r\\n      reference = _data$offsets.reference;\\r\\n\\r\\n  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\\r\\n\\r\\n  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\\r\\n\\r\\n  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\\r\\n\\r\\n  data.placement = getOppositePlacement(placement);\\r\\n  data.offsets.popper = getClientRect(popper);\\r\\n\\r\\n  return data;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Modifier function, each modifier can have a function of this type assigned\\r\\n * to its `fn` property.<br />\\r\\n * These functions will be called on each update, this means that you must\\r\\n * make sure they are performant enough to avoid performance bottlenecks.\\r\\n *\\r\\n * @function ModifierFn\\r\\n * @argument {dataObject} data - The data object generated by `update` method\\r\\n * @argument {Object} options - Modifiers configuration and options\\r\\n * @returns {dataObject} The data object, properly modified\\r\\n */\\r\\n\\r\\n/**\\r\\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\\r\\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\\r\\n * needed by the library.\\r\\n *\\r\\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\\r\\n * All the other properties are configurations that could be tweaked.\\r\\n * @namespace modifiers\\r\\n */\\r\\nvar modifiers = {\\r\\n  /**\\r\\n   * Modifier used to shift the popper on the start or end of its reference\\r\\n   * element.<br />\\r\\n   * It will read the variation of the `placement` property.<br />\\r\\n   * It can be one either `-end` or `-start`.\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  shift: {\\r\\n    /** @prop {number} order=100 - Index used to define the order of execution */\\r\\n    order: 100,\\r\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\r\\n    enabled: true,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: shift\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * The `offset` modifier can shift your popper on both its axis.\\r\\n   *\\r\\n   * It accepts the following units:\\r\\n   * - `px` or unit-less, interpreted as pixels\\r\\n   * - `%` or `%r`, percentage relative to the length of the reference element\\r\\n   * - `%p`, percentage relative to the length of the popper element\\r\\n   * - `vw`, CSS viewport width unit\\r\\n   * - `vh`, CSS viewport height unit\\r\\n   *\\r\\n   * For length is intended the main axis relative to the placement of the popper.<br />\\r\\n   * This means that if the placement is `top` or `bottom`, the length will be the\\r\\n   * `width`. In case of `left` or `right`, it will be the `height`.\\r\\n   *\\r\\n   * You can provide a single value (as `Number` or `String`), or a pair of values\\r\\n   * as `String` divided by a comma or one (or more) white spaces.<br />\\r\\n   * The latter is a deprecated method because it leads to confusion and will be\\r\\n   * removed in v2.<br />\\r\\n   * Additionally, it accepts additions and subtractions between different units.\\r\\n   * Note that multiplications and divisions aren't supported.\\r\\n   *\\r\\n   * Valid examples are:\\r\\n   * ```\\r\\n   * 10\\r\\n   * '10%'\\r\\n   * '10, 10'\\r\\n   * '10%, 10'\\r\\n   * '10 + 10%'\\r\\n   * '10 - 5vh + 3%'\\r\\n   * '-10px + 5vh, 5px - 6%'\\r\\n   * ```\\r\\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\\r\\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\\r\\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\\r\\n   *\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  offset: {\\r\\n    /** @prop {number} order=200 - Index used to define the order of execution */\\r\\n    order: 200,\\r\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\r\\n    enabled: true,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: offset,\\r\\n    /** @prop {Number|String} offset=0\\r\\n     * The offset value as described in the modifier description\\r\\n     */\\r\\n    offset: 0\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Modifier used to prevent the popper from being positioned outside the boundary.\\r\\n   *\\r\\n   * A scenario exists where the reference itself is not within the boundaries.<br />\\r\\n   * We can say it has \\\"escaped the boundaries\\\" — or just \\\"escaped\\\".<br />\\r\\n   * In this case we need to decide whether the popper should either:\\r\\n   *\\r\\n   * - detach from the reference and remain \\\"trapped\\\" in the boundaries, or\\r\\n   * - if it should ignore the boundary and \\\"escape with its reference\\\"\\r\\n   *\\r\\n   * When `escapeWithReference` is set to`true` and reference is completely\\r\\n   * outside its boundaries, the popper will overflow (or completely leave)\\r\\n   * the boundaries in order to remain attached to the edge of the reference.\\r\\n   *\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  preventOverflow: {\\r\\n    /** @prop {number} order=300 - Index used to define the order of execution */\\r\\n    order: 300,\\r\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\r\\n    enabled: true,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: preventOverflow,\\r\\n    /**\\r\\n     * @prop {Array} [priority=['left','right','top','bottom']]\\r\\n     * Popper will try to prevent overflow following these priorities by default,\\r\\n     * then, it could overflow on the left and on top of the `boundariesElement`\\r\\n     */\\r\\n    priority: ['left', 'right', 'top', 'bottom'],\\r\\n    /**\\r\\n     * @prop {number} padding=5\\r\\n     * Amount of pixel used to define a minimum distance between the boundaries\\r\\n     * and the popper. This makes sure the popper always has a little padding\\r\\n     * between the edges of its container\\r\\n     */\\r\\n    padding: 5,\\r\\n    /**\\r\\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\\r\\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\\r\\n     * `viewport` or any DOM element.\\r\\n     */\\r\\n    boundariesElement: 'scrollParent'\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Modifier used to make sure the reference and its popper stay near each other\\r\\n   * without leaving any gap between the two. Especially useful when the arrow is\\r\\n   * enabled and you want to ensure that it points to its reference element.\\r\\n   * It cares only about the first axis. You can still have poppers with margin\\r\\n   * between the popper and its reference element.\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  keepTogether: {\\r\\n    /** @prop {number} order=400 - Index used to define the order of execution */\\r\\n    order: 400,\\r\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\r\\n    enabled: true,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: keepTogether\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * This modifier is used to move the `arrowElement` of the popper to make\\r\\n   * sure it is positioned between the reference element and its popper element.\\r\\n   * It will read the outer size of the `arrowElement` node to detect how many\\r\\n   * pixels of conjunction are needed.\\r\\n   *\\r\\n   * It has no effect if no `arrowElement` is provided.\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  arrow: {\\r\\n    /** @prop {number} order=500 - Index used to define the order of execution */\\r\\n    order: 500,\\r\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\r\\n    enabled: true,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: arrow,\\r\\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\\r\\n    element: '[x-arrow]'\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Modifier used to flip the popper's placement when it starts to overlap its\\r\\n   * reference element.\\r\\n   *\\r\\n   * Requires the `preventOverflow` modifier before it in order to work.\\r\\n   *\\r\\n   * **NOTE:** this modifier will interrupt the current update cycle and will\\r\\n   * restart it if it detects the need to flip the placement.\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  flip: {\\r\\n    /** @prop {number} order=600 - Index used to define the order of execution */\\r\\n    order: 600,\\r\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\r\\n    enabled: true,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: flip,\\r\\n    /**\\r\\n     * @prop {String|Array} behavior='flip'\\r\\n     * The behavior used to change the popper's placement. It can be one of\\r\\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\\r\\n     * placements (with optional variations)\\r\\n     */\\r\\n    behavior: 'flip',\\r\\n    /**\\r\\n     * @prop {number} padding=5\\r\\n     * The popper will flip if it hits the edges of the `boundariesElement`\\r\\n     */\\r\\n    padding: 5,\\r\\n    /**\\r\\n     * @prop {String|HTMLElement} boundariesElement='viewport'\\r\\n     * The element which will define the boundaries of the popper position.\\r\\n     * The popper will never be placed outside of the defined boundaries\\r\\n     * (except if `keepTogether` is enabled)\\r\\n     */\\r\\n    boundariesElement: 'viewport',\\r\\n    /**\\r\\n     * @prop {Boolean} flipVariations=false\\r\\n     * The popper will switch placement variation between `-start` and `-end` when\\r\\n     * the reference element overlaps its boundaries.\\r\\n     *\\r\\n     * The original placement should have a set variation.\\r\\n     */\\r\\n    flipVariations: false,\\r\\n    /**\\r\\n     * @prop {Boolean} flipVariationsByContent=false\\r\\n     * The popper will switch placement variation between `-start` and `-end` when\\r\\n     * the popper element overlaps its reference boundaries.\\r\\n     *\\r\\n     * The original placement should have a set variation.\\r\\n     */\\r\\n    flipVariationsByContent: false\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Modifier used to make the popper flow toward the inner of the reference element.\\r\\n   * By default, when this modifier is disabled, the popper will be placed outside\\r\\n   * the reference element.\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  inner: {\\r\\n    /** @prop {number} order=700 - Index used to define the order of execution */\\r\\n    order: 700,\\r\\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\\r\\n    enabled: false,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: inner\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Modifier used to hide the popper when its reference element is outside of the\\r\\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\\r\\n   * be used to hide with a CSS selector the popper when its reference is\\r\\n   * out of boundaries.\\r\\n   *\\r\\n   * Requires the `preventOverflow` modifier before it in order to work.\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  hide: {\\r\\n    /** @prop {number} order=800 - Index used to define the order of execution */\\r\\n    order: 800,\\r\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\r\\n    enabled: true,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: hide\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Computes the style that will be applied to the popper element to gets\\r\\n   * properly positioned.\\r\\n   *\\r\\n   * Note that this modifier will not touch the DOM, it just prepares the styles\\r\\n   * so that `applyStyle` modifier can apply it. This separation is useful\\r\\n   * in case you need to replace `applyStyle` with a custom implementation.\\r\\n   *\\r\\n   * This modifier has `850` as `order` value to maintain backward compatibility\\r\\n   * with previous versions of Popper.js. Expect the modifiers ordering method\\r\\n   * to change in future major versions of the library.\\r\\n   *\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  computeStyle: {\\r\\n    /** @prop {number} order=850 - Index used to define the order of execution */\\r\\n    order: 850,\\r\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\r\\n    enabled: true,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: computeStyle,\\r\\n    /**\\r\\n     * @prop {Boolean} gpuAcceleration=true\\r\\n     * If true, it uses the CSS 3D transformation to position the popper.\\r\\n     * Otherwise, it will use the `top` and `left` properties\\r\\n     */\\r\\n    gpuAcceleration: true,\\r\\n    /**\\r\\n     * @prop {string} [x='bottom']\\r\\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\\r\\n     * Change this if your popper should grow in a direction different from `bottom`\\r\\n     */\\r\\n    x: 'bottom',\\r\\n    /**\\r\\n     * @prop {string} [x='left']\\r\\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\\r\\n     * Change this if your popper should grow in a direction different from `right`\\r\\n     */\\r\\n    y: 'right'\\r\\n  },\\r\\n\\r\\n  /**\\r\\n   * Applies the computed styles to the popper element.\\r\\n   *\\r\\n   * All the DOM manipulations are limited to this modifier. This is useful in case\\r\\n   * you want to integrate Popper.js inside a framework or view library and you\\r\\n   * want to delegate all the DOM manipulations to it.\\r\\n   *\\r\\n   * Note that if you disable this modifier, you must make sure the popper element\\r\\n   * has its position set to `absolute` before Popper.js can do its work!\\r\\n   *\\r\\n   * Just disable this modifier and define your own to achieve the desired effect.\\r\\n   *\\r\\n   * @memberof modifiers\\r\\n   * @inner\\r\\n   */\\r\\n  applyStyle: {\\r\\n    /** @prop {number} order=900 - Index used to define the order of execution */\\r\\n    order: 900,\\r\\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\\r\\n    enabled: true,\\r\\n    /** @prop {ModifierFn} */\\r\\n    fn: applyStyle,\\r\\n    /** @prop {Function} */\\r\\n    onLoad: applyStyleOnLoad,\\r\\n    /**\\r\\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\\r\\n     * @prop {Boolean} gpuAcceleration=true\\r\\n     * If true, it uses the CSS 3D transformation to position the popper.\\r\\n     * Otherwise, it will use the `top` and `left` properties\\r\\n     */\\r\\n    gpuAcceleration: undefined\\r\\n  }\\r\\n};\\r\\n\\r\\n/**\\r\\n * The `dataObject` is an object containing all the information used by Popper.js.\\r\\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\\r\\n * @name dataObject\\r\\n * @property {Object} data.instance The Popper.js instance\\r\\n * @property {String} data.placement Placement applied to popper\\r\\n * @property {String} data.originalPlacement Placement originally defined on init\\r\\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\\r\\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\\r\\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\\r\\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\\r\\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\\r\\n * @property {Object} data.boundaries Offsets of the popper boundaries\\r\\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\\r\\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\\r\\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\\r\\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\\r\\n */\\r\\n\\r\\n/**\\r\\n * Default options provided to Popper.js constructor.<br />\\r\\n * These can be overridden using the `options` argument of Popper.js.<br />\\r\\n * To override an option, simply pass an object with the same\\r\\n * structure of the `options` object, as the 3rd argument. For example:\\r\\n * ```\\r\\n * new Popper(ref, pop, {\\r\\n *   modifiers: {\\r\\n *     preventOverflow: { enabled: false }\\r\\n *   }\\r\\n * })\\r\\n * ```\\r\\n * @type {Object}\\r\\n * @static\\r\\n * @memberof Popper\\r\\n */\\r\\nvar Defaults = {\\r\\n  /**\\r\\n   * Popper's placement.\\r\\n   * @prop {Popper.placements} placement='bottom'\\r\\n   */\\r\\n  placement: 'bottom',\\r\\n\\r\\n  /**\\r\\n   * Set this to true if you want popper to position it self in 'fixed' mode\\r\\n   * @prop {Boolean} positionFixed=false\\r\\n   */\\r\\n  positionFixed: false,\\r\\n\\r\\n  /**\\r\\n   * Whether events (resize, scroll) are initially enabled.\\r\\n   * @prop {Boolean} eventsEnabled=true\\r\\n   */\\r\\n  eventsEnabled: true,\\r\\n\\r\\n  /**\\r\\n   * Set to true if you want to automatically remove the popper when\\r\\n   * you call the `destroy` method.\\r\\n   * @prop {Boolean} removeOnDestroy=false\\r\\n   */\\r\\n  removeOnDestroy: false,\\r\\n\\r\\n  /**\\r\\n   * Callback called when the popper is created.<br />\\r\\n   * By default, it is set to no-op.<br />\\r\\n   * Access Popper.js instance with `data.instance`.\\r\\n   * @prop {onCreate}\\r\\n   */\\r\\n  onCreate: function onCreate() {},\\r\\n\\r\\n  /**\\r\\n   * Callback called when the popper is updated. This callback is not called\\r\\n   * on the initialization/creation of the popper, but only on subsequent\\r\\n   * updates.<br />\\r\\n   * By default, it is set to no-op.<br />\\r\\n   * Access Popper.js instance with `data.instance`.\\r\\n   * @prop {onUpdate}\\r\\n   */\\r\\n  onUpdate: function onUpdate() {},\\r\\n\\r\\n  /**\\r\\n   * List of modifiers used to modify the offsets before they are applied to the popper.\\r\\n   * They provide most of the functionalities of Popper.js.\\r\\n   * @prop {modifiers}\\r\\n   */\\r\\n  modifiers: modifiers\\r\\n};\\r\\n\\r\\n/**\\r\\n * @callback onCreate\\r\\n * @param {dataObject} data\\r\\n */\\r\\n\\r\\n/**\\r\\n * @callback onUpdate\\r\\n * @param {dataObject} data\\r\\n */\\r\\n\\r\\n// Utils\\r\\n// Methods\\r\\nvar Popper = function () {\\r\\n  /**\\r\\n   * Creates a new Popper.js instance.\\r\\n   * @class Popper\\r\\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\\r\\n   * @param {Element} popper - The HTML / XML element used as the popper\\r\\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\\r\\n   * @return {Object} instance - The generated Popper.js instance\\r\\n   */\\r\\n  function Popper(reference, popper) {\\r\\n    var _this = this;\\r\\n\\r\\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\\r\\n    classCallCheck(this, Popper);\\r\\n\\r\\n    this.scheduleUpdate = function () {\\r\\n      return requestAnimationFrame(_this.update);\\r\\n    };\\r\\n\\r\\n    // make update() debounced, so that it only runs at most once-per-tick\\r\\n    this.update = debounce(this.update.bind(this));\\r\\n\\r\\n    // with {} we create a new object with the options inside it\\r\\n    this.options = _extends({}, Popper.Defaults, options);\\r\\n\\r\\n    // init state\\r\\n    this.state = {\\r\\n      isDestroyed: false,\\r\\n      isCreated: false,\\r\\n      scrollParents: []\\r\\n    };\\r\\n\\r\\n    // get reference and popper elements (allow jQuery wrappers)\\r\\n    this.reference = reference && reference.jquery ? reference[0] : reference;\\r\\n    this.popper = popper && popper.jquery ? popper[0] : popper;\\r\\n\\r\\n    // Deep merge modifiers options\\r\\n    this.options.modifiers = {};\\r\\n    Object.keys(_extends({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {\\r\\n      _this.options.modifiers[name] = _extends({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});\\r\\n    });\\r\\n\\r\\n    // Refactoring modifiers' list (Object => Array)\\r\\n    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {\\r\\n      return _extends({\\r\\n        name: name\\r\\n      }, _this.options.modifiers[name]);\\r\\n    })\\r\\n    // sort the modifiers by order\\r\\n    .sort(function (a, b) {\\r\\n      return a.order - b.order;\\r\\n    });\\r\\n\\r\\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\\r\\n    // such code is executed in the same order of its modifier\\r\\n    // they could add new properties to their options configuration\\r\\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\\r\\n    this.modifiers.forEach(function (modifierOptions) {\\r\\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\\r\\n        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);\\r\\n      }\\r\\n    });\\r\\n\\r\\n    // fire the first update to position the popper in the right place\\r\\n    this.update();\\r\\n\\r\\n    var eventsEnabled = this.options.eventsEnabled;\\r\\n    if (eventsEnabled) {\\r\\n      // setup event listeners, they will take care of update the position in specific situations\\r\\n      this.enableEventListeners();\\r\\n    }\\r\\n\\r\\n    this.state.eventsEnabled = eventsEnabled;\\r\\n  }\\r\\n\\r\\n  // We can't use class properties because they don't get listed in the\\r\\n  // class prototype and break stuff like Sinon stubs\\r\\n\\r\\n\\r\\n  createClass(Popper, [{\\r\\n    key: 'update',\\r\\n    value: function update$$1() {\\r\\n      return update.call(this);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'destroy',\\r\\n    value: function destroy$$1() {\\r\\n      return destroy.call(this);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'enableEventListeners',\\r\\n    value: function enableEventListeners$$1() {\\r\\n      return enableEventListeners.call(this);\\r\\n    }\\r\\n  }, {\\r\\n    key: 'disableEventListeners',\\r\\n    value: function disableEventListeners$$1() {\\r\\n      return disableEventListeners.call(this);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * Schedules an update. It will run on the next UI update available.\\r\\n     * @method scheduleUpdate\\r\\n     * @memberof Popper\\r\\n     */\\r\\n\\r\\n\\r\\n    /**\\r\\n     * Collection of utilities useful when writing custom modifiers.\\r\\n     * Starting from version 1.7, this method is available only if you\\r\\n     * include `popper-utils.js` before `popper.js`.\\r\\n     *\\r\\n     * **DEPRECATION**: This way to access PopperUtils is deprecated\\r\\n     * and will be removed in v2! Use the PopperUtils module directly instead.\\r\\n     * Due to the high instability of the methods contained in Utils, we can't\\r\\n     * guarantee them to follow semver. Use them at your own risk!\\r\\n     * @static\\r\\n     * @private\\r\\n     * @type {Object}\\r\\n     * @deprecated since version 1.8\\r\\n     * @member Utils\\r\\n     * @memberof Popper\\r\\n     */\\r\\n\\r\\n  }]);\\r\\n  return Popper;\\r\\n}();\\r\\n\\r\\n/**\\r\\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\\r\\n * and lets you use it as replacement of a real DOM node.<br />\\r\\n * You can use this method to position a popper relatively to a set of coordinates\\r\\n * in case you don't have a DOM node to use as reference.\\r\\n *\\r\\n * ```\\r\\n * new Popper(referenceObject, popperNode);\\r\\n * ```\\r\\n *\\r\\n * NB: This feature isn't supported in Internet Explorer 10.\\r\\n * @name referenceObject\\r\\n * @property {Function} data.getBoundingClientRect\\r\\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\\r\\n * @property {number} data.clientWidth\\r\\n * An ES6 getter that will return the width of the virtual reference element.\\r\\n * @property {number} data.clientHeight\\r\\n * An ES6 getter that will return the height of the virtual reference element.\\r\\n */\\r\\n\\r\\n\\r\\nPopper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\\r\\nPopper.placements = placements;\\r\\nPopper.Defaults = Defaults;\\r\\n\\r\\n/* harmony default export */ __webpack_exports__[\\\"default\\\"] = (Popper);\\r\\n//# sourceMappingURL=popper.js.map\\r\\n\\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \\\"yLpj\\\")))\\n\\n//# sourceURL=webpack:///./node_modules/popper.js/dist/esm/popper.js?\")},EVdn:function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\\r\\n * jQuery JavaScript Library v3.5.1\\r\\n * https://jquery.com/\\r\\n *\\r\\n * Includes Sizzle.js\\r\\n * https://sizzlejs.com/\\r\\n *\\r\\n * Copyright JS Foundation and other contributors\\r\\n * Released under the MIT license\\r\\n * https://jquery.org/license\\r\\n *\\r\\n * Date: 2020-05-04T22:49Z\\r\\n */\\r\\n( function( global, factory ) {\\r\\n\\r\\n\\t\"use strict\";\\r\\n\\r\\n\\tif (  true && typeof module.exports === \"object\" ) {\\r\\n\\r\\n\\t\\t// For CommonJS and CommonJS-like environments where a proper `window`\\r\\n\\t\\t// is present, execute the factory and get jQuery.\\r\\n\\t\\t// For environments that do not have a `window` with a `document`\\r\\n\\t\\t// (such as Node.js), expose a factory as module.exports.\\r\\n\\t\\t// This accentuates the need for the creation of a real `window`.\\r\\n\\t\\t// e.g. var jQuery = require(\"jquery\")(window);\\r\\n\\t\\t// See ticket #14549 for more info.\\r\\n\\t\\tmodule.exports = global.document ?\\r\\n\\t\\t\\tfactory( global, true ) :\\r\\n\\t\\t\\tfunction( w ) {\\r\\n\\t\\t\\t\\tif ( !w.document ) {\\r\\n\\t\\t\\t\\t\\tthrow new Error( \"jQuery requires a window with a document\" );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn factory( w );\\r\\n\\t\\t\\t};\\r\\n\\t} else {\\r\\n\\t\\tfactory( global );\\r\\n\\t}\\r\\n\\r\\n// Pass this if window is not defined yet\\r\\n} )( typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\\r\\n\\r\\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\\r\\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\\r\\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\\r\\n// enough that all such attempts are guarded in a try block.\\r\\n\"use strict\";\\r\\n\\r\\nvar arr = [];\\r\\n\\r\\nvar getProto = Object.getPrototypeOf;\\r\\n\\r\\nvar slice = arr.slice;\\r\\n\\r\\nvar flat = arr.flat ? function( array ) {\\r\\n\\treturn arr.flat.call( array );\\r\\n} : function( array ) {\\r\\n\\treturn arr.concat.apply( [], array );\\r\\n};\\r\\n\\r\\n\\r\\nvar push = arr.push;\\r\\n\\r\\nvar indexOf = arr.indexOf;\\r\\n\\r\\nvar class2type = {};\\r\\n\\r\\nvar toString = class2type.toString;\\r\\n\\r\\nvar hasOwn = class2type.hasOwnProperty;\\r\\n\\r\\nvar fnToString = hasOwn.toString;\\r\\n\\r\\nvar ObjectFunctionString = fnToString.call( Object );\\r\\n\\r\\nvar support = {};\\r\\n\\r\\nvar isFunction = function isFunction( obj ) {\\r\\n\\r\\n      // Support: Chrome <=57, Firefox <=52\\r\\n      // In some browsers, typeof returns \"function\" for HTML <object> elements\\r\\n      // (i.e., `typeof document.createElement( \"object\" ) === \"function\"`).\\r\\n      // We don\\'t want to classify *any* DOM node as a function.\\r\\n      return typeof obj === \"function\" && typeof obj.nodeType !== \"number\";\\r\\n  };\\r\\n\\r\\n\\r\\nvar isWindow = function isWindow( obj ) {\\r\\n\\t\\treturn obj != null && obj === obj.window;\\r\\n\\t};\\r\\n\\r\\n\\r\\nvar document = window.document;\\r\\n\\r\\n\\r\\n\\r\\n\\tvar preservedScriptAttributes = {\\r\\n\\t\\ttype: true,\\r\\n\\t\\tsrc: true,\\r\\n\\t\\tnonce: true,\\r\\n\\t\\tnoModule: true\\r\\n\\t};\\r\\n\\r\\n\\tfunction DOMEval( code, node, doc ) {\\r\\n\\t\\tdoc = doc || document;\\r\\n\\r\\n\\t\\tvar i, val,\\r\\n\\t\\t\\tscript = doc.createElement( \"script\" );\\r\\n\\r\\n\\t\\tscript.text = code;\\r\\n\\t\\tif ( node ) {\\r\\n\\t\\t\\tfor ( i in preservedScriptAttributes ) {\\r\\n\\r\\n\\t\\t\\t\\t// Support: Firefox 64+, Edge 18+\\r\\n\\t\\t\\t\\t// Some browsers don\\'t support the \"nonce\" property on scripts.\\r\\n\\t\\t\\t\\t// On the other hand, just using `getAttribute` is not enough as\\r\\n\\t\\t\\t\\t// the `nonce` attribute is reset to an empty string whenever it\\r\\n\\t\\t\\t\\t// becomes browsing-context connected.\\r\\n\\t\\t\\t\\t// See https://github.com/whatwg/html/issues/2369\\r\\n\\t\\t\\t\\t// See https://html.spec.whatwg.org/#nonce-attributes\\r\\n\\t\\t\\t\\t// The `node.getAttribute` check was added for the sake of\\r\\n\\t\\t\\t\\t// `jQuery.globalEval` so that it can fake a nonce-containing node\\r\\n\\t\\t\\t\\t// via an object.\\r\\n\\t\\t\\t\\tval = node[ i ] || node.getAttribute && node.getAttribute( i );\\r\\n\\t\\t\\t\\tif ( val ) {\\r\\n\\t\\t\\t\\t\\tscript.setAttribute( i, val );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tdoc.head.appendChild( script ).parentNode.removeChild( script );\\r\\n\\t}\\r\\n\\r\\n\\r\\nfunction toType( obj ) {\\r\\n\\tif ( obj == null ) {\\r\\n\\t\\treturn obj + \"\";\\r\\n\\t}\\r\\n\\r\\n\\t// Support: Android <=2.3 only (functionish RegExp)\\r\\n\\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\\r\\n\\t\\tclass2type[ toString.call( obj ) ] || \"object\" :\\r\\n\\t\\ttypeof obj;\\r\\n}\\r\\n/* global Symbol */\\r\\n// Defining this global in .eslintrc.json would create a danger of using the global\\r\\n// unguarded in another place, it seems safer to define global only for this module\\r\\n\\r\\n\\r\\n\\r\\nvar\\r\\n\\tversion = \"3.5.1\",\\r\\n\\r\\n\\t// Define a local copy of jQuery\\r\\n\\tjQuery = function( selector, context ) {\\r\\n\\r\\n\\t\\t// The jQuery object is actually just the init constructor \\'enhanced\\'\\r\\n\\t\\t// Need init if jQuery is called (just allow error to be thrown if not included)\\r\\n\\t\\treturn new jQuery.fn.init( selector, context );\\r\\n\\t};\\r\\n\\r\\njQuery.fn = jQuery.prototype = {\\r\\n\\r\\n\\t// The current version of jQuery being used\\r\\n\\tjquery: version,\\r\\n\\r\\n\\tconstructor: jQuery,\\r\\n\\r\\n\\t// The default length of a jQuery object is 0\\r\\n\\tlength: 0,\\r\\n\\r\\n\\ttoArray: function() {\\r\\n\\t\\treturn slice.call( this );\\r\\n\\t},\\r\\n\\r\\n\\t// Get the Nth element in the matched element set OR\\r\\n\\t// Get the whole matched element set as a clean array\\r\\n\\tget: function( num ) {\\r\\n\\r\\n\\t\\t// Return all the elements in a clean array\\r\\n\\t\\tif ( num == null ) {\\r\\n\\t\\t\\treturn slice.call( this );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Return just the one element from the set\\r\\n\\t\\treturn num < 0 ? this[ num + this.length ] : this[ num ];\\r\\n\\t},\\r\\n\\r\\n\\t// Take an array of elements and push it onto the stack\\r\\n\\t// (returning the new matched element set)\\r\\n\\tpushStack: function( elems ) {\\r\\n\\r\\n\\t\\t// Build a new jQuery matched element set\\r\\n\\t\\tvar ret = jQuery.merge( this.constructor(), elems );\\r\\n\\r\\n\\t\\t// Add the old object onto the stack (as a reference)\\r\\n\\t\\tret.prevObject = this;\\r\\n\\r\\n\\t\\t// Return the newly-formed element set\\r\\n\\t\\treturn ret;\\r\\n\\t},\\r\\n\\r\\n\\t// Execute a callback for every element in the matched set.\\r\\n\\teach: function( callback ) {\\r\\n\\t\\treturn jQuery.each( this, callback );\\r\\n\\t},\\r\\n\\r\\n\\tmap: function( callback ) {\\r\\n\\t\\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\\r\\n\\t\\t\\treturn callback.call( elem, i, elem );\\r\\n\\t\\t} ) );\\r\\n\\t},\\r\\n\\r\\n\\tslice: function() {\\r\\n\\t\\treturn this.pushStack( slice.apply( this, arguments ) );\\r\\n\\t},\\r\\n\\r\\n\\tfirst: function() {\\r\\n\\t\\treturn this.eq( 0 );\\r\\n\\t},\\r\\n\\r\\n\\tlast: function() {\\r\\n\\t\\treturn this.eq( -1 );\\r\\n\\t},\\r\\n\\r\\n\\teven: function() {\\r\\n\\t\\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\\r\\n\\t\\t\\treturn ( i + 1 ) % 2;\\r\\n\\t\\t} ) );\\r\\n\\t},\\r\\n\\r\\n\\todd: function() {\\r\\n\\t\\treturn this.pushStack( jQuery.grep( this, function( _elem, i ) {\\r\\n\\t\\t\\treturn i % 2;\\r\\n\\t\\t} ) );\\r\\n\\t},\\r\\n\\r\\n\\teq: function( i ) {\\r\\n\\t\\tvar len = this.length,\\r\\n\\t\\t\\tj = +i + ( i < 0 ? len : 0 );\\r\\n\\t\\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\\r\\n\\t},\\r\\n\\r\\n\\tend: function() {\\r\\n\\t\\treturn this.prevObject || this.constructor();\\r\\n\\t},\\r\\n\\r\\n\\t// For internal use only.\\r\\n\\t// Behaves like an Array\\'s method, not like a jQuery method.\\r\\n\\tpush: push,\\r\\n\\tsort: arr.sort,\\r\\n\\tsplice: arr.splice\\r\\n};\\r\\n\\r\\njQuery.extend = jQuery.fn.extend = function() {\\r\\n\\tvar options, name, src, copy, copyIsArray, clone,\\r\\n\\t\\ttarget = arguments[ 0 ] || {},\\r\\n\\t\\ti = 1,\\r\\n\\t\\tlength = arguments.length,\\r\\n\\t\\tdeep = false;\\r\\n\\r\\n\\t// Handle a deep copy situation\\r\\n\\tif ( typeof target === \"boolean\" ) {\\r\\n\\t\\tdeep = target;\\r\\n\\r\\n\\t\\t// Skip the boolean and the target\\r\\n\\t\\ttarget = arguments[ i ] || {};\\r\\n\\t\\ti++;\\r\\n\\t}\\r\\n\\r\\n\\t// Handle case when target is a string or something (possible in deep copy)\\r\\n\\tif ( typeof target !== \"object\" && !isFunction( target ) ) {\\r\\n\\t\\ttarget = {};\\r\\n\\t}\\r\\n\\r\\n\\t// Extend jQuery itself if only one argument is passed\\r\\n\\tif ( i === length ) {\\r\\n\\t\\ttarget = this;\\r\\n\\t\\ti--;\\r\\n\\t}\\r\\n\\r\\n\\tfor ( ; i < length; i++ ) {\\r\\n\\r\\n\\t\\t// Only deal with non-null/undefined values\\r\\n\\t\\tif ( ( options = arguments[ i ] ) != null ) {\\r\\n\\r\\n\\t\\t\\t// Extend the base object\\r\\n\\t\\t\\tfor ( name in options ) {\\r\\n\\t\\t\\t\\tcopy = options[ name ];\\r\\n\\r\\n\\t\\t\\t\\t// Prevent Object.prototype pollution\\r\\n\\t\\t\\t\\t// Prevent never-ending loop\\r\\n\\t\\t\\t\\tif ( name === \"__proto__\" || target === copy ) {\\r\\n\\t\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Recurse if we\\'re merging plain objects or arrays\\r\\n\\t\\t\\t\\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\\r\\n\\t\\t\\t\\t\\t( copyIsArray = Array.isArray( copy ) ) ) ) {\\r\\n\\t\\t\\t\\t\\tsrc = target[ name ];\\r\\n\\r\\n\\t\\t\\t\\t\\t// Ensure proper type for the source value\\r\\n\\t\\t\\t\\t\\tif ( copyIsArray && !Array.isArray( src ) ) {\\r\\n\\t\\t\\t\\t\\t\\tclone = [];\\r\\n\\t\\t\\t\\t\\t} else if ( !copyIsArray && !jQuery.isPlainObject( src ) ) {\\r\\n\\t\\t\\t\\t\\t\\tclone = {};\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\tclone = src;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tcopyIsArray = false;\\r\\n\\r\\n\\t\\t\\t\\t\\t// Never move original objects, clone them\\r\\n\\t\\t\\t\\t\\ttarget[ name ] = jQuery.extend( deep, clone, copy );\\r\\n\\r\\n\\t\\t\\t\\t// Don\\'t bring in undefined values\\r\\n\\t\\t\\t\\t} else if ( copy !== undefined ) {\\r\\n\\t\\t\\t\\t\\ttarget[ name ] = copy;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Return the modified object\\r\\n\\treturn target;\\r\\n};\\r\\n\\r\\njQuery.extend( {\\r\\n\\r\\n\\t// Unique for each copy of jQuery on the page\\r\\n\\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\\\D/g, \"\" ),\\r\\n\\r\\n\\t// Assume jQuery is ready without the ready module\\r\\n\\tisReady: true,\\r\\n\\r\\n\\terror: function( msg ) {\\r\\n\\t\\tthrow new Error( msg );\\r\\n\\t},\\r\\n\\r\\n\\tnoop: function() {},\\r\\n\\r\\n\\tisPlainObject: function( obj ) {\\r\\n\\t\\tvar proto, Ctor;\\r\\n\\r\\n\\t\\t// Detect obvious negatives\\r\\n\\t\\t// Use toString instead of jQuery.type to catch host objects\\r\\n\\t\\tif ( !obj || toString.call( obj ) !== \"[object Object]\" ) {\\r\\n\\t\\t\\treturn false;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tproto = getProto( obj );\\r\\n\\r\\n\\t\\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\\r\\n\\t\\tif ( !proto ) {\\r\\n\\t\\t\\treturn true;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Objects with prototype are plain iff they were constructed by a global Object function\\r\\n\\t\\tCtor = hasOwn.call( proto, \"constructor\" ) && proto.constructor;\\r\\n\\t\\treturn typeof Ctor === \"function\" && fnToString.call( Ctor ) === ObjectFunctionString;\\r\\n\\t},\\r\\n\\r\\n\\tisEmptyObject: function( obj ) {\\r\\n\\t\\tvar name;\\r\\n\\r\\n\\t\\tfor ( name in obj ) {\\r\\n\\t\\t\\treturn false;\\r\\n\\t\\t}\\r\\n\\t\\treturn true;\\r\\n\\t},\\r\\n\\r\\n\\t// Evaluates a script in a provided context; falls back to the global one\\r\\n\\t// if not specified.\\r\\n\\tglobalEval: function( code, options, doc ) {\\r\\n\\t\\tDOMEval( code, { nonce: options && options.nonce }, doc );\\r\\n\\t},\\r\\n\\r\\n\\teach: function( obj, callback ) {\\r\\n\\t\\tvar length, i = 0;\\r\\n\\r\\n\\t\\tif ( isArrayLike( obj ) ) {\\r\\n\\t\\t\\tlength = obj.length;\\r\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\r\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tfor ( i in obj ) {\\r\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn obj;\\r\\n\\t},\\r\\n\\r\\n\\t// results is for internal usage only\\r\\n\\tmakeArray: function( arr, results ) {\\r\\n\\t\\tvar ret = results || [];\\r\\n\\r\\n\\t\\tif ( arr != null ) {\\r\\n\\t\\t\\tif ( isArrayLike( Object( arr ) ) ) {\\r\\n\\t\\t\\t\\tjQuery.merge( ret,\\r\\n\\t\\t\\t\\t\\ttypeof arr === \"string\" ?\\r\\n\\t\\t\\t\\t\\t[ arr ] : arr\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tpush.call( ret, arr );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn ret;\\r\\n\\t},\\r\\n\\r\\n\\tinArray: function( elem, arr, i ) {\\r\\n\\t\\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\\r\\n\\t},\\r\\n\\r\\n\\t// Support: Android <=4.0 only, PhantomJS 1 only\\r\\n\\t// push.apply(_, arraylike) throws on ancient WebKit\\r\\n\\tmerge: function( first, second ) {\\r\\n\\t\\tvar len = +second.length,\\r\\n\\t\\t\\tj = 0,\\r\\n\\t\\t\\ti = first.length;\\r\\n\\r\\n\\t\\tfor ( ; j < len; j++ ) {\\r\\n\\t\\t\\tfirst[ i++ ] = second[ j ];\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tfirst.length = i;\\r\\n\\r\\n\\t\\treturn first;\\r\\n\\t},\\r\\n\\r\\n\\tgrep: function( elems, callback, invert ) {\\r\\n\\t\\tvar callbackInverse,\\r\\n\\t\\t\\tmatches = [],\\r\\n\\t\\t\\ti = 0,\\r\\n\\t\\t\\tlength = elems.length,\\r\\n\\t\\t\\tcallbackExpect = !invert;\\r\\n\\r\\n\\t\\t// Go through the array, only saving the items\\r\\n\\t\\t// that pass the validator function\\r\\n\\t\\tfor ( ; i < length; i++ ) {\\r\\n\\t\\t\\tcallbackInverse = !callback( elems[ i ], i );\\r\\n\\t\\t\\tif ( callbackInverse !== callbackExpect ) {\\r\\n\\t\\t\\t\\tmatches.push( elems[ i ] );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn matches;\\r\\n\\t},\\r\\n\\r\\n\\t// arg is for internal usage only\\r\\n\\tmap: function( elems, callback, arg ) {\\r\\n\\t\\tvar length, value,\\r\\n\\t\\t\\ti = 0,\\r\\n\\t\\t\\tret = [];\\r\\n\\r\\n\\t\\t// Go through the array, translating each of the items to their new values\\r\\n\\t\\tif ( isArrayLike( elems ) ) {\\r\\n\\t\\t\\tlength = elems.length;\\r\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\r\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\r\\n\\r\\n\\t\\t\\t\\tif ( value != null ) {\\r\\n\\t\\t\\t\\t\\tret.push( value );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t// Go through every key on the object,\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tfor ( i in elems ) {\\r\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\r\\n\\r\\n\\t\\t\\t\\tif ( value != null ) {\\r\\n\\t\\t\\t\\t\\tret.push( value );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Flatten any nested arrays\\r\\n\\t\\treturn flat( ret );\\r\\n\\t},\\r\\n\\r\\n\\t// A global GUID counter for objects\\r\\n\\tguid: 1,\\r\\n\\r\\n\\t// jQuery.support is not used in Core but other projects attach their\\r\\n\\t// properties to it so it needs to exist.\\r\\n\\tsupport: support\\r\\n} );\\r\\n\\r\\nif ( typeof Symbol === \"function\" ) {\\r\\n\\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\\r\\n}\\r\\n\\r\\n// Populate the class2type map\\r\\njQuery.each( \"Boolean Number String Function Array Date RegExp Object Error Symbol\".split( \" \" ),\\r\\nfunction( _i, name ) {\\r\\n\\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\\r\\n} );\\r\\n\\r\\nfunction isArrayLike( obj ) {\\r\\n\\r\\n\\t// Support: real iOS 8.2 only (not reproducible in simulator)\\r\\n\\t// `in` check used to prevent JIT error (gh-2145)\\r\\n\\t// hasOwn isn\\'t used here due to false negatives\\r\\n\\t// regarding Nodelist length in IE\\r\\n\\tvar length = !!obj && \"length\" in obj && obj.length,\\r\\n\\t\\ttype = toType( obj );\\r\\n\\r\\n\\tif ( isFunction( obj ) || isWindow( obj ) ) {\\r\\n\\t\\treturn false;\\r\\n\\t}\\r\\n\\r\\n\\treturn type === \"array\" || length === 0 ||\\r\\n\\t\\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\\r\\n}\\r\\nvar Sizzle =\\r\\n/*!\\r\\n * Sizzle CSS Selector Engine v2.3.5\\r\\n * https://sizzlejs.com/\\r\\n *\\r\\n * Copyright JS Foundation and other contributors\\r\\n * Released under the MIT license\\r\\n * https://js.foundation/\\r\\n *\\r\\n * Date: 2020-03-14\\r\\n */\\r\\n( function( window ) {\\r\\nvar i,\\r\\n\\tsupport,\\r\\n\\tExpr,\\r\\n\\tgetText,\\r\\n\\tisXML,\\r\\n\\ttokenize,\\r\\n\\tcompile,\\r\\n\\tselect,\\r\\n\\toutermostContext,\\r\\n\\tsortInput,\\r\\n\\thasDuplicate,\\r\\n\\r\\n\\t// Local document vars\\r\\n\\tsetDocument,\\r\\n\\tdocument,\\r\\n\\tdocElem,\\r\\n\\tdocumentIsHTML,\\r\\n\\trbuggyQSA,\\r\\n\\trbuggyMatches,\\r\\n\\tmatches,\\r\\n\\tcontains,\\r\\n\\r\\n\\t// Instance-specific data\\r\\n\\texpando = \"sizzle\" + 1 * new Date(),\\r\\n\\tpreferredDoc = window.document,\\r\\n\\tdirruns = 0,\\r\\n\\tdone = 0,\\r\\n\\tclassCache = createCache(),\\r\\n\\ttokenCache = createCache(),\\r\\n\\tcompilerCache = createCache(),\\r\\n\\tnonnativeSelectorCache = createCache(),\\r\\n\\tsortOrder = function( a, b ) {\\r\\n\\t\\tif ( a === b ) {\\r\\n\\t\\t\\thasDuplicate = true;\\r\\n\\t\\t}\\r\\n\\t\\treturn 0;\\r\\n\\t},\\r\\n\\r\\n\\t// Instance methods\\r\\n\\thasOwn = ( {} ).hasOwnProperty,\\r\\n\\tarr = [],\\r\\n\\tpop = arr.pop,\\r\\n\\tpushNative = arr.push,\\r\\n\\tpush = arr.push,\\r\\n\\tslice = arr.slice,\\r\\n\\r\\n\\t// Use a stripped-down indexOf as it\\'s faster than native\\r\\n\\t// https://jsperf.com/thor-indexof-vs-for/5\\r\\n\\tindexOf = function( list, elem ) {\\r\\n\\t\\tvar i = 0,\\r\\n\\t\\t\\tlen = list.length;\\r\\n\\t\\tfor ( ; i < len; i++ ) {\\r\\n\\t\\t\\tif ( list[ i ] === elem ) {\\r\\n\\t\\t\\t\\treturn i;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn -1;\\r\\n\\t},\\r\\n\\r\\n\\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|\" +\\r\\n\\t\\t\"ismap|loop|multiple|open|readonly|required|scoped\",\\r\\n\\r\\n\\t// Regular expressions\\r\\n\\r\\n\\t// http://www.w3.org/TR/css3-selectors/#whitespace\\r\\n\\twhitespace = \"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\",\\r\\n\\r\\n\\t// https://www.w3.org/TR/css-syntax-3/#ident-token-diagram\\r\\n\\tidentifier = \"(?:\\\\\\\\\\\\\\\\[\\\\\\\\da-fA-F]{1,6}\" + whitespace +\\r\\n\\t\\t\"?|\\\\\\\\\\\\\\\\[^\\\\\\\\r\\\\\\\\n\\\\\\\\f]|[\\\\\\\\w-]|[^\\\\0-\\\\\\\\x7f])+\",\\r\\n\\r\\n\\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\\r\\n\\tattributes = \"\\\\\\\\[\" + whitespace + \"*(\" + identifier + \")(?:\" + whitespace +\\r\\n\\r\\n\\t\\t// Operator (capture 2)\\r\\n\\t\\t\"*([*^$|!~]?=)\" + whitespace +\\r\\n\\r\\n\\t\\t// \"Attribute values must be CSS identifiers [capture 5]\\r\\n\\t\\t// or strings [capture 3 or capture 4]\"\\r\\n\\t\\t\"*(?:\\'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\'])*)\\'|\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\"|(\" + identifier + \"))|)\" +\\r\\n\\t\\twhitespace + \"*\\\\\\\\]\",\\r\\n\\r\\n\\tpseudos = \":(\" + identifier + \")(?:\\\\\\\\((\" +\\r\\n\\r\\n\\t\\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\\r\\n\\t\\t// 1. quoted (capture 3; capture 4 or capture 5)\\r\\n\\t\\t\"(\\'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\'])*)\\'|\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\")|\" +\\r\\n\\r\\n\\t\\t// 2. simple (capture 6)\\r\\n\\t\\t\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\" + attributes + \")*)|\" +\\r\\n\\r\\n\\t\\t// 3. anything else (capture 2)\\r\\n\\t\\t\".*\" +\\r\\n\\t\\t\")\\\\\\\\)|)\",\\r\\n\\r\\n\\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\\r\\n\\trwhitespace = new RegExp( whitespace + \"+\", \"g\" ),\\r\\n\\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\" +\\r\\n\\t\\twhitespace + \"+$\", \"g\" ),\\r\\n\\r\\n\\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\\r\\n\\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace +\\r\\n\\t\\t\"*\" ),\\r\\n\\trdescend = new RegExp( whitespace + \"|>\" ),\\r\\n\\r\\n\\trpseudo = new RegExp( pseudos ),\\r\\n\\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\\r\\n\\r\\n\\tmatchExpr = {\\r\\n\\t\\t\"ID\": new RegExp( \"^#(\" + identifier + \")\" ),\\r\\n\\t\\t\"CLASS\": new RegExp( \"^\\\\\\\\.(\" + identifier + \")\" ),\\r\\n\\t\\t\"TAG\": new RegExp( \"^(\" + identifier + \"|[*])\" ),\\r\\n\\t\\t\"ATTR\": new RegExp( \"^\" + attributes ),\\r\\n\\t\\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\\r\\n\\t\\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\" +\\r\\n\\t\\t\\twhitespace + \"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" +\\r\\n\\t\\t\\twhitespace + \"*(\\\\\\\\d+)|))\" + whitespace + \"*\\\\\\\\)|)\", \"i\" ),\\r\\n\\t\\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\\r\\n\\r\\n\\t\\t// For use in libraries implementing .is()\\r\\n\\t\\t// We use this for POS matching in `select`\\r\\n\\t\\t\"needsContext\": new RegExp( \"^\" + whitespace +\\r\\n\\t\\t\\t\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\" + whitespace +\\r\\n\\t\\t\\t\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\" + whitespace + \"*\\\\\\\\)|)(?=[^-]|$)\", \"i\" )\\r\\n\\t},\\r\\n\\r\\n\\trhtml = /HTML$/i,\\r\\n\\trinputs = /^(?:input|select|textarea|button)$/i,\\r\\n\\trheader = /^h\\\\d$/i,\\r\\n\\r\\n\\trnative = /^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,\\r\\n\\r\\n\\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\\r\\n\\trquickExpr = /^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,\\r\\n\\r\\n\\trsibling = /[+~]/,\\r\\n\\r\\n\\t// CSS escapes\\r\\n\\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\\r\\n\\trunescape = new RegExp( \"\\\\\\\\\\\\\\\\[\\\\\\\\da-fA-F]{1,6}\" + whitespace + \"?|\\\\\\\\\\\\\\\\([^\\\\\\\\r\\\\\\\\n\\\\\\\\f])\", \"g\" ),\\r\\n\\tfunescape = function( escape, nonHex ) {\\r\\n\\t\\tvar high = \"0x\" + escape.slice( 1 ) - 0x10000;\\r\\n\\r\\n\\t\\treturn nonHex ?\\r\\n\\r\\n\\t\\t\\t// Strip the backslash prefix from a non-hex escape sequence\\r\\n\\t\\t\\tnonHex :\\r\\n\\r\\n\\t\\t\\t// Replace a hexadecimal escape sequence with the encoded Unicode code point\\r\\n\\t\\t\\t// Support: IE <=11+\\r\\n\\t\\t\\t// For values outside the Basic Multilingual Plane (BMP), manually construct a\\r\\n\\t\\t\\t// surrogate pair\\r\\n\\t\\t\\thigh < 0 ?\\r\\n\\t\\t\\t\\tString.fromCharCode( high + 0x10000 ) :\\r\\n\\t\\t\\t\\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\\r\\n\\t},\\r\\n\\r\\n\\t// CSS string/identifier serialization\\r\\n\\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\\r\\n\\trcssescape = /([\\\\0-\\\\x1f\\\\x7f]|^-?\\\\d)|^-$|[^\\\\0-\\\\x1f\\\\x7f-\\\\uFFFF\\\\w-]/g,\\r\\n\\tfcssescape = function( ch, asCodePoint ) {\\r\\n\\t\\tif ( asCodePoint ) {\\r\\n\\r\\n\\t\\t\\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\\r\\n\\t\\t\\tif ( ch === \"\\\\0\" ) {\\r\\n\\t\\t\\t\\treturn \"\\\\uFFFD\";\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Control characters and (dependent upon position) numbers get escaped as code points\\r\\n\\t\\t\\treturn ch.slice( 0, -1 ) + \"\\\\\\\\\" +\\r\\n\\t\\t\\t\\tch.charCodeAt( ch.length - 1 ).toString( 16 ) + \" \";\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Other potentially-special ASCII characters get backslash-escaped\\r\\n\\t\\treturn \"\\\\\\\\\" + ch;\\r\\n\\t},\\r\\n\\r\\n\\t// Used for iframes\\r\\n\\t// See setDocument()\\r\\n\\t// Removing the function wrapper causes a \"Permission Denied\"\\r\\n\\t// error in IE\\r\\n\\tunloadHandler = function() {\\r\\n\\t\\tsetDocument();\\r\\n\\t},\\r\\n\\r\\n\\tinDisabledFieldset = addCombinator(\\r\\n\\t\\tfunction( elem ) {\\r\\n\\t\\t\\treturn elem.disabled === true && elem.nodeName.toLowerCase() === \"fieldset\";\\r\\n\\t\\t},\\r\\n\\t\\t{ dir: \"parentNode\", next: \"legend\" }\\r\\n\\t);\\r\\n\\r\\n// Optimize for push.apply( _, NodeList )\\r\\ntry {\\r\\n\\tpush.apply(\\r\\n\\t\\t( arr = slice.call( preferredDoc.childNodes ) ),\\r\\n\\t\\tpreferredDoc.childNodes\\r\\n\\t);\\r\\n\\r\\n\\t// Support: Android<4.0\\r\\n\\t// Detect silently failing push.apply\\r\\n\\t// eslint-disable-next-line no-unused-expressions\\r\\n\\tarr[ preferredDoc.childNodes.length ].nodeType;\\r\\n} catch ( e ) {\\r\\n\\tpush = { apply: arr.length ?\\r\\n\\r\\n\\t\\t// Leverage slice if possible\\r\\n\\t\\tfunction( target, els ) {\\r\\n\\t\\t\\tpushNative.apply( target, slice.call( els ) );\\r\\n\\t\\t} :\\r\\n\\r\\n\\t\\t// Support: IE<9\\r\\n\\t\\t// Otherwise append directly\\r\\n\\t\\tfunction( target, els ) {\\r\\n\\t\\t\\tvar j = target.length,\\r\\n\\t\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\t\\t// Can\\'t trust NodeList.length\\r\\n\\t\\t\\twhile ( ( target[ j++ ] = els[ i++ ] ) ) {}\\r\\n\\t\\t\\ttarget.length = j - 1;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n}\\r\\n\\r\\nfunction Sizzle( selector, context, results, seed ) {\\r\\n\\tvar m, i, elem, nid, match, groups, newSelector,\\r\\n\\t\\tnewContext = context && context.ownerDocument,\\r\\n\\r\\n\\t\\t// nodeType defaults to 9, since context defaults to document\\r\\n\\t\\tnodeType = context ? context.nodeType : 9;\\r\\n\\r\\n\\tresults = results || [];\\r\\n\\r\\n\\t// Return early from calls with invalid selector or context\\r\\n\\tif ( typeof selector !== \"string\" || !selector ||\\r\\n\\t\\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\\r\\n\\r\\n\\t\\treturn results;\\r\\n\\t}\\r\\n\\r\\n\\t// Try to shortcut find operations (as opposed to filters) in HTML documents\\r\\n\\tif ( !seed ) {\\r\\n\\t\\tsetDocument( context );\\r\\n\\t\\tcontext = context || document;\\r\\n\\r\\n\\t\\tif ( documentIsHTML ) {\\r\\n\\r\\n\\t\\t\\t// If the selector is sufficiently simple, try using a \"get*By*\" DOM method\\r\\n\\t\\t\\t// (excepting DocumentFragment context, where the methods don\\'t exist)\\r\\n\\t\\t\\tif ( nodeType !== 11 && ( match = rquickExpr.exec( selector ) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// ID selector\\r\\n\\t\\t\\t\\tif ( ( m = match[ 1 ] ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Document context\\r\\n\\t\\t\\t\\t\\tif ( nodeType === 9 ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( ( elem = context.getElementById( m ) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\r\\n\\t\\t\\t\\t\\t\\t\\t// TODO: identify versions\\r\\n\\t\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( elem.id === m ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\treturn results;\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Element context\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\r\\n\\t\\t\\t\\t\\t\\t// TODO: identify versions\\r\\n\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\r\\n\\t\\t\\t\\t\\t\\tif ( newContext && ( elem = newContext.getElementById( m ) ) &&\\r\\n\\t\\t\\t\\t\\t\\t\\tcontains( context, elem ) &&\\r\\n\\t\\t\\t\\t\\t\\t\\telem.id === m ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\r\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Type selector\\r\\n\\t\\t\\t\\t} else if ( match[ 2 ] ) {\\r\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByTagName( selector ) );\\r\\n\\t\\t\\t\\t\\treturn results;\\r\\n\\r\\n\\t\\t\\t\\t// Class selector\\r\\n\\t\\t\\t\\t} else if ( ( m = match[ 3 ] ) && support.getElementsByClassName &&\\r\\n\\t\\t\\t\\t\\tcontext.getElementsByClassName ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByClassName( m ) );\\r\\n\\t\\t\\t\\t\\treturn results;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Take advantage of querySelectorAll\\r\\n\\t\\t\\tif ( support.qsa &&\\r\\n\\t\\t\\t\\t!nonnativeSelectorCache[ selector + \" \" ] &&\\r\\n\\t\\t\\t\\t( !rbuggyQSA || !rbuggyQSA.test( selector ) ) &&\\r\\n\\r\\n\\t\\t\\t\\t// Support: IE 8 only\\r\\n\\t\\t\\t\\t// Exclude object elements\\r\\n\\t\\t\\t\\t( nodeType !== 1 || context.nodeName.toLowerCase() !== \"object\" ) ) {\\r\\n\\r\\n\\t\\t\\t\\tnewSelector = selector;\\r\\n\\t\\t\\t\\tnewContext = context;\\r\\n\\r\\n\\t\\t\\t\\t// qSA considers elements outside a scoping root when evaluating child or\\r\\n\\t\\t\\t\\t// descendant combinators, which is not what we want.\\r\\n\\t\\t\\t\\t// In such cases, we work around the behavior by prefixing every selector in the\\r\\n\\t\\t\\t\\t// list with an ID selector referencing the scope context.\\r\\n\\t\\t\\t\\t// The technique has to be used as well when a leading combinator is used\\r\\n\\t\\t\\t\\t// as such selectors are not recognized by querySelectorAll.\\r\\n\\t\\t\\t\\t// Thanks to Andrew Dupont for this technique.\\r\\n\\t\\t\\t\\tif ( nodeType === 1 &&\\r\\n\\t\\t\\t\\t\\t( rdescend.test( selector ) || rcombinators.test( selector ) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Expand context for sibling selectors\\r\\n\\t\\t\\t\\t\\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\\r\\n\\t\\t\\t\\t\\t\\tcontext;\\r\\n\\r\\n\\t\\t\\t\\t\\t// We can use :scope instead of the ID hack if the browser\\r\\n\\t\\t\\t\\t\\t// supports it & if we\\'re not changing the context.\\r\\n\\t\\t\\t\\t\\tif ( newContext !== context || !support.scope ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Capture the context ID, setting it first if necessary\\r\\n\\t\\t\\t\\t\\t\\tif ( ( nid = context.getAttribute( \"id\" ) ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tnid = nid.replace( rcssescape, fcssescape );\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\tcontext.setAttribute( \"id\", ( nid = expando ) );\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Prefix every selector in the list\\r\\n\\t\\t\\t\\t\\tgroups = tokenize( selector );\\r\\n\\t\\t\\t\\t\\ti = groups.length;\\r\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\t\\t\\tgroups[ i ] = ( nid ? \"#\" + nid : \":scope\" ) + \" \" +\\r\\n\\t\\t\\t\\t\\t\\t\\ttoSelector( groups[ i ] );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tnewSelector = groups.join( \",\" );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\ttry {\\r\\n\\t\\t\\t\\t\\tpush.apply( results,\\r\\n\\t\\t\\t\\t\\t\\tnewContext.querySelectorAll( newSelector )\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\treturn results;\\r\\n\\t\\t\\t\\t} catch ( qsaError ) {\\r\\n\\t\\t\\t\\t\\tnonnativeSelectorCache( selector, true );\\r\\n\\t\\t\\t\\t} finally {\\r\\n\\t\\t\\t\\t\\tif ( nid === expando ) {\\r\\n\\t\\t\\t\\t\\t\\tcontext.removeAttribute( \"id\" );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// All others\\r\\n\\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\\r\\n}\\r\\n\\r\\n/**\\r\\n * Create key-value caches of limited size\\r\\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\\r\\n *\\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\\r\\n *\\tdeleting the oldest entry\\r\\n */\\r\\nfunction createCache() {\\r\\n\\tvar keys = [];\\r\\n\\r\\n\\tfunction cache( key, value ) {\\r\\n\\r\\n\\t\\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\\r\\n\\t\\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\\r\\n\\r\\n\\t\\t\\t// Only keep the most recent entries\\r\\n\\t\\t\\tdelete cache[ keys.shift() ];\\r\\n\\t\\t}\\r\\n\\t\\treturn ( cache[ key + \" \" ] = value );\\r\\n\\t}\\r\\n\\treturn cache;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Mark a function for special use by Sizzle\\r\\n * @param {Function} fn The function to mark\\r\\n */\\r\\nfunction markFunction( fn ) {\\r\\n\\tfn[ expando ] = true;\\r\\n\\treturn fn;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Support testing using an element\\r\\n * @param {Function} fn Passed the created element and returns a boolean result\\r\\n */\\r\\nfunction assert( fn ) {\\r\\n\\tvar el = document.createElement( \"fieldset\" );\\r\\n\\r\\n\\ttry {\\r\\n\\t\\treturn !!fn( el );\\r\\n\\t} catch ( e ) {\\r\\n\\t\\treturn false;\\r\\n\\t} finally {\\r\\n\\r\\n\\t\\t// Remove from its parent by default\\r\\n\\t\\tif ( el.parentNode ) {\\r\\n\\t\\t\\tel.parentNode.removeChild( el );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// release memory in IE\\r\\n\\t\\tel = null;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n/**\\r\\n * Adds the same handler for all of the specified attrs\\r\\n * @param {String} attrs Pipe-separated list of attributes\\r\\n * @param {Function} handler The method that will be applied\\r\\n */\\r\\nfunction addHandle( attrs, handler ) {\\r\\n\\tvar arr = attrs.split( \"|\" ),\\r\\n\\t\\ti = arr.length;\\r\\n\\r\\n\\twhile ( i-- ) {\\r\\n\\t\\tExpr.attrHandle[ arr[ i ] ] = handler;\\r\\n\\t}\\r\\n}\\r\\n\\r\\n/**\\r\\n * Checks document order of two siblings\\r\\n * @param {Element} a\\r\\n * @param {Element} b\\r\\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\\r\\n */\\r\\nfunction siblingCheck( a, b ) {\\r\\n\\tvar cur = b && a,\\r\\n\\t\\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\\r\\n\\t\\t\\ta.sourceIndex - b.sourceIndex;\\r\\n\\r\\n\\t// Use IE sourceIndex if available on both nodes\\r\\n\\tif ( diff ) {\\r\\n\\t\\treturn diff;\\r\\n\\t}\\r\\n\\r\\n\\t// Check if b follows a\\r\\n\\tif ( cur ) {\\r\\n\\t\\twhile ( ( cur = cur.nextSibling ) ) {\\r\\n\\t\\t\\tif ( cur === b ) {\\r\\n\\t\\t\\t\\treturn -1;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn a ? 1 : -1;\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a function to use in pseudos for input types\\r\\n * @param {String} type\\r\\n */\\r\\nfunction createInputPseudo( type ) {\\r\\n\\treturn function( elem ) {\\r\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\r\\n\\t\\treturn name === \"input\" && elem.type === type;\\r\\n\\t};\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a function to use in pseudos for buttons\\r\\n * @param {String} type\\r\\n */\\r\\nfunction createButtonPseudo( type ) {\\r\\n\\treturn function( elem ) {\\r\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\r\\n\\t\\treturn ( name === \"input\" || name === \"button\" ) && elem.type === type;\\r\\n\\t};\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a function to use in pseudos for :enabled/:disabled\\r\\n * @param {Boolean} disabled true for :disabled; false for :enabled\\r\\n */\\r\\nfunction createDisabledPseudo( disabled ) {\\r\\n\\r\\n\\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\\r\\n\\treturn function( elem ) {\\r\\n\\r\\n\\t\\t// Only certain elements can match :enabled or :disabled\\r\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\\r\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\\r\\n\\t\\tif ( \"form\" in elem ) {\\r\\n\\r\\n\\t\\t\\t// Check for inherited disabledness on relevant non-disabled elements:\\r\\n\\t\\t\\t// * listed form-associated elements in a disabled fieldset\\r\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\\r\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\\r\\n\\t\\t\\t// * option elements in a disabled optgroup\\r\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\\r\\n\\t\\t\\t// All such elements have a \"form\" property.\\r\\n\\t\\t\\tif ( elem.parentNode && elem.disabled === false ) {\\r\\n\\r\\n\\t\\t\\t\\t// Option elements defer to a parent optgroup if present\\r\\n\\t\\t\\t\\tif ( \"label\" in elem ) {\\r\\n\\t\\t\\t\\t\\tif ( \"label\" in elem.parentNode ) {\\r\\n\\t\\t\\t\\t\\t\\treturn elem.parentNode.disabled === disabled;\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\treturn elem.disabled === disabled;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Support: IE 6 - 11\\r\\n\\t\\t\\t\\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\\r\\n\\t\\t\\t\\treturn elem.isDisabled === disabled ||\\r\\n\\r\\n\\t\\t\\t\\t\\t// Where there is no isDisabled, check manually\\r\\n\\t\\t\\t\\t\\t/* jshint -W018 */\\r\\n\\t\\t\\t\\t\\telem.isDisabled !== !disabled &&\\r\\n\\t\\t\\t\\t\\tinDisabledFieldset( elem ) === disabled;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn elem.disabled === disabled;\\r\\n\\r\\n\\t\\t// Try to winnow out elements that can\\'t be disabled before trusting the disabled property.\\r\\n\\t\\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn\\'t\\r\\n\\t\\t// even exist on them, let alone have a boolean value.\\r\\n\\t\\t} else if ( \"label\" in elem ) {\\r\\n\\t\\t\\treturn elem.disabled === disabled;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Remaining elements are neither :enabled nor :disabled\\r\\n\\t\\treturn false;\\r\\n\\t};\\r\\n}\\r\\n\\r\\n/**\\r\\n * Returns a function to use in pseudos for positionals\\r\\n * @param {Function} fn\\r\\n */\\r\\nfunction createPositionalPseudo( fn ) {\\r\\n\\treturn markFunction( function( argument ) {\\r\\n\\t\\targument = +argument;\\r\\n\\t\\treturn markFunction( function( seed, matches ) {\\r\\n\\t\\t\\tvar j,\\r\\n\\t\\t\\t\\tmatchIndexes = fn( [], seed.length, argument ),\\r\\n\\t\\t\\t\\ti = matchIndexes.length;\\r\\n\\r\\n\\t\\t\\t// Match elements found at the specified indexes\\r\\n\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\tif ( seed[ ( j = matchIndexes[ i ] ) ] ) {\\r\\n\\t\\t\\t\\t\\tseed[ j ] = !( matches[ j ] = seed[ j ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t} );\\r\\n}\\r\\n\\r\\n/**\\r\\n * Checks a node for validity as a Sizzle context\\r\\n * @param {Element|Object=} context\\r\\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\\r\\n */\\r\\nfunction testContext( context ) {\\r\\n\\treturn context && typeof context.getElementsByTagName !== \"undefined\" && context;\\r\\n}\\r\\n\\r\\n// Expose support vars for convenience\\r\\nsupport = Sizzle.support = {};\\r\\n\\r\\n/**\\r\\n * Detects XML nodes\\r\\n * @param {Element|Object} elem An element or a document\\r\\n * @returns {Boolean} True iff elem is a non-HTML XML node\\r\\n */\\r\\nisXML = Sizzle.isXML = function( elem ) {\\r\\n\\tvar namespace = elem.namespaceURI,\\r\\n\\t\\tdocElem = ( elem.ownerDocument || elem ).documentElement;\\r\\n\\r\\n\\t// Support: IE <=8\\r\\n\\t// Assume HTML when documentElement doesn\\'t yet exist, such as inside loading iframes\\r\\n\\t// https://bugs.jquery.com/ticket/4833\\r\\n\\treturn !rhtml.test( namespace || docElem && docElem.nodeName || \"HTML\" );\\r\\n};\\r\\n\\r\\n/**\\r\\n * Sets document-related variables once based on the current document\\r\\n * @param {Element|Object} [doc] An element or document object to use to set the document\\r\\n * @returns {Object} Returns the current document\\r\\n */\\r\\nsetDocument = Sizzle.setDocument = function( node ) {\\r\\n\\tvar hasCompare, subWindow,\\r\\n\\t\\tdoc = node ? node.ownerDocument || node : preferredDoc;\\r\\n\\r\\n\\t// Return early if doc is invalid or already selected\\r\\n\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t// two documents; shallow comparisons work.\\r\\n\\t// eslint-disable-next-line eqeqeq\\r\\n\\tif ( doc == document || doc.nodeType !== 9 || !doc.documentElement ) {\\r\\n\\t\\treturn document;\\r\\n\\t}\\r\\n\\r\\n\\t// Update global variables\\r\\n\\tdocument = doc;\\r\\n\\tdocElem = document.documentElement;\\r\\n\\tdocumentIsHTML = !isXML( document );\\r\\n\\r\\n\\t// Support: IE 9 - 11+, Edge 12 - 18+\\r\\n\\t// Accessing iframe documents after unload throws \"permission denied\" errors (jQuery #13936)\\r\\n\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t// two documents; shallow comparisons work.\\r\\n\\t// eslint-disable-next-line eqeqeq\\r\\n\\tif ( preferredDoc != document &&\\r\\n\\t\\t( subWindow = document.defaultView ) && subWindow.top !== subWindow ) {\\r\\n\\r\\n\\t\\t// Support: IE 11, Edge\\r\\n\\t\\tif ( subWindow.addEventListener ) {\\r\\n\\t\\t\\tsubWindow.addEventListener( \"unload\", unloadHandler, false );\\r\\n\\r\\n\\t\\t// Support: IE 9 - 10 only\\r\\n\\t\\t} else if ( subWindow.attachEvent ) {\\r\\n\\t\\t\\tsubWindow.attachEvent( \"onunload\", unloadHandler );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Support: IE 8 - 11+, Edge 12 - 18+, Chrome <=16 - 25 only, Firefox <=3.6 - 31 only,\\r\\n\\t// Safari 4 - 5 only, Opera <=11.6 - 12.x only\\r\\n\\t// IE/Edge & older browsers don\\'t support the :scope pseudo-class.\\r\\n\\t// Support: Safari 6.0 only\\r\\n\\t// Safari 6.0 supports :scope but it\\'s an alias of :root there.\\r\\n\\tsupport.scope = assert( function( el ) {\\r\\n\\t\\tdocElem.appendChild( el ).appendChild( document.createElement( \"div\" ) );\\r\\n\\t\\treturn typeof el.querySelectorAll !== \"undefined\" &&\\r\\n\\t\\t\\t!el.querySelectorAll( \":scope fieldset div\" ).length;\\r\\n\\t} );\\r\\n\\r\\n\\t/* Attributes\\r\\n\\t---------------------------------------------------------------------- */\\r\\n\\r\\n\\t// Support: IE<8\\r\\n\\t// Verify that getAttribute really returns attributes and not properties\\r\\n\\t// (excepting IE8 booleans)\\r\\n\\tsupport.attributes = assert( function( el ) {\\r\\n\\t\\tel.className = \"i\";\\r\\n\\t\\treturn !el.getAttribute( \"className\" );\\r\\n\\t} );\\r\\n\\r\\n\\t/* getElement(s)By*\\r\\n\\t---------------------------------------------------------------------- */\\r\\n\\r\\n\\t// Check if getElementsByTagName(\"*\") returns only elements\\r\\n\\tsupport.getElementsByTagName = assert( function( el ) {\\r\\n\\t\\tel.appendChild( document.createComment( \"\" ) );\\r\\n\\t\\treturn !el.getElementsByTagName( \"*\" ).length;\\r\\n\\t} );\\r\\n\\r\\n\\t// Support: IE<9\\r\\n\\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\\r\\n\\r\\n\\t// Support: IE<10\\r\\n\\t// Check if getElementById returns elements by name\\r\\n\\t// The broken getElementById methods don\\'t pick up programmatically-set names,\\r\\n\\t// so use a roundabout getElementsByName test\\r\\n\\tsupport.getById = assert( function( el ) {\\r\\n\\t\\tdocElem.appendChild( el ).id = expando;\\r\\n\\t\\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\\r\\n\\t} );\\r\\n\\r\\n\\t// ID filter and find\\r\\n\\tif ( support.getById ) {\\r\\n\\t\\tExpr.filter[ \"ID\" ] = function( id ) {\\r\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\r\\n\\t\\t\\treturn function( elem ) {\\r\\n\\t\\t\\t\\treturn elem.getAttribute( \"id\" ) === attrId;\\r\\n\\t\\t\\t};\\r\\n\\t\\t};\\r\\n\\t\\tExpr.find[ \"ID\" ] = function( id, context ) {\\r\\n\\t\\t\\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\\r\\n\\t\\t\\t\\tvar elem = context.getElementById( id );\\r\\n\\t\\t\\t\\treturn elem ? [ elem ] : [];\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\t} else {\\r\\n\\t\\tExpr.filter[ \"ID\" ] =  function( id ) {\\r\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\r\\n\\t\\t\\treturn function( elem ) {\\r\\n\\t\\t\\t\\tvar node = typeof elem.getAttributeNode !== \"undefined\" &&\\r\\n\\t\\t\\t\\t\\telem.getAttributeNode( \"id\" );\\r\\n\\t\\t\\t\\treturn node && node.value === attrId;\\r\\n\\t\\t\\t};\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// Support: IE 6 - 7 only\\r\\n\\t\\t// getElementById is not reliable as a find shortcut\\r\\n\\t\\tExpr.find[ \"ID\" ] = function( id, context ) {\\r\\n\\t\\t\\tif ( typeof context.getElementById !== \"undefined\" && documentIsHTML ) {\\r\\n\\t\\t\\t\\tvar node, i, elems,\\r\\n\\t\\t\\t\\t\\telem = context.getElementById( id );\\r\\n\\r\\n\\t\\t\\t\\tif ( elem ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Verify the id attribute\\r\\n\\t\\t\\t\\t\\tnode = elem.getAttributeNode( \"id\" );\\r\\n\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\r\\n\\t\\t\\t\\t\\t\\treturn [ elem ];\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Fall back on getElementsByName\\r\\n\\t\\t\\t\\t\\telems = context.getElementsByName( id );\\r\\n\\t\\t\\t\\t\\ti = 0;\\r\\n\\t\\t\\t\\t\\twhile ( ( elem = elems[ i++ ] ) ) {\\r\\n\\t\\t\\t\\t\\t\\tnode = elem.getAttributeNode( \"id\" );\\r\\n\\t\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn [ elem ];\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn [];\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\t}\\r\\n\\r\\n\\t// Tag\\r\\n\\tExpr.find[ \"TAG\" ] = support.getElementsByTagName ?\\r\\n\\t\\tfunction( tag, context ) {\\r\\n\\t\\t\\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\\r\\n\\t\\t\\t\\treturn context.getElementsByTagName( tag );\\r\\n\\r\\n\\t\\t\\t// DocumentFragment nodes don\\'t have gEBTN\\r\\n\\t\\t\\t} else if ( support.qsa ) {\\r\\n\\t\\t\\t\\treturn context.querySelectorAll( tag );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} :\\r\\n\\r\\n\\t\\tfunction( tag, context ) {\\r\\n\\t\\t\\tvar elem,\\r\\n\\t\\t\\t\\ttmp = [],\\r\\n\\t\\t\\t\\ti = 0,\\r\\n\\r\\n\\t\\t\\t\\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\\r\\n\\t\\t\\t\\tresults = context.getElementsByTagName( tag );\\r\\n\\r\\n\\t\\t\\t// Filter out possible comments\\r\\n\\t\\t\\tif ( tag === \"*\" ) {\\r\\n\\t\\t\\t\\twhile ( ( elem = results[ i++ ] ) ) {\\r\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\r\\n\\t\\t\\t\\t\\t\\ttmp.push( elem );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn tmp;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn results;\\r\\n\\t\\t};\\r\\n\\r\\n\\t// Class\\r\\n\\tExpr.find[ \"CLASS\" ] = support.getElementsByClassName && function( className, context ) {\\r\\n\\t\\tif ( typeof context.getElementsByClassName !== \"undefined\" && documentIsHTML ) {\\r\\n\\t\\t\\treturn context.getElementsByClassName( className );\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\r\\n\\t/* QSA/matchesSelector\\r\\n\\t---------------------------------------------------------------------- */\\r\\n\\r\\n\\t// QSA and matchesSelector support\\r\\n\\r\\n\\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\\r\\n\\trbuggyMatches = [];\\r\\n\\r\\n\\t// qSa(:focus) reports false when true (Chrome 21)\\r\\n\\t// We allow this because of a bug in IE8/9 that throws an error\\r\\n\\t// whenever `document.activeElement` is accessed on an iframe\\r\\n\\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\\r\\n\\t// See https://bugs.jquery.com/ticket/13378\\r\\n\\trbuggyQSA = [];\\r\\n\\r\\n\\tif ( ( support.qsa = rnative.test( document.querySelectorAll ) ) ) {\\r\\n\\r\\n\\t\\t// Build QSA regex\\r\\n\\t\\t// Regex strategy adopted from Diego Perini\\r\\n\\t\\tassert( function( el ) {\\r\\n\\r\\n\\t\\t\\tvar input;\\r\\n\\r\\n\\t\\t\\t// Select is set to empty string on purpose\\r\\n\\t\\t\\t// This is to test IE\\'s treatment of not explicitly\\r\\n\\t\\t\\t// setting a boolean content attribute,\\r\\n\\t\\t\\t// since its presence should be enough\\r\\n\\t\\t\\t// https://bugs.jquery.com/ticket/12359\\r\\n\\t\\t\\tdocElem.appendChild( el ).innerHTML = \"<a id=\\'\" + expando + \"\\'></a>\" +\\r\\n\\t\\t\\t\\t\"<select id=\\'\" + expando + \"-\\\\r\\\\\\\\\\' msallowcapture=\\'\\'>\" +\\r\\n\\t\\t\\t\\t\"<option selected=\\'\\'></option></select>\";\\r\\n\\r\\n\\t\\t\\t// Support: IE8, Opera 11-12.16\\r\\n\\t\\t\\t// Nothing should be selected when empty strings follow ^= or $= or *=\\r\\n\\t\\t\\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\\r\\n\\t\\t\\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\\r\\n\\t\\t\\tif ( el.querySelectorAll( \"[msallowcapture^=\\'\\']\" ).length ) {\\r\\n\\t\\t\\t\\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:\\'\\'|\\\\\"\\\\\")\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Support: IE8\\r\\n\\t\\t\\t// Boolean attributes and \"value\" are not treated correctly\\r\\n\\t\\t\\tif ( !el.querySelectorAll( \"[selected]\" ).length ) {\\r\\n\\t\\t\\t\\trbuggyQSA.push( \"\\\\\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\\r\\n\\t\\t\\tif ( !el.querySelectorAll( \"[id~=\" + expando + \"-]\" ).length ) {\\r\\n\\t\\t\\t\\trbuggyQSA.push( \"~=\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Support: IE 11+, Edge 15 - 18+\\r\\n\\t\\t\\t// IE 11/Edge don\\'t find elements on a `[name=\\'\\']` query in some cases.\\r\\n\\t\\t\\t// Adding a temporary attribute to the document before the selection works\\r\\n\\t\\t\\t// around the issue.\\r\\n\\t\\t\\t// Interestingly, IE 10 & older don\\'t seem to have the issue.\\r\\n\\t\\t\\tinput = document.createElement( \"input\" );\\r\\n\\t\\t\\tinput.setAttribute( \"name\", \"\" );\\r\\n\\t\\t\\tel.appendChild( input );\\r\\n\\t\\t\\tif ( !el.querySelectorAll( \"[name=\\'\\']\" ).length ) {\\r\\n\\t\\t\\t\\trbuggyQSA.push( \"\\\\\\\\[\" + whitespace + \"*name\" + whitespace + \"*=\" +\\r\\n\\t\\t\\t\\t\\twhitespace + \"*(?:\\'\\'|\\\\\"\\\\\")\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Webkit/Opera - :checked should return selected option elements\\r\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\r\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\r\\n\\t\\t\\tif ( !el.querySelectorAll( \":checked\" ).length ) {\\r\\n\\t\\t\\t\\trbuggyQSA.push( \":checked\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Support: Safari 8+, iOS 8+\\r\\n\\t\\t\\t// https://bugs.webkit.org/show_bug.cgi?id=136851\\r\\n\\t\\t\\t// In-page `selector#id sibling-combinator selector` fails\\r\\n\\t\\t\\tif ( !el.querySelectorAll( \"a#\" + expando + \"+*\" ).length ) {\\r\\n\\t\\t\\t\\trbuggyQSA.push( \".#.+[+~]\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Support: Firefox <=3.6 - 5 only\\r\\n\\t\\t\\t// Old Firefox doesn\\'t throw on a badly-escaped identifier.\\r\\n\\t\\t\\tel.querySelectorAll( \"\\\\\\\\\\\\f\" );\\r\\n\\t\\t\\trbuggyQSA.push( \"[\\\\\\\\r\\\\\\\\n\\\\\\\\f]\" );\\r\\n\\t\\t} );\\r\\n\\r\\n\\t\\tassert( function( el ) {\\r\\n\\t\\t\\tel.innerHTML = \"<a href=\\'\\' disabled=\\'disabled\\'></a>\" +\\r\\n\\t\\t\\t\\t\"<select disabled=\\'disabled\\'><option/></select>\";\\r\\n\\r\\n\\t\\t\\t// Support: Windows 8 Native Apps\\r\\n\\t\\t\\t// The type and name attributes are restricted during .innerHTML assignment\\r\\n\\t\\t\\tvar input = document.createElement( \"input\" );\\r\\n\\t\\t\\tinput.setAttribute( \"type\", \"hidden\" );\\r\\n\\t\\t\\tel.appendChild( input ).setAttribute( \"name\", \"D\" );\\r\\n\\r\\n\\t\\t\\t// Support: IE8\\r\\n\\t\\t\\t// Enforce case-sensitivity of name attribute\\r\\n\\t\\t\\tif ( el.querySelectorAll( \"[name=d]\" ).length ) {\\r\\n\\t\\t\\t\\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\\r\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\r\\n\\t\\t\\tif ( el.querySelectorAll( \":enabled\" ).length !== 2 ) {\\r\\n\\t\\t\\t\\trbuggyQSA.push( \":enabled\", \":disabled\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Support: IE9-11+\\r\\n\\t\\t\\t// IE\\'s :disabled selector does not pick up the children of disabled fieldsets\\r\\n\\t\\t\\tdocElem.appendChild( el ).disabled = true;\\r\\n\\t\\t\\tif ( el.querySelectorAll( \":disabled\" ).length !== 2 ) {\\r\\n\\t\\t\\t\\trbuggyQSA.push( \":enabled\", \":disabled\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Support: Opera 10 - 11 only\\r\\n\\t\\t\\t// Opera 10-11 does not throw on post-comma invalid pseudos\\r\\n\\t\\t\\tel.querySelectorAll( \"*,:x\" );\\r\\n\\t\\t\\trbuggyQSA.push( \",.*:\" );\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n\\r\\n\\tif ( ( support.matchesSelector = rnative.test( ( matches = docElem.matches ||\\r\\n\\t\\tdocElem.webkitMatchesSelector ||\\r\\n\\t\\tdocElem.mozMatchesSelector ||\\r\\n\\t\\tdocElem.oMatchesSelector ||\\r\\n\\t\\tdocElem.msMatchesSelector ) ) ) ) {\\r\\n\\r\\n\\t\\tassert( function( el ) {\\r\\n\\r\\n\\t\\t\\t// Check to see if it\\'s possible to do matchesSelector\\r\\n\\t\\t\\t// on a disconnected node (IE 9)\\r\\n\\t\\t\\tsupport.disconnectedMatch = matches.call( el, \"*\" );\\r\\n\\r\\n\\t\\t\\t// This should fail with an exception\\r\\n\\t\\t\\t// Gecko does not error, returns false instead\\r\\n\\t\\t\\tmatches.call( el, \"[s!=\\'\\']:x\" );\\r\\n\\t\\t\\trbuggyMatches.push( \"!=\", pseudos );\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n\\r\\n\\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join( \"|\" ) );\\r\\n\\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join( \"|\" ) );\\r\\n\\r\\n\\t/* Contains\\r\\n\\t---------------------------------------------------------------------- */\\r\\n\\thasCompare = rnative.test( docElem.compareDocumentPosition );\\r\\n\\r\\n\\t// Element contains another\\r\\n\\t// Purposefully self-exclusive\\r\\n\\t// As in, an element does not contain itself\\r\\n\\tcontains = hasCompare || rnative.test( docElem.contains ) ?\\r\\n\\t\\tfunction( a, b ) {\\r\\n\\t\\t\\tvar adown = a.nodeType === 9 ? a.documentElement : a,\\r\\n\\t\\t\\t\\tbup = b && b.parentNode;\\r\\n\\t\\t\\treturn a === bup || !!( bup && bup.nodeType === 1 && (\\r\\n\\t\\t\\t\\tadown.contains ?\\r\\n\\t\\t\\t\\t\\tadown.contains( bup ) :\\r\\n\\t\\t\\t\\t\\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\\r\\n\\t\\t\\t) );\\r\\n\\t\\t} :\\r\\n\\t\\tfunction( a, b ) {\\r\\n\\t\\t\\tif ( b ) {\\r\\n\\t\\t\\t\\twhile ( ( b = b.parentNode ) ) {\\r\\n\\t\\t\\t\\t\\tif ( b === a ) {\\r\\n\\t\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn false;\\r\\n\\t\\t};\\r\\n\\r\\n\\t/* Sorting\\r\\n\\t---------------------------------------------------------------------- */\\r\\n\\r\\n\\t// Document order sorting\\r\\n\\tsortOrder = hasCompare ?\\r\\n\\tfunction( a, b ) {\\r\\n\\r\\n\\t\\t// Flag for duplicate removal\\r\\n\\t\\tif ( a === b ) {\\r\\n\\t\\t\\thasDuplicate = true;\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Sort on method existence if only one input has compareDocumentPosition\\r\\n\\t\\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\\r\\n\\t\\tif ( compare ) {\\r\\n\\t\\t\\treturn compare;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Calculate position if both inputs belong to the same document\\r\\n\\t\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t\\t// two documents; shallow comparisons work.\\r\\n\\t\\t// eslint-disable-next-line eqeqeq\\r\\n\\t\\tcompare = ( a.ownerDocument || a ) == ( b.ownerDocument || b ) ?\\r\\n\\t\\t\\ta.compareDocumentPosition( b ) :\\r\\n\\r\\n\\t\\t\\t// Otherwise we know they are disconnected\\r\\n\\t\\t\\t1;\\r\\n\\r\\n\\t\\t// Disconnected nodes\\r\\n\\t\\tif ( compare & 1 ||\\r\\n\\t\\t\\t( !support.sortDetached && b.compareDocumentPosition( a ) === compare ) ) {\\r\\n\\r\\n\\t\\t\\t// Choose the first element that is related to our preferred document\\r\\n\\t\\t\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t\\t\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t\\t\\t// two documents; shallow comparisons work.\\r\\n\\t\\t\\t// eslint-disable-next-line eqeqeq\\r\\n\\t\\t\\tif ( a == document || a.ownerDocument == preferredDoc &&\\r\\n\\t\\t\\t\\tcontains( preferredDoc, a ) ) {\\r\\n\\t\\t\\t\\treturn -1;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t\\t\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t\\t\\t// two documents; shallow comparisons work.\\r\\n\\t\\t\\t// eslint-disable-next-line eqeqeq\\r\\n\\t\\t\\tif ( b == document || b.ownerDocument == preferredDoc &&\\r\\n\\t\\t\\t\\tcontains( preferredDoc, b ) ) {\\r\\n\\t\\t\\t\\treturn 1;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Maintain original order\\r\\n\\t\\t\\treturn sortInput ?\\r\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\r\\n\\t\\t\\t\\t0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn compare & 4 ? -1 : 1;\\r\\n\\t} :\\r\\n\\tfunction( a, b ) {\\r\\n\\r\\n\\t\\t// Exit early if the nodes are identical\\r\\n\\t\\tif ( a === b ) {\\r\\n\\t\\t\\thasDuplicate = true;\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar cur,\\r\\n\\t\\t\\ti = 0,\\r\\n\\t\\t\\taup = a.parentNode,\\r\\n\\t\\t\\tbup = b.parentNode,\\r\\n\\t\\t\\tap = [ a ],\\r\\n\\t\\t\\tbp = [ b ];\\r\\n\\r\\n\\t\\t// Parentless nodes are either documents or disconnected\\r\\n\\t\\tif ( !aup || !bup ) {\\r\\n\\r\\n\\t\\t\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t\\t\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t\\t\\t// two documents; shallow comparisons work.\\r\\n\\t\\t\\t/* eslint-disable eqeqeq */\\r\\n\\t\\t\\treturn a == document ? -1 :\\r\\n\\t\\t\\t\\tb == document ? 1 :\\r\\n\\t\\t\\t\\t/* eslint-enable eqeqeq */\\r\\n\\t\\t\\t\\taup ? -1 :\\r\\n\\t\\t\\t\\tbup ? 1 :\\r\\n\\t\\t\\t\\tsortInput ?\\r\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\r\\n\\t\\t\\t\\t0;\\r\\n\\r\\n\\t\\t// If the nodes are siblings, we can do a quick check\\r\\n\\t\\t} else if ( aup === bup ) {\\r\\n\\t\\t\\treturn siblingCheck( a, b );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Otherwise we need full lists of their ancestors for comparison\\r\\n\\t\\tcur = a;\\r\\n\\t\\twhile ( ( cur = cur.parentNode ) ) {\\r\\n\\t\\t\\tap.unshift( cur );\\r\\n\\t\\t}\\r\\n\\t\\tcur = b;\\r\\n\\t\\twhile ( ( cur = cur.parentNode ) ) {\\r\\n\\t\\t\\tbp.unshift( cur );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Walk down the tree looking for a discrepancy\\r\\n\\t\\twhile ( ap[ i ] === bp[ i ] ) {\\r\\n\\t\\t\\ti++;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn i ?\\r\\n\\r\\n\\t\\t\\t// Do a sibling check if the nodes have a common ancestor\\r\\n\\t\\t\\tsiblingCheck( ap[ i ], bp[ i ] ) :\\r\\n\\r\\n\\t\\t\\t// Otherwise nodes in our document sort first\\r\\n\\t\\t\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t\\t\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t\\t\\t// two documents; shallow comparisons work.\\r\\n\\t\\t\\t/* eslint-disable eqeqeq */\\r\\n\\t\\t\\tap[ i ] == preferredDoc ? -1 :\\r\\n\\t\\t\\tbp[ i ] == preferredDoc ? 1 :\\r\\n\\t\\t\\t/* eslint-enable eqeqeq */\\r\\n\\t\\t\\t0;\\r\\n\\t};\\r\\n\\r\\n\\treturn document;\\r\\n};\\r\\n\\r\\nSizzle.matches = function( expr, elements ) {\\r\\n\\treturn Sizzle( expr, null, null, elements );\\r\\n};\\r\\n\\r\\nSizzle.matchesSelector = function( elem, expr ) {\\r\\n\\tsetDocument( elem );\\r\\n\\r\\n\\tif ( support.matchesSelector && documentIsHTML &&\\r\\n\\t\\t!nonnativeSelectorCache[ expr + \" \" ] &&\\r\\n\\t\\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\\r\\n\\t\\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\\r\\n\\r\\n\\t\\ttry {\\r\\n\\t\\t\\tvar ret = matches.call( elem, expr );\\r\\n\\r\\n\\t\\t\\t// IE 9\\'s matchesSelector returns false on disconnected nodes\\r\\n\\t\\t\\tif ( ret || support.disconnectedMatch ||\\r\\n\\r\\n\\t\\t\\t\\t// As well, disconnected nodes are said to be in a document\\r\\n\\t\\t\\t\\t// fragment in IE 9\\r\\n\\t\\t\\t\\telem.document && elem.document.nodeType !== 11 ) {\\r\\n\\t\\t\\t\\treturn ret;\\r\\n\\t\\t\\t}\\r\\n\\t\\t} catch ( e ) {\\r\\n\\t\\t\\tnonnativeSelectorCache( expr, true );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\\r\\n};\\r\\n\\r\\nSizzle.contains = function( context, elem ) {\\r\\n\\r\\n\\t// Set document vars if needed\\r\\n\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t// two documents; shallow comparisons work.\\r\\n\\t// eslint-disable-next-line eqeqeq\\r\\n\\tif ( ( context.ownerDocument || context ) != document ) {\\r\\n\\t\\tsetDocument( context );\\r\\n\\t}\\r\\n\\treturn contains( context, elem );\\r\\n};\\r\\n\\r\\nSizzle.attr = function( elem, name ) {\\r\\n\\r\\n\\t// Set document vars if needed\\r\\n\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t// two documents; shallow comparisons work.\\r\\n\\t// eslint-disable-next-line eqeqeq\\r\\n\\tif ( ( elem.ownerDocument || elem ) != document ) {\\r\\n\\t\\tsetDocument( elem );\\r\\n\\t}\\r\\n\\r\\n\\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\\r\\n\\r\\n\\t\\t// Don\\'t get fooled by Object.prototype properties (jQuery #13807)\\r\\n\\t\\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\\r\\n\\t\\t\\tfn( elem, name, !documentIsHTML ) :\\r\\n\\t\\t\\tundefined;\\r\\n\\r\\n\\treturn val !== undefined ?\\r\\n\\t\\tval :\\r\\n\\t\\tsupport.attributes || !documentIsHTML ?\\r\\n\\t\\t\\telem.getAttribute( name ) :\\r\\n\\t\\t\\t( val = elem.getAttributeNode( name ) ) && val.specified ?\\r\\n\\t\\t\\t\\tval.value :\\r\\n\\t\\t\\t\\tnull;\\r\\n};\\r\\n\\r\\nSizzle.escape = function( sel ) {\\r\\n\\treturn ( sel + \"\" ).replace( rcssescape, fcssescape );\\r\\n};\\r\\n\\r\\nSizzle.error = function( msg ) {\\r\\n\\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\\r\\n};\\r\\n\\r\\n/**\\r\\n * Document sorting and removing duplicates\\r\\n * @param {ArrayLike} results\\r\\n */\\r\\nSizzle.uniqueSort = function( results ) {\\r\\n\\tvar elem,\\r\\n\\t\\tduplicates = [],\\r\\n\\t\\tj = 0,\\r\\n\\t\\ti = 0;\\r\\n\\r\\n\\t// Unless we *know* we can detect duplicates, assume their presence\\r\\n\\thasDuplicate = !support.detectDuplicates;\\r\\n\\tsortInput = !support.sortStable && results.slice( 0 );\\r\\n\\tresults.sort( sortOrder );\\r\\n\\r\\n\\tif ( hasDuplicate ) {\\r\\n\\t\\twhile ( ( elem = results[ i++ ] ) ) {\\r\\n\\t\\t\\tif ( elem === results[ i ] ) {\\r\\n\\t\\t\\t\\tj = duplicates.push( i );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\twhile ( j-- ) {\\r\\n\\t\\t\\tresults.splice( duplicates[ j ], 1 );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Clear input after sorting to release objects\\r\\n\\t// See https://github.com/jquery/sizzle/pull/225\\r\\n\\tsortInput = null;\\r\\n\\r\\n\\treturn results;\\r\\n};\\r\\n\\r\\n/**\\r\\n * Utility function for retrieving the text value of an array of DOM nodes\\r\\n * @param {Array|Element} elem\\r\\n */\\r\\ngetText = Sizzle.getText = function( elem ) {\\r\\n\\tvar node,\\r\\n\\t\\tret = \"\",\\r\\n\\t\\ti = 0,\\r\\n\\t\\tnodeType = elem.nodeType;\\r\\n\\r\\n\\tif ( !nodeType ) {\\r\\n\\r\\n\\t\\t// If no nodeType, this is expected to be an array\\r\\n\\t\\twhile ( ( node = elem[ i++ ] ) ) {\\r\\n\\r\\n\\t\\t\\t// Do not traverse comment nodes\\r\\n\\t\\t\\tret += getText( node );\\r\\n\\t\\t}\\r\\n\\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\\r\\n\\r\\n\\t\\t// Use textContent for elements\\r\\n\\t\\t// innerText usage removed for consistency of new lines (jQuery #11153)\\r\\n\\t\\tif ( typeof elem.textContent === \"string\" ) {\\r\\n\\t\\t\\treturn elem.textContent;\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// Traverse its children\\r\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\r\\n\\t\\t\\t\\tret += getText( elem );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t} else if ( nodeType === 3 || nodeType === 4 ) {\\r\\n\\t\\treturn elem.nodeValue;\\r\\n\\t}\\r\\n\\r\\n\\t// Do not include comment or processing instruction nodes\\r\\n\\r\\n\\treturn ret;\\r\\n};\\r\\n\\r\\nExpr = Sizzle.selectors = {\\r\\n\\r\\n\\t// Can be adjusted by the user\\r\\n\\tcacheLength: 50,\\r\\n\\r\\n\\tcreatePseudo: markFunction,\\r\\n\\r\\n\\tmatch: matchExpr,\\r\\n\\r\\n\\tattrHandle: {},\\r\\n\\r\\n\\tfind: {},\\r\\n\\r\\n\\trelative: {\\r\\n\\t\\t\">\": { dir: \"parentNode\", first: true },\\r\\n\\t\\t\" \": { dir: \"parentNode\" },\\r\\n\\t\\t\"+\": { dir: \"previousSibling\", first: true },\\r\\n\\t\\t\"~\": { dir: \"previousSibling\" }\\r\\n\\t},\\r\\n\\r\\n\\tpreFilter: {\\r\\n\\t\\t\"ATTR\": function( match ) {\\r\\n\\t\\t\\tmatch[ 1 ] = match[ 1 ].replace( runescape, funescape );\\r\\n\\r\\n\\t\\t\\t// Move the given value to match[3] whether quoted or unquoted\\r\\n\\t\\t\\tmatch[ 3 ] = ( match[ 3 ] || match[ 4 ] ||\\r\\n\\t\\t\\t\\tmatch[ 5 ] || \"\" ).replace( runescape, funescape );\\r\\n\\r\\n\\t\\t\\tif ( match[ 2 ] === \"~=\" ) {\\r\\n\\t\\t\\t\\tmatch[ 3 ] = \" \" + match[ 3 ] + \" \";\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn match.slice( 0, 4 );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"CHILD\": function( match ) {\\r\\n\\r\\n\\t\\t\\t/* matches from matchExpr[\"CHILD\"]\\r\\n\\t\\t\\t\\t1 type (only|nth|...)\\r\\n\\t\\t\\t\\t2 what (child|of-type)\\r\\n\\t\\t\\t\\t3 argument (even|odd|\\\\d*|\\\\d*n([+-]\\\\d+)?|...)\\r\\n\\t\\t\\t\\t4 xn-component of xn+y argument ([+-]?\\\\d*n|)\\r\\n\\t\\t\\t\\t5 sign of xn-component\\r\\n\\t\\t\\t\\t6 x of xn-component\\r\\n\\t\\t\\t\\t7 sign of y-component\\r\\n\\t\\t\\t\\t8 y of y-component\\r\\n\\t\\t\\t*/\\r\\n\\t\\t\\tmatch[ 1 ] = match[ 1 ].toLowerCase();\\r\\n\\r\\n\\t\\t\\tif ( match[ 1 ].slice( 0, 3 ) === \"nth\" ) {\\r\\n\\r\\n\\t\\t\\t\\t// nth-* requires argument\\r\\n\\t\\t\\t\\tif ( !match[ 3 ] ) {\\r\\n\\t\\t\\t\\t\\tSizzle.error( match[ 0 ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// numeric x and y parameters for Expr.filter.CHILD\\r\\n\\t\\t\\t\\t// remember that false/true cast respectively to 0/1\\r\\n\\t\\t\\t\\tmatch[ 4 ] = +( match[ 4 ] ?\\r\\n\\t\\t\\t\\t\\tmatch[ 5 ] + ( match[ 6 ] || 1 ) :\\r\\n\\t\\t\\t\\t\\t2 * ( match[ 3 ] === \"even\" || match[ 3 ] === \"odd\" ) );\\r\\n\\t\\t\\t\\tmatch[ 5 ] = +( ( match[ 7 ] + match[ 8 ] ) || match[ 3 ] === \"odd\" );\\r\\n\\r\\n\\t\\t\\t\\t// other types prohibit arguments\\r\\n\\t\\t\\t} else if ( match[ 3 ] ) {\\r\\n\\t\\t\\t\\tSizzle.error( match[ 0 ] );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn match;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"PSEUDO\": function( match ) {\\r\\n\\t\\t\\tvar excess,\\r\\n\\t\\t\\t\\tunquoted = !match[ 6 ] && match[ 2 ];\\r\\n\\r\\n\\t\\t\\tif ( matchExpr[ \"CHILD\" ].test( match[ 0 ] ) ) {\\r\\n\\t\\t\\t\\treturn null;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Accept quoted arguments as-is\\r\\n\\t\\t\\tif ( match[ 3 ] ) {\\r\\n\\t\\t\\t\\tmatch[ 2 ] = match[ 4 ] || match[ 5 ] || \"\";\\r\\n\\r\\n\\t\\t\\t// Strip excess characters from unquoted arguments\\r\\n\\t\\t\\t} else if ( unquoted && rpseudo.test( unquoted ) &&\\r\\n\\r\\n\\t\\t\\t\\t// Get excess from tokenize (recursively)\\r\\n\\t\\t\\t\\t( excess = tokenize( unquoted, true ) ) &&\\r\\n\\r\\n\\t\\t\\t\\t// advance to the next closing parenthesis\\r\\n\\t\\t\\t\\t( excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// excess is a negative index\\r\\n\\t\\t\\t\\tmatch[ 0 ] = match[ 0 ].slice( 0, excess );\\r\\n\\t\\t\\t\\tmatch[ 2 ] = unquoted.slice( 0, excess );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Return only captures needed by the pseudo filter method (type and argument)\\r\\n\\t\\t\\treturn match.slice( 0, 3 );\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tfilter: {\\r\\n\\r\\n\\t\\t\"TAG\": function( nodeNameSelector ) {\\r\\n\\t\\t\\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\\r\\n\\t\\t\\treturn nodeNameSelector === \"*\" ?\\r\\n\\t\\t\\t\\tfunction() {\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t} :\\r\\n\\t\\t\\t\\tfunction( elem ) {\\r\\n\\t\\t\\t\\t\\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"CLASS\": function( className ) {\\r\\n\\t\\t\\tvar pattern = classCache[ className + \" \" ];\\r\\n\\r\\n\\t\\t\\treturn pattern ||\\r\\n\\t\\t\\t\\t( pattern = new RegExp( \"(^|\" + whitespace +\\r\\n\\t\\t\\t\\t\\t\")\" + className + \"(\" + whitespace + \"|$)\" ) ) && classCache(\\r\\n\\t\\t\\t\\t\\t\\tclassName, function( elem ) {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn pattern.test(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttypeof elem.className === \"string\" && elem.className ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\ttypeof elem.getAttribute !== \"undefined\" &&\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\telem.getAttribute( \"class\" ) ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\"\"\\r\\n\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"ATTR\": function( name, operator, check ) {\\r\\n\\t\\t\\treturn function( elem ) {\\r\\n\\t\\t\\t\\tvar result = Sizzle.attr( elem, name );\\r\\n\\r\\n\\t\\t\\t\\tif ( result == null ) {\\r\\n\\t\\t\\t\\t\\treturn operator === \"!=\";\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif ( !operator ) {\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tresult += \"\";\\r\\n\\r\\n\\t\\t\\t\\t/* eslint-disable max-len */\\r\\n\\r\\n\\t\\t\\t\\treturn operator === \"=\" ? result === check :\\r\\n\\t\\t\\t\\t\\toperator === \"!=\" ? result !== check :\\r\\n\\t\\t\\t\\t\\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\\r\\n\\t\\t\\t\\t\\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\\r\\n\\t\\t\\t\\t\\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\\r\\n\\t\\t\\t\\t\\toperator === \"~=\" ? ( \" \" + result.replace( rwhitespace, \" \" ) + \" \" ).indexOf( check ) > -1 :\\r\\n\\t\\t\\t\\t\\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\\r\\n\\t\\t\\t\\t\\tfalse;\\r\\n\\t\\t\\t\\t/* eslint-enable max-len */\\r\\n\\r\\n\\t\\t\\t};\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"CHILD\": function( type, what, _argument, first, last ) {\\r\\n\\t\\t\\tvar simple = type.slice( 0, 3 ) !== \"nth\",\\r\\n\\t\\t\\t\\tforward = type.slice( -4 ) !== \"last\",\\r\\n\\t\\t\\t\\tofType = what === \"of-type\";\\r\\n\\r\\n\\t\\t\\treturn first === 1 && last === 0 ?\\r\\n\\r\\n\\t\\t\\t\\t// Shortcut for :nth-*(n)\\r\\n\\t\\t\\t\\tfunction( elem ) {\\r\\n\\t\\t\\t\\t\\treturn !!elem.parentNode;\\r\\n\\t\\t\\t\\t} :\\r\\n\\r\\n\\t\\t\\t\\tfunction( elem, _context, xml ) {\\r\\n\\t\\t\\t\\t\\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\\r\\n\\t\\t\\t\\t\\t\\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\\r\\n\\t\\t\\t\\t\\t\\tparent = elem.parentNode,\\r\\n\\t\\t\\t\\t\\t\\tname = ofType && elem.nodeName.toLowerCase(),\\r\\n\\t\\t\\t\\t\\t\\tuseCache = !xml && !ofType,\\r\\n\\t\\t\\t\\t\\t\\tdiff = false;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( parent ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// :(first|last|only)-(child|of-type)\\r\\n\\t\\t\\t\\t\\t\\tif ( simple ) {\\r\\n\\t\\t\\t\\t\\t\\t\\twhile ( dir ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( ( node = node[ dir ] ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ofType ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Reverse direction for :only-* (if we haven\\'t yet done so)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstart = dir = type === \"only\" && !start && \"nextSibling\";\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tstart = [ forward ? parent.firstChild : parent.lastChild ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// non-xml :nth-child(...) stores cache data on `parent`\\r\\n\\t\\t\\t\\t\\t\\tif ( forward && useCache ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Seek `elem` from a previously-cached index\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\r\\n\\t\\t\\t\\t\\t\\t\\tnode = parent;\\r\\n\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || ( node[ expando ] = {} );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\r\\n\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\r\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t( outerCache[ node.uniqueID ] = {} );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\r\\n\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\r\\n\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex && cache[ 2 ];\\r\\n\\t\\t\\t\\t\\t\\t\\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Fallback to seeking `elem` from the start\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// When found, cache indexes on `parent` and break\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( node.nodeType === 1 && ++diff && node === elem ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Use previously-cached element index if available\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || ( node[ expando ] = {} );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t( outerCache[ node.uniqueID ] = {} );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex;\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// xml :nth-child(...)\\r\\n\\t\\t\\t\\t\\t\\t\\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( diff === false ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Use the same loop as above to seek `elem` from the start\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( ( node = ++nodeIndex && node && node[ dir ] ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t( diff = nodeIndex = 0 ) || start.pop() ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ( ofType ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) &&\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t++diff ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Cache the index of each encountered element\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( node[ expando ] = {} );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( outerCache[ node.uniqueID ] = {} );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, diff ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( node === elem ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Incorporate the offset, then check against cycle size\\r\\n\\t\\t\\t\\t\\t\\tdiff -= last;\\r\\n\\t\\t\\t\\t\\t\\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"PSEUDO\": function( pseudo, argument ) {\\r\\n\\r\\n\\t\\t\\t// pseudo-class names are case-insensitive\\r\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#pseudo-classes\\r\\n\\t\\t\\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\\r\\n\\t\\t\\t// Remember that setFilters inherits from pseudos\\r\\n\\t\\t\\tvar args,\\r\\n\\t\\t\\t\\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\\r\\n\\t\\t\\t\\t\\tSizzle.error( \"unsupported pseudo: \" + pseudo );\\r\\n\\r\\n\\t\\t\\t// The user may use createPseudo to indicate that\\r\\n\\t\\t\\t// arguments are needed to create the filter function\\r\\n\\t\\t\\t// just as Sizzle does\\r\\n\\t\\t\\tif ( fn[ expando ] ) {\\r\\n\\t\\t\\t\\treturn fn( argument );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// But maintain support for old signatures\\r\\n\\t\\t\\tif ( fn.length > 1 ) {\\r\\n\\t\\t\\t\\targs = [ pseudo, pseudo, \"\", argument ];\\r\\n\\t\\t\\t\\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\\r\\n\\t\\t\\t\\t\\tmarkFunction( function( seed, matches ) {\\r\\n\\t\\t\\t\\t\\t\\tvar idx,\\r\\n\\t\\t\\t\\t\\t\\t\\tmatched = fn( seed, argument ),\\r\\n\\t\\t\\t\\t\\t\\t\\ti = matched.length;\\r\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tidx = indexOf( seed, matched[ i ] );\\r\\n\\t\\t\\t\\t\\t\\t\\tseed[ idx ] = !( matches[ idx ] = matched[ i ] );\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t} ) :\\r\\n\\t\\t\\t\\t\\tfunction( elem ) {\\r\\n\\t\\t\\t\\t\\t\\treturn fn( elem, 0, args );\\r\\n\\t\\t\\t\\t\\t};\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn fn;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tpseudos: {\\r\\n\\r\\n\\t\\t// Potentially complex pseudos\\r\\n\\t\\t\"not\": markFunction( function( selector ) {\\r\\n\\r\\n\\t\\t\\t// Trim the selector passed to compile\\r\\n\\t\\t\\t// to avoid treating leading and trailing\\r\\n\\t\\t\\t// spaces as combinators\\r\\n\\t\\t\\tvar input = [],\\r\\n\\t\\t\\t\\tresults = [],\\r\\n\\t\\t\\t\\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\\r\\n\\r\\n\\t\\t\\treturn matcher[ expando ] ?\\r\\n\\t\\t\\t\\tmarkFunction( function( seed, matches, _context, xml ) {\\r\\n\\t\\t\\t\\t\\tvar elem,\\r\\n\\t\\t\\t\\t\\t\\tunmatched = matcher( seed, null, xml, [] ),\\r\\n\\t\\t\\t\\t\\t\\ti = seed.length;\\r\\n\\r\\n\\t\\t\\t\\t\\t// Match elements unmatched by `matcher`\\r\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( ( elem = unmatched[ i ] ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tseed[ i ] = !( matches[ i ] = elem );\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} ) :\\r\\n\\t\\t\\t\\tfunction( elem, _context, xml ) {\\r\\n\\t\\t\\t\\t\\tinput[ 0 ] = elem;\\r\\n\\t\\t\\t\\t\\tmatcher( input, null, xml, results );\\r\\n\\r\\n\\t\\t\\t\\t\\t// Don\\'t keep the element (issue #299)\\r\\n\\t\\t\\t\\t\\tinput[ 0 ] = null;\\r\\n\\t\\t\\t\\t\\treturn !results.pop();\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t\"has\": markFunction( function( selector ) {\\r\\n\\t\\t\\treturn function( elem ) {\\r\\n\\t\\t\\t\\treturn Sizzle( selector, elem ).length > 0;\\r\\n\\t\\t\\t};\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t\"contains\": markFunction( function( text ) {\\r\\n\\t\\t\\ttext = text.replace( runescape, funescape );\\r\\n\\t\\t\\treturn function( elem ) {\\r\\n\\t\\t\\t\\treturn ( elem.textContent || getText( elem ) ).indexOf( text ) > -1;\\r\\n\\t\\t\\t};\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t// \"Whether an element is represented by a :lang() selector\\r\\n\\t\\t// is based solely on the element\\'s language value\\r\\n\\t\\t// being equal to the identifier C,\\r\\n\\t\\t// or beginning with the identifier C immediately followed by \"-\".\\r\\n\\t\\t// The matching of C against the element\\'s language value is performed case-insensitively.\\r\\n\\t\\t// The identifier C does not have to be a valid language name.\"\\r\\n\\t\\t// http://www.w3.org/TR/selectors/#lang-pseudo\\r\\n\\t\\t\"lang\": markFunction( function( lang ) {\\r\\n\\r\\n\\t\\t\\t// lang value must be a valid identifier\\r\\n\\t\\t\\tif ( !ridentifier.test( lang || \"\" ) ) {\\r\\n\\t\\t\\t\\tSizzle.error( \"unsupported lang: \" + lang );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tlang = lang.replace( runescape, funescape ).toLowerCase();\\r\\n\\t\\t\\treturn function( elem ) {\\r\\n\\t\\t\\t\\tvar elemLang;\\r\\n\\t\\t\\t\\tdo {\\r\\n\\t\\t\\t\\t\\tif ( ( elemLang = documentIsHTML ?\\r\\n\\t\\t\\t\\t\\t\\telem.lang :\\r\\n\\t\\t\\t\\t\\t\\telem.getAttribute( \"xml:lang\" ) || elem.getAttribute( \"lang\" ) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\telemLang = elemLang.toLowerCase();\\r\\n\\t\\t\\t\\t\\t\\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} while ( ( elem = elem.parentNode ) && elem.nodeType === 1 );\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t};\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t// Miscellaneous\\r\\n\\t\\t\"target\": function( elem ) {\\r\\n\\t\\t\\tvar hash = window.location && window.location.hash;\\r\\n\\t\\t\\treturn hash && hash.slice( 1 ) === elem.id;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"root\": function( elem ) {\\r\\n\\t\\t\\treturn elem === docElem;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"focus\": function( elem ) {\\r\\n\\t\\t\\treturn elem === document.activeElement &&\\r\\n\\t\\t\\t\\t( !document.hasFocus || document.hasFocus() ) &&\\r\\n\\t\\t\\t\\t!!( elem.type || elem.href || ~elem.tabIndex );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Boolean properties\\r\\n\\t\\t\"enabled\": createDisabledPseudo( false ),\\r\\n\\t\\t\"disabled\": createDisabledPseudo( true ),\\r\\n\\r\\n\\t\\t\"checked\": function( elem ) {\\r\\n\\r\\n\\t\\t\\t// In CSS3, :checked should return both checked and selected elements\\r\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\r\\n\\t\\t\\tvar nodeName = elem.nodeName.toLowerCase();\\r\\n\\t\\t\\treturn ( nodeName === \"input\" && !!elem.checked ) ||\\r\\n\\t\\t\\t\\t( nodeName === \"option\" && !!elem.selected );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"selected\": function( elem ) {\\r\\n\\r\\n\\t\\t\\t// Accessing this property makes selected-by-default\\r\\n\\t\\t\\t// options in Safari work properly\\r\\n\\t\\t\\tif ( elem.parentNode ) {\\r\\n\\t\\t\\t\\t// eslint-disable-next-line no-unused-expressions\\r\\n\\t\\t\\t\\telem.parentNode.selectedIndex;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn elem.selected === true;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Contents\\r\\n\\t\\t\"empty\": function( elem ) {\\r\\n\\r\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#empty-pseudo\\r\\n\\t\\t\\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\\r\\n\\t\\t\\t//   but not by others (comment: 8; processing instruction: 7; etc.)\\r\\n\\t\\t\\t// nodeType < 6 works because attributes (2) do not appear as children\\r\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\r\\n\\t\\t\\t\\tif ( elem.nodeType < 6 ) {\\r\\n\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn true;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"parent\": function( elem ) {\\r\\n\\t\\t\\treturn !Expr.pseudos[ \"empty\" ]( elem );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Element/input types\\r\\n\\t\\t\"header\": function( elem ) {\\r\\n\\t\\t\\treturn rheader.test( elem.nodeName );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"input\": function( elem ) {\\r\\n\\t\\t\\treturn rinputs.test( elem.nodeName );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"button\": function( elem ) {\\r\\n\\t\\t\\tvar name = elem.nodeName.toLowerCase();\\r\\n\\t\\t\\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t\"text\": function( elem ) {\\r\\n\\t\\t\\tvar attr;\\r\\n\\t\\t\\treturn elem.nodeName.toLowerCase() === \"input\" &&\\r\\n\\t\\t\\t\\telem.type === \"text\" &&\\r\\n\\r\\n\\t\\t\\t\\t// Support: IE<8\\r\\n\\t\\t\\t\\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\\r\\n\\t\\t\\t\\t( ( attr = elem.getAttribute( \"type\" ) ) == null ||\\r\\n\\t\\t\\t\\t\\tattr.toLowerCase() === \"text\" );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Position-in-collection\\r\\n\\t\\t\"first\": createPositionalPseudo( function() {\\r\\n\\t\\t\\treturn [ 0 ];\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t\"last\": createPositionalPseudo( function( _matchIndexes, length ) {\\r\\n\\t\\t\\treturn [ length - 1 ];\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t\"eq\": createPositionalPseudo( function( _matchIndexes, length, argument ) {\\r\\n\\t\\t\\treturn [ argument < 0 ? argument + length : argument ];\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t\"even\": createPositionalPseudo( function( matchIndexes, length ) {\\r\\n\\t\\t\\tvar i = 0;\\r\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\r\\n\\t\\t\\t\\tmatchIndexes.push( i );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn matchIndexes;\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t\"odd\": createPositionalPseudo( function( matchIndexes, length ) {\\r\\n\\t\\t\\tvar i = 1;\\r\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\r\\n\\t\\t\\t\\tmatchIndexes.push( i );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn matchIndexes;\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t\"lt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\\r\\n\\t\\t\\tvar i = argument < 0 ?\\r\\n\\t\\t\\t\\targument + length :\\r\\n\\t\\t\\t\\targument > length ?\\r\\n\\t\\t\\t\\t\\tlength :\\r\\n\\t\\t\\t\\t\\targument;\\r\\n\\t\\t\\tfor ( ; --i >= 0; ) {\\r\\n\\t\\t\\t\\tmatchIndexes.push( i );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn matchIndexes;\\r\\n\\t\\t} ),\\r\\n\\r\\n\\t\\t\"gt\": createPositionalPseudo( function( matchIndexes, length, argument ) {\\r\\n\\t\\t\\tvar i = argument < 0 ? argument + length : argument;\\r\\n\\t\\t\\tfor ( ; ++i < length; ) {\\r\\n\\t\\t\\t\\tmatchIndexes.push( i );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn matchIndexes;\\r\\n\\t\\t} )\\r\\n\\t}\\r\\n};\\r\\n\\r\\nExpr.pseudos[ \"nth\" ] = Expr.pseudos[ \"eq\" ];\\r\\n\\r\\n// Add button/input type pseudos\\r\\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\\r\\n\\tExpr.pseudos[ i ] = createInputPseudo( i );\\r\\n}\\r\\nfor ( i in { submit: true, reset: true } ) {\\r\\n\\tExpr.pseudos[ i ] = createButtonPseudo( i );\\r\\n}\\r\\n\\r\\n// Easy API for creating new setFilters\\r\\nfunction setFilters() {}\\r\\nsetFilters.prototype = Expr.filters = Expr.pseudos;\\r\\nExpr.setFilters = new setFilters();\\r\\n\\r\\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\\r\\n\\tvar matched, match, tokens, type,\\r\\n\\t\\tsoFar, groups, preFilters,\\r\\n\\t\\tcached = tokenCache[ selector + \" \" ];\\r\\n\\r\\n\\tif ( cached ) {\\r\\n\\t\\treturn parseOnly ? 0 : cached.slice( 0 );\\r\\n\\t}\\r\\n\\r\\n\\tsoFar = selector;\\r\\n\\tgroups = [];\\r\\n\\tpreFilters = Expr.preFilter;\\r\\n\\r\\n\\twhile ( soFar ) {\\r\\n\\r\\n\\t\\t// Comma and first run\\r\\n\\t\\tif ( !matched || ( match = rcomma.exec( soFar ) ) ) {\\r\\n\\t\\t\\tif ( match ) {\\r\\n\\r\\n\\t\\t\\t\\t// Don\\'t consume trailing commas as valid\\r\\n\\t\\t\\t\\tsoFar = soFar.slice( match[ 0 ].length ) || soFar;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tgroups.push( ( tokens = [] ) );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tmatched = false;\\r\\n\\r\\n\\t\\t// Combinators\\r\\n\\t\\tif ( ( match = rcombinators.exec( soFar ) ) ) {\\r\\n\\t\\t\\tmatched = match.shift();\\r\\n\\t\\t\\ttokens.push( {\\r\\n\\t\\t\\t\\tvalue: matched,\\r\\n\\r\\n\\t\\t\\t\\t// Cast descendant combinators to space\\r\\n\\t\\t\\t\\ttype: match[ 0 ].replace( rtrim, \" \" )\\r\\n\\t\\t\\t} );\\r\\n\\t\\t\\tsoFar = soFar.slice( matched.length );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Filters\\r\\n\\t\\tfor ( type in Expr.filter ) {\\r\\n\\t\\t\\tif ( ( match = matchExpr[ type ].exec( soFar ) ) && ( !preFilters[ type ] ||\\r\\n\\t\\t\\t\\t( match = preFilters[ type ]( match ) ) ) ) {\\r\\n\\t\\t\\t\\tmatched = match.shift();\\r\\n\\t\\t\\t\\ttokens.push( {\\r\\n\\t\\t\\t\\t\\tvalue: matched,\\r\\n\\t\\t\\t\\t\\ttype: type,\\r\\n\\t\\t\\t\\t\\tmatches: match\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\tsoFar = soFar.slice( matched.length );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( !matched ) {\\r\\n\\t\\t\\tbreak;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Return the length of the invalid excess\\r\\n\\t// if we\\'re just parsing\\r\\n\\t// Otherwise, throw an error or return tokens\\r\\n\\treturn parseOnly ?\\r\\n\\t\\tsoFar.length :\\r\\n\\t\\tsoFar ?\\r\\n\\t\\t\\tSizzle.error( selector ) :\\r\\n\\r\\n\\t\\t\\t// Cache the tokens\\r\\n\\t\\t\\ttokenCache( selector, groups ).slice( 0 );\\r\\n};\\r\\n\\r\\nfunction toSelector( tokens ) {\\r\\n\\tvar i = 0,\\r\\n\\t\\tlen = tokens.length,\\r\\n\\t\\tselector = \"\";\\r\\n\\tfor ( ; i < len; i++ ) {\\r\\n\\t\\tselector += tokens[ i ].value;\\r\\n\\t}\\r\\n\\treturn selector;\\r\\n}\\r\\n\\r\\nfunction addCombinator( matcher, combinator, base ) {\\r\\n\\tvar dir = combinator.dir,\\r\\n\\t\\tskip = combinator.next,\\r\\n\\t\\tkey = skip || dir,\\r\\n\\t\\tcheckNonElements = base && key === \"parentNode\",\\r\\n\\t\\tdoneName = done++;\\r\\n\\r\\n\\treturn combinator.first ?\\r\\n\\r\\n\\t\\t// Check against closest ancestor/preceding element\\r\\n\\t\\tfunction( elem, context, xml ) {\\r\\n\\t\\t\\twhile ( ( elem = elem[ dir ] ) ) {\\r\\n\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\r\\n\\t\\t\\t\\t\\treturn matcher( elem, context, xml );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn false;\\r\\n\\t\\t} :\\r\\n\\r\\n\\t\\t// Check against all ancestor/preceding elements\\r\\n\\t\\tfunction( elem, context, xml ) {\\r\\n\\t\\t\\tvar oldCache, uniqueCache, outerCache,\\r\\n\\t\\t\\t\\tnewCache = [ dirruns, doneName ];\\r\\n\\r\\n\\t\\t\\t// We can\\'t set arbitrary data on XML nodes, so they don\\'t benefit from combinator caching\\r\\n\\t\\t\\tif ( xml ) {\\r\\n\\t\\t\\t\\twhile ( ( elem = elem[ dir ] ) ) {\\r\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context, xml ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\twhile ( ( elem = elem[ dir ] ) ) {\\r\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\r\\n\\t\\t\\t\\t\\t\\touterCache = elem[ expando ] || ( elem[ expando ] = {} );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\r\\n\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\r\\n\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ elem.uniqueID ] ||\\r\\n\\t\\t\\t\\t\\t\\t\\t( outerCache[ elem.uniqueID ] = {} );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\\r\\n\\t\\t\\t\\t\\t\\t\\telem = elem[ dir ] || elem;\\r\\n\\t\\t\\t\\t\\t\\t} else if ( ( oldCache = uniqueCache[ key ] ) &&\\r\\n\\t\\t\\t\\t\\t\\t\\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Assign to newCache so results back-propagate to previous elements\\r\\n\\t\\t\\t\\t\\t\\t\\treturn ( newCache[ 2 ] = oldCache[ 2 ] );\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Reuse newcache so results back-propagate to previous elements\\r\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache[ key ] = newCache;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// A match means we\\'re done; a fail means we have to keep checking\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( ( newCache[ 2 ] = matcher( elem, context, xml ) ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn false;\\r\\n\\t\\t};\\r\\n}\\r\\n\\r\\nfunction elementMatcher( matchers ) {\\r\\n\\treturn matchers.length > 1 ?\\r\\n\\t\\tfunction( elem, context, xml ) {\\r\\n\\t\\t\\tvar i = matchers.length;\\r\\n\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\tif ( !matchers[ i ]( elem, context, xml ) ) {\\r\\n\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn true;\\r\\n\\t\\t} :\\r\\n\\t\\tmatchers[ 0 ];\\r\\n}\\r\\n\\r\\nfunction multipleContexts( selector, contexts, results ) {\\r\\n\\tvar i = 0,\\r\\n\\t\\tlen = contexts.length;\\r\\n\\tfor ( ; i < len; i++ ) {\\r\\n\\t\\tSizzle( selector, contexts[ i ], results );\\r\\n\\t}\\r\\n\\treturn results;\\r\\n}\\r\\n\\r\\nfunction condense( unmatched, map, filter, context, xml ) {\\r\\n\\tvar elem,\\r\\n\\t\\tnewUnmatched = [],\\r\\n\\t\\ti = 0,\\r\\n\\t\\tlen = unmatched.length,\\r\\n\\t\\tmapped = map != null;\\r\\n\\r\\n\\tfor ( ; i < len; i++ ) {\\r\\n\\t\\tif ( ( elem = unmatched[ i ] ) ) {\\r\\n\\t\\t\\tif ( !filter || filter( elem, context, xml ) ) {\\r\\n\\t\\t\\t\\tnewUnmatched.push( elem );\\r\\n\\t\\t\\t\\tif ( mapped ) {\\r\\n\\t\\t\\t\\t\\tmap.push( i );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn newUnmatched;\\r\\n}\\r\\n\\r\\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\\r\\n\\tif ( postFilter && !postFilter[ expando ] ) {\\r\\n\\t\\tpostFilter = setMatcher( postFilter );\\r\\n\\t}\\r\\n\\tif ( postFinder && !postFinder[ expando ] ) {\\r\\n\\t\\tpostFinder = setMatcher( postFinder, postSelector );\\r\\n\\t}\\r\\n\\treturn markFunction( function( seed, results, context, xml ) {\\r\\n\\t\\tvar temp, i, elem,\\r\\n\\t\\t\\tpreMap = [],\\r\\n\\t\\t\\tpostMap = [],\\r\\n\\t\\t\\tpreexisting = results.length,\\r\\n\\r\\n\\t\\t\\t// Get initial elements from seed or context\\r\\n\\t\\t\\telems = seed || multipleContexts(\\r\\n\\t\\t\\t\\tselector || \"*\",\\r\\n\\t\\t\\t\\tcontext.nodeType ? [ context ] : context,\\r\\n\\t\\t\\t\\t[]\\r\\n\\t\\t\\t),\\r\\n\\r\\n\\t\\t\\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\\r\\n\\t\\t\\tmatcherIn = preFilter && ( seed || !selector ) ?\\r\\n\\t\\t\\t\\tcondense( elems, preMap, preFilter, context, xml ) :\\r\\n\\t\\t\\t\\telems,\\r\\n\\r\\n\\t\\t\\tmatcherOut = matcher ?\\r\\n\\r\\n\\t\\t\\t\\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\\r\\n\\t\\t\\t\\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\\r\\n\\r\\n\\t\\t\\t\\t\\t// ...intermediate processing is necessary\\r\\n\\t\\t\\t\\t\\t[] :\\r\\n\\r\\n\\t\\t\\t\\t\\t// ...otherwise use results directly\\r\\n\\t\\t\\t\\t\\tresults :\\r\\n\\t\\t\\t\\tmatcherIn;\\r\\n\\r\\n\\t\\t// Find primary matches\\r\\n\\t\\tif ( matcher ) {\\r\\n\\t\\t\\tmatcher( matcherIn, matcherOut, context, xml );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Apply postFilter\\r\\n\\t\\tif ( postFilter ) {\\r\\n\\t\\t\\ttemp = condense( matcherOut, postMap );\\r\\n\\t\\t\\tpostFilter( temp, [], context, xml );\\r\\n\\r\\n\\t\\t\\t// Un-match failing elements by moving them back to matcherIn\\r\\n\\t\\t\\ti = temp.length;\\r\\n\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\tif ( ( elem = temp[ i ] ) ) {\\r\\n\\t\\t\\t\\t\\tmatcherOut[ postMap[ i ] ] = !( matcherIn[ postMap[ i ] ] = elem );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( seed ) {\\r\\n\\t\\t\\tif ( postFinder || preFilter ) {\\r\\n\\t\\t\\t\\tif ( postFinder ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\\r\\n\\t\\t\\t\\t\\ttemp = [];\\r\\n\\t\\t\\t\\t\\ti = matcherOut.length;\\r\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( ( elem = matcherOut[ i ] ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Restore matcherIn since elem is not yet a final match\\r\\n\\t\\t\\t\\t\\t\\t\\ttemp.push( ( matcherIn[ i ] = elem ) );\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tpostFinder( null, ( matcherOut = [] ), temp, xml );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Move matched elements from seed to results to keep them synchronized\\r\\n\\t\\t\\t\\ti = matcherOut.length;\\r\\n\\t\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\t\\tif ( ( elem = matcherOut[ i ] ) &&\\r\\n\\t\\t\\t\\t\\t\\t( temp = postFinder ? indexOf( seed, elem ) : preMap[ i ] ) > -1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tseed[ temp ] = !( results[ temp ] = elem );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t// Add elements to results, through postFinder if defined\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tmatcherOut = condense(\\r\\n\\t\\t\\t\\tmatcherOut === results ?\\r\\n\\t\\t\\t\\t\\tmatcherOut.splice( preexisting, matcherOut.length ) :\\r\\n\\t\\t\\t\\t\\tmatcherOut\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\tif ( postFinder ) {\\r\\n\\t\\t\\t\\tpostFinder( null, results, matcherOut, xml );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tpush.apply( results, matcherOut );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n}\\r\\n\\r\\nfunction matcherFromTokens( tokens ) {\\r\\n\\tvar checkContext, matcher, j,\\r\\n\\t\\tlen = tokens.length,\\r\\n\\t\\tleadingRelative = Expr.relative[ tokens[ 0 ].type ],\\r\\n\\t\\timplicitRelative = leadingRelative || Expr.relative[ \" \" ],\\r\\n\\t\\ti = leadingRelative ? 1 : 0,\\r\\n\\r\\n\\t\\t// The foundational matcher ensures that elements are reachable from top-level context(s)\\r\\n\\t\\tmatchContext = addCombinator( function( elem ) {\\r\\n\\t\\t\\treturn elem === checkContext;\\r\\n\\t\\t}, implicitRelative, true ),\\r\\n\\t\\tmatchAnyContext = addCombinator( function( elem ) {\\r\\n\\t\\t\\treturn indexOf( checkContext, elem ) > -1;\\r\\n\\t\\t}, implicitRelative, true ),\\r\\n\\t\\tmatchers = [ function( elem, context, xml ) {\\r\\n\\t\\t\\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\\r\\n\\t\\t\\t\\t( checkContext = context ).nodeType ?\\r\\n\\t\\t\\t\\t\\tmatchContext( elem, context, xml ) :\\r\\n\\t\\t\\t\\t\\tmatchAnyContext( elem, context, xml ) );\\r\\n\\r\\n\\t\\t\\t// Avoid hanging onto element (issue #299)\\r\\n\\t\\t\\tcheckContext = null;\\r\\n\\t\\t\\treturn ret;\\r\\n\\t\\t} ];\\r\\n\\r\\n\\tfor ( ; i < len; i++ ) {\\r\\n\\t\\tif ( ( matcher = Expr.relative[ tokens[ i ].type ] ) ) {\\r\\n\\t\\t\\tmatchers = [ addCombinator( elementMatcher( matchers ), matcher ) ];\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tmatcher = Expr.filter[ tokens[ i ].type ].apply( null, tokens[ i ].matches );\\r\\n\\r\\n\\t\\t\\t// Return special upon seeing a positional matcher\\r\\n\\t\\t\\tif ( matcher[ expando ] ) {\\r\\n\\r\\n\\t\\t\\t\\t// Find the next relative operator (if any) for proper handling\\r\\n\\t\\t\\t\\tj = ++i;\\r\\n\\t\\t\\t\\tfor ( ; j < len; j++ ) {\\r\\n\\t\\t\\t\\t\\tif ( Expr.relative[ tokens[ j ].type ] ) {\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn setMatcher(\\r\\n\\t\\t\\t\\t\\ti > 1 && elementMatcher( matchers ),\\r\\n\\t\\t\\t\\t\\ti > 1 && toSelector(\\r\\n\\r\\n\\t\\t\\t\\t\\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\\r\\n\\t\\t\\t\\t\\ttokens\\r\\n\\t\\t\\t\\t\\t\\t.slice( 0, i - 1 )\\r\\n\\t\\t\\t\\t\\t\\t.concat( { value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" } )\\r\\n\\t\\t\\t\\t\\t).replace( rtrim, \"$1\" ),\\r\\n\\t\\t\\t\\t\\tmatcher,\\r\\n\\t\\t\\t\\t\\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\\r\\n\\t\\t\\t\\t\\tj < len && matcherFromTokens( ( tokens = tokens.slice( j ) ) ),\\r\\n\\t\\t\\t\\t\\tj < len && toSelector( tokens )\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tmatchers.push( matcher );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn elementMatcher( matchers );\\r\\n}\\r\\n\\r\\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\\r\\n\\tvar bySet = setMatchers.length > 0,\\r\\n\\t\\tbyElement = elementMatchers.length > 0,\\r\\n\\t\\tsuperMatcher = function( seed, context, xml, results, outermost ) {\\r\\n\\t\\t\\tvar elem, j, matcher,\\r\\n\\t\\t\\t\\tmatchedCount = 0,\\r\\n\\t\\t\\t\\ti = \"0\",\\r\\n\\t\\t\\t\\tunmatched = seed && [],\\r\\n\\t\\t\\t\\tsetMatched = [],\\r\\n\\t\\t\\t\\tcontextBackup = outermostContext,\\r\\n\\r\\n\\t\\t\\t\\t// We must always have either seed elements or outermost context\\r\\n\\t\\t\\t\\telems = seed || byElement && Expr.find[ \"TAG\" ]( \"*\", outermost ),\\r\\n\\r\\n\\t\\t\\t\\t// Use integer dirruns iff this is the outermost matcher\\r\\n\\t\\t\\t\\tdirrunsUnique = ( dirruns += contextBackup == null ? 1 : Math.random() || 0.1 ),\\r\\n\\t\\t\\t\\tlen = elems.length;\\r\\n\\r\\n\\t\\t\\tif ( outermost ) {\\r\\n\\r\\n\\t\\t\\t\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t\\t\\t\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t\\t\\t\\t// two documents; shallow comparisons work.\\r\\n\\t\\t\\t\\t// eslint-disable-next-line eqeqeq\\r\\n\\t\\t\\t\\toutermostContext = context == document || context || outermost;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Add elements passing elementMatchers directly to results\\r\\n\\t\\t\\t// Support: IE<9, Safari\\r\\n\\t\\t\\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\\r\\n\\t\\t\\tfor ( ; i !== len && ( elem = elems[ i ] ) != null; i++ ) {\\r\\n\\t\\t\\t\\tif ( byElement && elem ) {\\r\\n\\t\\t\\t\\t\\tj = 0;\\r\\n\\r\\n\\t\\t\\t\\t\\t// Support: IE 11+, Edge 17 - 18+\\r\\n\\t\\t\\t\\t\\t// IE/Edge sometimes throw a \"Permission denied\" error when strict-comparing\\r\\n\\t\\t\\t\\t\\t// two documents; shallow comparisons work.\\r\\n\\t\\t\\t\\t\\t// eslint-disable-next-line eqeqeq\\r\\n\\t\\t\\t\\t\\tif ( !context && elem.ownerDocument != document ) {\\r\\n\\t\\t\\t\\t\\t\\tsetDocument( elem );\\r\\n\\t\\t\\t\\t\\t\\txml = !documentIsHTML;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\twhile ( ( matcher = elementMatchers[ j++ ] ) ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context || document, xml ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\r\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( outermost ) {\\r\\n\\t\\t\\t\\t\\t\\tdirruns = dirrunsUnique;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Track unmatched elements for set filters\\r\\n\\t\\t\\t\\tif ( bySet ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// They will have gone through all possible matchers\\r\\n\\t\\t\\t\\t\\tif ( ( elem = !matcher && elem ) ) {\\r\\n\\t\\t\\t\\t\\t\\tmatchedCount--;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Lengthen the array for every element, matched or not\\r\\n\\t\\t\\t\\t\\tif ( seed ) {\\r\\n\\t\\t\\t\\t\\t\\tunmatched.push( elem );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\\r\\n\\t\\t\\t// makes the latter nonnegative.\\r\\n\\t\\t\\tmatchedCount += i;\\r\\n\\r\\n\\t\\t\\t// Apply set filters to unmatched elements\\r\\n\\t\\t\\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\\r\\n\\t\\t\\t// equals `i`), unless we didn\\'t visit _any_ elements in the above loop because we have\\r\\n\\t\\t\\t// no element matchers and no seed.\\r\\n\\t\\t\\t// Incrementing an initially-string \"0\" `i` allows `i` to remain a string only in that\\r\\n\\t\\t\\t// case, which will result in a \"00\" `matchedCount` that differs from `i` but is also\\r\\n\\t\\t\\t// numerically zero.\\r\\n\\t\\t\\tif ( bySet && i !== matchedCount ) {\\r\\n\\t\\t\\t\\tj = 0;\\r\\n\\t\\t\\t\\twhile ( ( matcher = setMatchers[ j++ ] ) ) {\\r\\n\\t\\t\\t\\t\\tmatcher( unmatched, setMatched, context, xml );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( seed ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Reintegrate element matches to eliminate the need for sorting\\r\\n\\t\\t\\t\\t\\tif ( matchedCount > 0 ) {\\r\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( !( unmatched[ i ] || setMatched[ i ] ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tsetMatched[ i ] = pop.call( results );\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Discard index placeholder values to get only actual matches\\r\\n\\t\\t\\t\\t\\tsetMatched = condense( setMatched );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Add matches to results\\r\\n\\t\\t\\t\\tpush.apply( results, setMatched );\\r\\n\\r\\n\\t\\t\\t\\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\\r\\n\\t\\t\\t\\tif ( outermost && !seed && setMatched.length > 0 &&\\r\\n\\t\\t\\t\\t\\t( matchedCount + setMatchers.length ) > 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tSizzle.uniqueSort( results );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Override manipulation of globals by nested matchers\\r\\n\\t\\t\\tif ( outermost ) {\\r\\n\\t\\t\\t\\tdirruns = dirrunsUnique;\\r\\n\\t\\t\\t\\toutermostContext = contextBackup;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn unmatched;\\r\\n\\t\\t};\\r\\n\\r\\n\\treturn bySet ?\\r\\n\\t\\tmarkFunction( superMatcher ) :\\r\\n\\t\\tsuperMatcher;\\r\\n}\\r\\n\\r\\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\\r\\n\\tvar i,\\r\\n\\t\\tsetMatchers = [],\\r\\n\\t\\telementMatchers = [],\\r\\n\\t\\tcached = compilerCache[ selector + \" \" ];\\r\\n\\r\\n\\tif ( !cached ) {\\r\\n\\r\\n\\t\\t// Generate a function of recursive functions that can be used to check each element\\r\\n\\t\\tif ( !match ) {\\r\\n\\t\\t\\tmatch = tokenize( selector );\\r\\n\\t\\t}\\r\\n\\t\\ti = match.length;\\r\\n\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\tcached = matcherFromTokens( match[ i ] );\\r\\n\\t\\t\\tif ( cached[ expando ] ) {\\r\\n\\t\\t\\t\\tsetMatchers.push( cached );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\telementMatchers.push( cached );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Cache the compiled function\\r\\n\\t\\tcached = compilerCache(\\r\\n\\t\\t\\tselector,\\r\\n\\t\\t\\tmatcherFromGroupMatchers( elementMatchers, setMatchers )\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\t// Save selector and tokenization\\r\\n\\t\\tcached.selector = selector;\\r\\n\\t}\\r\\n\\treturn cached;\\r\\n};\\r\\n\\r\\n/**\\r\\n * A low-level selection function that works with Sizzle\\'s compiled\\r\\n *  selector functions\\r\\n * @param {String|Function} selector A selector or a pre-compiled\\r\\n *  selector function built with Sizzle.compile\\r\\n * @param {Element} context\\r\\n * @param {Array} [results]\\r\\n * @param {Array} [seed] A set of elements to match against\\r\\n */\\r\\nselect = Sizzle.select = function( selector, context, results, seed ) {\\r\\n\\tvar i, tokens, token, type, find,\\r\\n\\t\\tcompiled = typeof selector === \"function\" && selector,\\r\\n\\t\\tmatch = !seed && tokenize( ( selector = compiled.selector || selector ) );\\r\\n\\r\\n\\tresults = results || [];\\r\\n\\r\\n\\t// Try to minimize operations if there is only one selector in the list and no seed\\r\\n\\t// (the latter of which guarantees us context)\\r\\n\\tif ( match.length === 1 ) {\\r\\n\\r\\n\\t\\t// Reduce context if the leading compound selector is an ID\\r\\n\\t\\ttokens = match[ 0 ] = match[ 0 ].slice( 0 );\\r\\n\\t\\tif ( tokens.length > 2 && ( token = tokens[ 0 ] ).type === \"ID\" &&\\r\\n\\t\\t\\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[ 1 ].type ] ) {\\r\\n\\r\\n\\t\\t\\tcontext = ( Expr.find[ \"ID\" ]( token.matches[ 0 ]\\r\\n\\t\\t\\t\\t.replace( runescape, funescape ), context ) || [] )[ 0 ];\\r\\n\\t\\t\\tif ( !context ) {\\r\\n\\t\\t\\t\\treturn results;\\r\\n\\r\\n\\t\\t\\t// Precompiled matchers will still verify ancestry, so step up a level\\r\\n\\t\\t\\t} else if ( compiled ) {\\r\\n\\t\\t\\t\\tcontext = context.parentNode;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tselector = selector.slice( tokens.shift().value.length );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Fetch a seed set for right-to-left matching\\r\\n\\t\\ti = matchExpr[ \"needsContext\" ].test( selector ) ? 0 : tokens.length;\\r\\n\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\ttoken = tokens[ i ];\\r\\n\\r\\n\\t\\t\\t// Abort if we hit a combinator\\r\\n\\t\\t\\tif ( Expr.relative[ ( type = token.type ) ] ) {\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( ( find = Expr.find[ type ] ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// Search, expanding context for leading sibling combinators\\r\\n\\t\\t\\t\\tif ( ( seed = find(\\r\\n\\t\\t\\t\\t\\ttoken.matches[ 0 ].replace( runescape, funescape ),\\r\\n\\t\\t\\t\\t\\trsibling.test( tokens[ 0 ].type ) && testContext( context.parentNode ) ||\\r\\n\\t\\t\\t\\t\\t\\tcontext\\r\\n\\t\\t\\t\\t) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// If seed is empty or no tokens remain, we can return early\\r\\n\\t\\t\\t\\t\\ttokens.splice( i, 1 );\\r\\n\\t\\t\\t\\t\\tselector = seed.length && toSelector( tokens );\\r\\n\\t\\t\\t\\t\\tif ( !selector ) {\\r\\n\\t\\t\\t\\t\\t\\tpush.apply( results, seed );\\r\\n\\t\\t\\t\\t\\t\\treturn results;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Compile and execute a filtering function if one is not provided\\r\\n\\t// Provide `match` to avoid retokenization if we modified the selector above\\r\\n\\t( compiled || compile( selector, match ) )(\\r\\n\\t\\tseed,\\r\\n\\t\\tcontext,\\r\\n\\t\\t!documentIsHTML,\\r\\n\\t\\tresults,\\r\\n\\t\\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\\r\\n\\t);\\r\\n\\treturn results;\\r\\n};\\r\\n\\r\\n// One-time assignments\\r\\n\\r\\n// Sort stability\\r\\nsupport.sortStable = expando.split( \"\" ).sort( sortOrder ).join( \"\" ) === expando;\\r\\n\\r\\n// Support: Chrome 14-35+\\r\\n// Always assume duplicates if they aren\\'t passed to the comparison function\\r\\nsupport.detectDuplicates = !!hasDuplicate;\\r\\n\\r\\n// Initialize against the default document\\r\\nsetDocument();\\r\\n\\r\\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\\r\\n// Detached nodes confoundingly follow *each other*\\r\\nsupport.sortDetached = assert( function( el ) {\\r\\n\\r\\n\\t// Should return 1, but returns 4 (following)\\r\\n\\treturn el.compareDocumentPosition( document.createElement( \"fieldset\" ) ) & 1;\\r\\n} );\\r\\n\\r\\n// Support: IE<8\\r\\n// Prevent attribute/property \"interpolation\"\\r\\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\\r\\nif ( !assert( function( el ) {\\r\\n\\tel.innerHTML = \"<a href=\\'#\\'></a>\";\\r\\n\\treturn el.firstChild.getAttribute( \"href\" ) === \"#\";\\r\\n} ) ) {\\r\\n\\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\\r\\n\\t\\tif ( !isXML ) {\\r\\n\\t\\t\\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n}\\r\\n\\r\\n// Support: IE<9\\r\\n// Use defaultValue in place of getAttribute(\"value\")\\r\\nif ( !support.attributes || !assert( function( el ) {\\r\\n\\tel.innerHTML = \"<input/>\";\\r\\n\\tel.firstChild.setAttribute( \"value\", \"\" );\\r\\n\\treturn el.firstChild.getAttribute( \"value\" ) === \"\";\\r\\n} ) ) {\\r\\n\\taddHandle( \"value\", function( elem, _name, isXML ) {\\r\\n\\t\\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\\r\\n\\t\\t\\treturn elem.defaultValue;\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n}\\r\\n\\r\\n// Support: IE<9\\r\\n// Use getAttributeNode to fetch booleans when getAttribute lies\\r\\nif ( !assert( function( el ) {\\r\\n\\treturn el.getAttribute( \"disabled\" ) == null;\\r\\n} ) ) {\\r\\n\\taddHandle( booleans, function( elem, name, isXML ) {\\r\\n\\t\\tvar val;\\r\\n\\t\\tif ( !isXML ) {\\r\\n\\t\\t\\treturn elem[ name ] === true ? name.toLowerCase() :\\r\\n\\t\\t\\t\\t( val = elem.getAttributeNode( name ) ) && val.specified ?\\r\\n\\t\\t\\t\\t\\tval.value :\\r\\n\\t\\t\\t\\t\\tnull;\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n}\\r\\n\\r\\nreturn Sizzle;\\r\\n\\r\\n} )( window );\\r\\n\\r\\n\\r\\n\\r\\njQuery.find = Sizzle;\\r\\njQuery.expr = Sizzle.selectors;\\r\\n\\r\\n// Deprecated\\r\\njQuery.expr[ \":\" ] = jQuery.expr.pseudos;\\r\\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\\r\\njQuery.text = Sizzle.getText;\\r\\njQuery.isXMLDoc = Sizzle.isXML;\\r\\njQuery.contains = Sizzle.contains;\\r\\njQuery.escapeSelector = Sizzle.escape;\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nvar dir = function( elem, dir, until ) {\\r\\n\\tvar matched = [],\\r\\n\\t\\ttruncate = until !== undefined;\\r\\n\\r\\n\\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\\r\\n\\t\\tif ( elem.nodeType === 1 ) {\\r\\n\\t\\t\\tif ( truncate && jQuery( elem ).is( until ) ) {\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tmatched.push( elem );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn matched;\\r\\n};\\r\\n\\r\\n\\r\\nvar siblings = function( n, elem ) {\\r\\n\\tvar matched = [];\\r\\n\\r\\n\\tfor ( ; n; n = n.nextSibling ) {\\r\\n\\t\\tif ( n.nodeType === 1 && n !== elem ) {\\r\\n\\t\\t\\tmatched.push( n );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn matched;\\r\\n};\\r\\n\\r\\n\\r\\nvar rneedsContext = jQuery.expr.match.needsContext;\\r\\n\\r\\n\\r\\n\\r\\nfunction nodeName( elem, name ) {\\r\\n\\r\\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\\r\\n\\r\\n};\\r\\nvar rsingleTag = ( /^<([a-z][^\\\\/\\\\0>:\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[\\\\x20\\\\t\\\\r\\\\n\\\\f]*\\\\/?>(?:<\\\\/\\\\1>|)$/i );\\r\\n\\r\\n\\r\\n\\r\\n// Implement the identical functionality for filter and not\\r\\nfunction winnow( elements, qualifier, not ) {\\r\\n\\tif ( isFunction( qualifier ) ) {\\r\\n\\t\\treturn jQuery.grep( elements, function( elem, i ) {\\r\\n\\t\\t\\treturn !!qualifier.call( elem, i, elem ) !== not;\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n\\r\\n\\t// Single element\\r\\n\\tif ( qualifier.nodeType ) {\\r\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\r\\n\\t\\t\\treturn ( elem === qualifier ) !== not;\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n\\r\\n\\t// Arraylike of elements (jQuery, arguments, Array)\\r\\n\\tif ( typeof qualifier !== \"string\" ) {\\r\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\r\\n\\t\\t\\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n\\r\\n\\t// Filtered directly for both simple and complex selectors\\r\\n\\treturn jQuery.filter( qualifier, elements, not );\\r\\n}\\r\\n\\r\\njQuery.filter = function( expr, elems, not ) {\\r\\n\\tvar elem = elems[ 0 ];\\r\\n\\r\\n\\tif ( not ) {\\r\\n\\t\\texpr = \":not(\" + expr + \")\";\\r\\n\\t}\\r\\n\\r\\n\\tif ( elems.length === 1 && elem.nodeType === 1 ) {\\r\\n\\t\\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\\r\\n\\t}\\r\\n\\r\\n\\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\\r\\n\\t\\treturn elem.nodeType === 1;\\r\\n\\t} ) );\\r\\n};\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tfind: function( selector ) {\\r\\n\\t\\tvar i, ret,\\r\\n\\t\\t\\tlen = this.length,\\r\\n\\t\\t\\tself = this;\\r\\n\\r\\n\\t\\tif ( typeof selector !== \"string\" ) {\\r\\n\\t\\t\\treturn this.pushStack( jQuery( selector ).filter( function() {\\r\\n\\t\\t\\t\\tfor ( i = 0; i < len; i++ ) {\\r\\n\\t\\t\\t\\t\\tif ( jQuery.contains( self[ i ], this ) ) {\\r\\n\\t\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} ) );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tret = this.pushStack( [] );\\r\\n\\r\\n\\t\\tfor ( i = 0; i < len; i++ ) {\\r\\n\\t\\t\\tjQuery.find( selector, self[ i ], ret );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\\r\\n\\t},\\r\\n\\tfilter: function( selector ) {\\r\\n\\t\\treturn this.pushStack( winnow( this, selector || [], false ) );\\r\\n\\t},\\r\\n\\tnot: function( selector ) {\\r\\n\\t\\treturn this.pushStack( winnow( this, selector || [], true ) );\\r\\n\\t},\\r\\n\\tis: function( selector ) {\\r\\n\\t\\treturn !!winnow(\\r\\n\\t\\t\\tthis,\\r\\n\\r\\n\\t\\t\\t// If this is a positional/relative selector, check membership in the returned set\\r\\n\\t\\t\\t// so $(\"p:first\").is(\"p:last\") won\\'t return true for a doc with two \"p\".\\r\\n\\t\\t\\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\\r\\n\\t\\t\\t\\tjQuery( selector ) :\\r\\n\\t\\t\\t\\tselector || [],\\r\\n\\t\\t\\tfalse\\r\\n\\t\\t).length;\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\n// Initialize a jQuery object\\r\\n\\r\\n\\r\\n// A central reference to the root jQuery(document)\\r\\nvar rootjQuery,\\r\\n\\r\\n\\t// A simple way to check for HTML strings\\r\\n\\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\\r\\n\\t// Strict HTML recognition (#11290: must start with <)\\r\\n\\t// Shortcut simple #id case for speed\\r\\n\\trquickExpr = /^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]+))$/,\\r\\n\\r\\n\\tinit = jQuery.fn.init = function( selector, context, root ) {\\r\\n\\t\\tvar match, elem;\\r\\n\\r\\n\\t\\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\\r\\n\\t\\tif ( !selector ) {\\r\\n\\t\\t\\treturn this;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Method init() accepts an alternate rootjQuery\\r\\n\\t\\t// so migrate can support jQuery.sub (gh-2101)\\r\\n\\t\\troot = root || rootjQuery;\\r\\n\\r\\n\\t\\t// Handle HTML strings\\r\\n\\t\\tif ( typeof selector === \"string\" ) {\\r\\n\\t\\t\\tif ( selector[ 0 ] === \"<\" &&\\r\\n\\t\\t\\t\\tselector[ selector.length - 1 ] === \">\" &&\\r\\n\\t\\t\\t\\tselector.length >= 3 ) {\\r\\n\\r\\n\\t\\t\\t\\t// Assume that strings that start and end with <> are HTML and skip the regex check\\r\\n\\t\\t\\t\\tmatch = [ null, selector, null ];\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tmatch = rquickExpr.exec( selector );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Match html or make sure no context is specified for #id\\r\\n\\t\\t\\tif ( match && ( match[ 1 ] || !context ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// HANDLE: $(html) -> $(array)\\r\\n\\t\\t\\t\\tif ( match[ 1 ] ) {\\r\\n\\t\\t\\t\\t\\tcontext = context instanceof jQuery ? context[ 0 ] : context;\\r\\n\\r\\n\\t\\t\\t\\t\\t// Option to run scripts is true for back-compat\\r\\n\\t\\t\\t\\t\\t// Intentionally let the error be thrown if parseHTML is not present\\r\\n\\t\\t\\t\\t\\tjQuery.merge( this, jQuery.parseHTML(\\r\\n\\t\\t\\t\\t\\t\\tmatch[ 1 ],\\r\\n\\t\\t\\t\\t\\t\\tcontext && context.nodeType ? context.ownerDocument || context : document,\\r\\n\\t\\t\\t\\t\\t\\ttrue\\r\\n\\t\\t\\t\\t\\t) );\\r\\n\\r\\n\\t\\t\\t\\t\\t// HANDLE: $(html, props)\\r\\n\\t\\t\\t\\t\\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\\r\\n\\t\\t\\t\\t\\t\\tfor ( match in context ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Properties of context are called as methods if possible\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( isFunction( this[ match ] ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tthis[ match ]( context[ match ] );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// ...and otherwise set as attributes\\r\\n\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.attr( match, context[ match ] );\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t\\t\\t// HANDLE: $(#id)\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\telem = document.getElementById( match[ 2 ] );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( elem ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Inject the element directly into the jQuery object\\r\\n\\t\\t\\t\\t\\t\\tthis[ 0 ] = elem;\\r\\n\\t\\t\\t\\t\\t\\tthis.length = 1;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// HANDLE: $(expr, $(...))\\r\\n\\t\\t\\t} else if ( !context || context.jquery ) {\\r\\n\\t\\t\\t\\treturn ( context || root ).find( selector );\\r\\n\\r\\n\\t\\t\\t// HANDLE: $(expr, context)\\r\\n\\t\\t\\t// (which is just equivalent to: $(context).find(expr)\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\treturn this.constructor( context ).find( selector );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t// HANDLE: $(DOMElement)\\r\\n\\t\\t} else if ( selector.nodeType ) {\\r\\n\\t\\t\\tthis[ 0 ] = selector;\\r\\n\\t\\t\\tthis.length = 1;\\r\\n\\t\\t\\treturn this;\\r\\n\\r\\n\\t\\t// HANDLE: $(function)\\r\\n\\t\\t// Shortcut for document ready\\r\\n\\t\\t} else if ( isFunction( selector ) ) {\\r\\n\\t\\t\\treturn root.ready !== undefined ?\\r\\n\\t\\t\\t\\troot.ready( selector ) :\\r\\n\\r\\n\\t\\t\\t\\t// Execute immediately if ready is not present\\r\\n\\t\\t\\t\\tselector( jQuery );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn jQuery.makeArray( selector, this );\\r\\n\\t};\\r\\n\\r\\n// Give the init function the jQuery prototype for later instantiation\\r\\ninit.prototype = jQuery.fn;\\r\\n\\r\\n// Initialize central reference\\r\\nrootjQuery = jQuery( document );\\r\\n\\r\\n\\r\\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\\r\\n\\r\\n\\t// Methods guaranteed to produce a unique set when starting from a unique set\\r\\n\\tguaranteedUnique = {\\r\\n\\t\\tchildren: true,\\r\\n\\t\\tcontents: true,\\r\\n\\t\\tnext: true,\\r\\n\\t\\tprev: true\\r\\n\\t};\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\thas: function( target ) {\\r\\n\\t\\tvar targets = jQuery( target, this ),\\r\\n\\t\\t\\tl = targets.length;\\r\\n\\r\\n\\t\\treturn this.filter( function() {\\r\\n\\t\\t\\tvar i = 0;\\r\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\r\\n\\t\\t\\t\\tif ( jQuery.contains( this, targets[ i ] ) ) {\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\tclosest: function( selectors, context ) {\\r\\n\\t\\tvar cur,\\r\\n\\t\\t\\ti = 0,\\r\\n\\t\\t\\tl = this.length,\\r\\n\\t\\t\\tmatched = [],\\r\\n\\t\\t\\ttargets = typeof selectors !== \"string\" && jQuery( selectors );\\r\\n\\r\\n\\t\\t// Positional selectors never match, since there\\'s no _selection_ context\\r\\n\\t\\tif ( !rneedsContext.test( selectors ) ) {\\r\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\r\\n\\t\\t\\t\\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Always skip document fragments\\r\\n\\t\\t\\t\\t\\tif ( cur.nodeType < 11 && ( targets ?\\r\\n\\t\\t\\t\\t\\t\\ttargets.index( cur ) > -1 :\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Don\\'t pass non-elements to Sizzle\\r\\n\\t\\t\\t\\t\\t\\tcur.nodeType === 1 &&\\r\\n\\t\\t\\t\\t\\t\\t\\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tmatched.push( cur );\\r\\n\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\\r\\n\\t},\\r\\n\\r\\n\\t// Determine the position of an element within the set\\r\\n\\tindex: function( elem ) {\\r\\n\\r\\n\\t\\t// No argument, return index in parent\\r\\n\\t\\tif ( !elem ) {\\r\\n\\t\\t\\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Index in selector\\r\\n\\t\\tif ( typeof elem === \"string\" ) {\\r\\n\\t\\t\\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Locate the position of the desired element\\r\\n\\t\\treturn indexOf.call( this,\\r\\n\\r\\n\\t\\t\\t// If it receives a jQuery object, the first element is used\\r\\n\\t\\t\\telem.jquery ? elem[ 0 ] : elem\\r\\n\\t\\t);\\r\\n\\t},\\r\\n\\r\\n\\tadd: function( selector, context ) {\\r\\n\\t\\treturn this.pushStack(\\r\\n\\t\\t\\tjQuery.uniqueSort(\\r\\n\\t\\t\\t\\tjQuery.merge( this.get(), jQuery( selector, context ) )\\r\\n\\t\\t\\t)\\r\\n\\t\\t);\\r\\n\\t},\\r\\n\\r\\n\\taddBack: function( selector ) {\\r\\n\\t\\treturn this.add( selector == null ?\\r\\n\\t\\t\\tthis.prevObject : this.prevObject.filter( selector )\\r\\n\\t\\t);\\r\\n\\t}\\r\\n} );\\r\\n\\r\\nfunction sibling( cur, dir ) {\\r\\n\\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\\r\\n\\treturn cur;\\r\\n}\\r\\n\\r\\njQuery.each( {\\r\\n\\tparent: function( elem ) {\\r\\n\\t\\tvar parent = elem.parentNode;\\r\\n\\t\\treturn parent && parent.nodeType !== 11 ? parent : null;\\r\\n\\t},\\r\\n\\tparents: function( elem ) {\\r\\n\\t\\treturn dir( elem, \"parentNode\" );\\r\\n\\t},\\r\\n\\tparentsUntil: function( elem, _i, until ) {\\r\\n\\t\\treturn dir( elem, \"parentNode\", until );\\r\\n\\t},\\r\\n\\tnext: function( elem ) {\\r\\n\\t\\treturn sibling( elem, \"nextSibling\" );\\r\\n\\t},\\r\\n\\tprev: function( elem ) {\\r\\n\\t\\treturn sibling( elem, \"previousSibling\" );\\r\\n\\t},\\r\\n\\tnextAll: function( elem ) {\\r\\n\\t\\treturn dir( elem, \"nextSibling\" );\\r\\n\\t},\\r\\n\\tprevAll: function( elem ) {\\r\\n\\t\\treturn dir( elem, \"previousSibling\" );\\r\\n\\t},\\r\\n\\tnextUntil: function( elem, _i, until ) {\\r\\n\\t\\treturn dir( elem, \"nextSibling\", until );\\r\\n\\t},\\r\\n\\tprevUntil: function( elem, _i, until ) {\\r\\n\\t\\treturn dir( elem, \"previousSibling\", until );\\r\\n\\t},\\r\\n\\tsiblings: function( elem ) {\\r\\n\\t\\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\\r\\n\\t},\\r\\n\\tchildren: function( elem ) {\\r\\n\\t\\treturn siblings( elem.firstChild );\\r\\n\\t},\\r\\n\\tcontents: function( elem ) {\\r\\n\\t\\tif ( elem.contentDocument != null &&\\r\\n\\r\\n\\t\\t\\t// Support: IE 11+\\r\\n\\t\\t\\t// <object> elements with no `data` attribute has an object\\r\\n\\t\\t\\t// `contentDocument` with a `null` prototype.\\r\\n\\t\\t\\tgetProto( elem.contentDocument ) ) {\\r\\n\\r\\n\\t\\t\\treturn elem.contentDocument;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\\r\\n\\t\\t// Treat the template element as a regular one in browsers that\\r\\n\\t\\t// don\\'t support it.\\r\\n\\t\\tif ( nodeName( elem, \"template\" ) ) {\\r\\n\\t\\t\\telem = elem.content || elem;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn jQuery.merge( [], elem.childNodes );\\r\\n\\t}\\r\\n}, function( name, fn ) {\\r\\n\\tjQuery.fn[ name ] = function( until, selector ) {\\r\\n\\t\\tvar matched = jQuery.map( this, fn, until );\\r\\n\\r\\n\\t\\tif ( name.slice( -5 ) !== \"Until\" ) {\\r\\n\\t\\t\\tselector = until;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( selector && typeof selector === \"string\" ) {\\r\\n\\t\\t\\tmatched = jQuery.filter( selector, matched );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( this.length > 1 ) {\\r\\n\\r\\n\\t\\t\\t// Remove duplicates\\r\\n\\t\\t\\tif ( !guaranteedUnique[ name ] ) {\\r\\n\\t\\t\\t\\tjQuery.uniqueSort( matched );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Reverse order for parents* and prev-derivatives\\r\\n\\t\\t\\tif ( rparentsprev.test( name ) ) {\\r\\n\\t\\t\\t\\tmatched.reverse();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.pushStack( matched );\\r\\n\\t};\\r\\n} );\\r\\nvar rnothtmlwhite = ( /[^\\\\x20\\\\t\\\\r\\\\n\\\\f]+/g );\\r\\n\\r\\n\\r\\n\\r\\n// Convert String-formatted options into Object-formatted ones\\r\\nfunction createOptions( options ) {\\r\\n\\tvar object = {};\\r\\n\\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\\r\\n\\t\\tobject[ flag ] = true;\\r\\n\\t} );\\r\\n\\treturn object;\\r\\n}\\r\\n\\r\\n/*\\r\\n * Create a callback list using the following parameters:\\r\\n *\\r\\n *\\toptions: an optional list of space-separated options that will change how\\r\\n *\\t\\t\\tthe callback list behaves or a more traditional option object\\r\\n *\\r\\n * By default a callback list will act like an event callback list and can be\\r\\n * \"fired\" multiple times.\\r\\n *\\r\\n * Possible options:\\r\\n *\\r\\n *\\tonce:\\t\\t\\twill ensure the callback list can only be fired once (like a Deferred)\\r\\n *\\r\\n *\\tmemory:\\t\\t\\twill keep track of previous values and will call any callback added\\r\\n *\\t\\t\\t\\t\\tafter the list has been fired right away with the latest \"memorized\"\\r\\n *\\t\\t\\t\\t\\tvalues (like a Deferred)\\r\\n *\\r\\n *\\tunique:\\t\\t\\twill ensure a callback can only be added once (no duplicate in the list)\\r\\n *\\r\\n *\\tstopOnFalse:\\tinterrupt callings when a callback returns false\\r\\n *\\r\\n */\\r\\njQuery.Callbacks = function( options ) {\\r\\n\\r\\n\\t// Convert options from String-formatted to Object-formatted if needed\\r\\n\\t// (we check in cache first)\\r\\n\\toptions = typeof options === \"string\" ?\\r\\n\\t\\tcreateOptions( options ) :\\r\\n\\t\\tjQuery.extend( {}, options );\\r\\n\\r\\n\\tvar // Flag to know if list is currently firing\\r\\n\\t\\tfiring,\\r\\n\\r\\n\\t\\t// Last fire value for non-forgettable lists\\r\\n\\t\\tmemory,\\r\\n\\r\\n\\t\\t// Flag to know if list was already fired\\r\\n\\t\\tfired,\\r\\n\\r\\n\\t\\t// Flag to prevent firing\\r\\n\\t\\tlocked,\\r\\n\\r\\n\\t\\t// Actual callback list\\r\\n\\t\\tlist = [],\\r\\n\\r\\n\\t\\t// Queue of execution data for repeatable lists\\r\\n\\t\\tqueue = [],\\r\\n\\r\\n\\t\\t// Index of currently firing callback (modified by add/remove as needed)\\r\\n\\t\\tfiringIndex = -1,\\r\\n\\r\\n\\t\\t// Fire callbacks\\r\\n\\t\\tfire = function() {\\r\\n\\r\\n\\t\\t\\t// Enforce single-firing\\r\\n\\t\\t\\tlocked = locked || options.once;\\r\\n\\r\\n\\t\\t\\t// Execute callbacks for all pending executions,\\r\\n\\t\\t\\t// respecting firingIndex overrides and runtime changes\\r\\n\\t\\t\\tfired = firing = true;\\r\\n\\t\\t\\tfor ( ; queue.length; firingIndex = -1 ) {\\r\\n\\t\\t\\t\\tmemory = queue.shift();\\r\\n\\t\\t\\t\\twhile ( ++firingIndex < list.length ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Run callback and check for early termination\\r\\n\\t\\t\\t\\t\\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\\r\\n\\t\\t\\t\\t\\t\\toptions.stopOnFalse ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Jump to end and forget the data so .add doesn\\'t re-fire\\r\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length;\\r\\n\\t\\t\\t\\t\\t\\tmemory = false;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Forget the data if we\\'re done with it\\r\\n\\t\\t\\tif ( !options.memory ) {\\r\\n\\t\\t\\t\\tmemory = false;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfiring = false;\\r\\n\\r\\n\\t\\t\\t// Clean up if we\\'re done firing for good\\r\\n\\t\\t\\tif ( locked ) {\\r\\n\\r\\n\\t\\t\\t\\t// Keep an empty list if we have data for future add calls\\r\\n\\t\\t\\t\\tif ( memory ) {\\r\\n\\t\\t\\t\\t\\tlist = [];\\r\\n\\r\\n\\t\\t\\t\\t// Otherwise, this object is spent\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tlist = \"\";\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Actual Callbacks object\\r\\n\\t\\tself = {\\r\\n\\r\\n\\t\\t\\t// Add a callback or a collection of callbacks to the list\\r\\n\\t\\t\\tadd: function() {\\r\\n\\t\\t\\t\\tif ( list ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// If we have memory from a past run, we should fire after adding\\r\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\r\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length - 1;\\r\\n\\t\\t\\t\\t\\t\\tqueue.push( memory );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t( function add( args ) {\\r\\n\\t\\t\\t\\t\\t\\tjQuery.each( args, function( _, arg ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( isFunction( arg ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( !options.unique || !self.has( arg ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlist.push( arg );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t} else if ( arg && arg.length && toType( arg ) !== \"string\" ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Inspect recursively\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tadd( arg );\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\t\\t} )( arguments );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\r\\n\\t\\t\\t\\t\\t\\tfire();\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t// Remove a callback from the list\\r\\n\\t\\t\\tremove: function() {\\r\\n\\t\\t\\t\\tjQuery.each( arguments, function( _, arg ) {\\r\\n\\t\\t\\t\\t\\tvar index;\\r\\n\\t\\t\\t\\t\\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\\r\\n\\t\\t\\t\\t\\t\\tlist.splice( index, 1 );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Handle firing indexes\\r\\n\\t\\t\\t\\t\\t\\tif ( index <= firingIndex ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tfiringIndex--;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t// Check if a given callback is in the list.\\r\\n\\t\\t\\t// If no argument is given, return whether or not list has callbacks attached.\\r\\n\\t\\t\\thas: function( fn ) {\\r\\n\\t\\t\\t\\treturn fn ?\\r\\n\\t\\t\\t\\t\\tjQuery.inArray( fn, list ) > -1 :\\r\\n\\t\\t\\t\\t\\tlist.length > 0;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t// Remove all callbacks from the list\\r\\n\\t\\t\\tempty: function() {\\r\\n\\t\\t\\t\\tif ( list ) {\\r\\n\\t\\t\\t\\t\\tlist = [];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t// Disable .fire and .add\\r\\n\\t\\t\\t// Abort any current/pending executions\\r\\n\\t\\t\\t// Clear all callbacks and values\\r\\n\\t\\t\\tdisable: function() {\\r\\n\\t\\t\\t\\tlocked = queue = [];\\r\\n\\t\\t\\t\\tlist = memory = \"\";\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tdisabled: function() {\\r\\n\\t\\t\\t\\treturn !list;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t// Disable .fire\\r\\n\\t\\t\\t// Also disable .add unless we have memory (since it would have no effect)\\r\\n\\t\\t\\t// Abort any pending executions\\r\\n\\t\\t\\tlock: function() {\\r\\n\\t\\t\\t\\tlocked = queue = [];\\r\\n\\t\\t\\t\\tif ( !memory && !firing ) {\\r\\n\\t\\t\\t\\t\\tlist = memory = \"\";\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tlocked: function() {\\r\\n\\t\\t\\t\\treturn !!locked;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t// Call all callbacks with the given context and arguments\\r\\n\\t\\t\\tfireWith: function( context, args ) {\\r\\n\\t\\t\\t\\tif ( !locked ) {\\r\\n\\t\\t\\t\\t\\targs = args || [];\\r\\n\\t\\t\\t\\t\\targs = [ context, args.slice ? args.slice() : args ];\\r\\n\\t\\t\\t\\t\\tqueue.push( args );\\r\\n\\t\\t\\t\\t\\tif ( !firing ) {\\r\\n\\t\\t\\t\\t\\t\\tfire();\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t// Call all the callbacks with the given arguments\\r\\n\\t\\t\\tfire: function() {\\r\\n\\t\\t\\t\\tself.fireWith( this, arguments );\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t// To know if the callbacks have already been called at least once\\r\\n\\t\\t\\tfired: function() {\\r\\n\\t\\t\\t\\treturn !!fired;\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\r\\n\\treturn self;\\r\\n};\\r\\n\\r\\n\\r\\nfunction Identity( v ) {\\r\\n\\treturn v;\\r\\n}\\r\\nfunction Thrower( ex ) {\\r\\n\\tthrow ex;\\r\\n}\\r\\n\\r\\nfunction adoptValue( value, resolve, reject, noValue ) {\\r\\n\\tvar method;\\r\\n\\r\\n\\ttry {\\r\\n\\r\\n\\t\\t// Check for promise aspect first to privilege synchronous behavior\\r\\n\\t\\tif ( value && isFunction( ( method = value.promise ) ) ) {\\r\\n\\t\\t\\tmethod.call( value ).done( resolve ).fail( reject );\\r\\n\\r\\n\\t\\t// Other thenables\\r\\n\\t\\t} else if ( value && isFunction( ( method = value.then ) ) ) {\\r\\n\\t\\t\\tmethod.call( value, resolve, reject );\\r\\n\\r\\n\\t\\t// Other non-thenables\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\\r\\n\\t\\t\\t// * false: [ value ].slice( 0 ) => resolve( value )\\r\\n\\t\\t\\t// * true: [ value ].slice( 1 ) => resolve()\\r\\n\\t\\t\\tresolve.apply( undefined, [ value ].slice( noValue ) );\\r\\n\\t\\t}\\r\\n\\r\\n\\t// For Promises/A+, convert exceptions into rejections\\r\\n\\t// Since jQuery.when doesn\\'t unwrap thenables, we can skip the extra checks appearing in\\r\\n\\t// Deferred#then to conditionally suppress rejection.\\r\\n\\t} catch ( value ) {\\r\\n\\r\\n\\t\\t// Support: Android 4.0 only\\r\\n\\t\\t// Strict mode functions invoked without .call/.apply get global-object context\\r\\n\\t\\treject.apply( undefined, [ value ] );\\r\\n\\t}\\r\\n}\\r\\n\\r\\njQuery.extend( {\\r\\n\\r\\n\\tDeferred: function( func ) {\\r\\n\\t\\tvar tuples = [\\r\\n\\r\\n\\t\\t\\t\\t// action, add listener, callbacks,\\r\\n\\t\\t\\t\\t// ... .then handlers, argument index, [final state]\\r\\n\\t\\t\\t\\t[ \"notify\", \"progress\", jQuery.Callbacks( \"memory\" ),\\r\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \"memory\" ), 2 ],\\r\\n\\t\\t\\t\\t[ \"resolve\", \"done\", jQuery.Callbacks( \"once memory\" ),\\r\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \"once memory\" ), 0, \"resolved\" ],\\r\\n\\t\\t\\t\\t[ \"reject\", \"fail\", jQuery.Callbacks( \"once memory\" ),\\r\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \"once memory\" ), 1, \"rejected\" ]\\r\\n\\t\\t\\t],\\r\\n\\t\\t\\tstate = \"pending\",\\r\\n\\t\\t\\tpromise = {\\r\\n\\t\\t\\t\\tstate: function() {\\r\\n\\t\\t\\t\\t\\treturn state;\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\talways: function() {\\r\\n\\t\\t\\t\\t\\tdeferred.done( arguments ).fail( arguments );\\r\\n\\t\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\t\"catch\": function( fn ) {\\r\\n\\t\\t\\t\\t\\treturn promise.then( null, fn );\\r\\n\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\t// Keep pipe for back-compat\\r\\n\\t\\t\\t\\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\\r\\n\\t\\t\\t\\t\\tvar fns = arguments;\\r\\n\\r\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\r\\n\\t\\t\\t\\t\\t\\tjQuery.each( tuples, function( _i, tuple ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\\r\\n\\t\\t\\t\\t\\t\\t\\tvar fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\\r\\n\\t\\t\\t\\t\\t\\t\\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\\r\\n\\t\\t\\t\\t\\t\\t\\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\\r\\n\\t\\t\\t\\t\\t\\t\\tdeferred[ tuple[ 1 ] ]( function() {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tvar returned = fn && fn.apply( this, arguments );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( returned && isFunction( returned.promise ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.promise()\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.progress( newDefer.notify )\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.done( newDefer.resolve )\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.fail( newDefer.reject );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnewDefer[ tuple[ 0 ] + \"With\" ](\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthis,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfn ? [ returned ] : arguments\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\t\\t\\tfns = null;\\r\\n\\t\\t\\t\\t\\t} ).promise();\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\tthen: function( onFulfilled, onRejected, onProgress ) {\\r\\n\\t\\t\\t\\t\\tvar maxDepth = 0;\\r\\n\\t\\t\\t\\t\\tfunction resolve( depth, deferred, handler, special ) {\\r\\n\\t\\t\\t\\t\\t\\treturn function() {\\r\\n\\t\\t\\t\\t\\t\\t\\tvar that = this,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\targs = arguments,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tmightThrow = function() {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar returned, then;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.3\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-59\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore double-resolution attempts\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth < maxDepth ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned = handler.apply( that, args );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.1\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-48\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( returned === deferred.promise() ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthrow new TypeError( \"Thenable self-resolution\" );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ sections 2.3.3.1, 3.5\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-54\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-75\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Retrieve `then` only once\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen = returned &&\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.4\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-64\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only check objects and functions for thenability\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( typeof returned === \"object\" ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttypeof returned === \"function\" ) &&\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.then;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle a returned thenable\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( isFunction( then ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Special processors (notify) just wait for resolution\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( special ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special )\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Normal processors (resolve) also hook into progress\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// ...and disregard older resolution values\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmaxDepth++;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special ),\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.notifyWith )\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle all other returned values\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Identity ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ returned ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Process the value(s)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Default process is resolve\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( special || deferred.resolveWith )( that, args );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Only normal processors (resolve) catch and reject exceptions\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess = special ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow :\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfunction() {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttry {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow();\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} catch ( e ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.exceptionHook ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tjQuery.Deferred.exceptionHook( e,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.4.1\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-61\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore post-resolution exceptions\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth + 1 >= maxDepth ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Thrower ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ e ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.rejectWith( that, args );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.1\\r\\n\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-57\\r\\n\\t\\t\\t\\t\\t\\t\\t// Re-resolve promises immediately to dodge false rejection from\\r\\n\\t\\t\\t\\t\\t\\t\\t// subsequent errors\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( depth ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess();\\r\\n\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Call an optional hook to record the stack, in case of exception\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// since it\\'s otherwise lost when execution goes async\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.getStackHook ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace = jQuery.Deferred.getStackHook();\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\twindow.setTimeout( process );\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// progress_handlers.add( ... )\\r\\n\\t\\t\\t\\t\\t\\ttuples[ 0 ][ 3 ].add(\\r\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tisFunction( onProgress ) ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonProgress :\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer.notifyWith\\r\\n\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// fulfilled_handlers.add( ... )\\r\\n\\t\\t\\t\\t\\t\\ttuples[ 1 ][ 3 ].add(\\r\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tisFunction( onFulfilled ) ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonFulfilled :\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity\\r\\n\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// rejected_handlers.add( ... )\\r\\n\\t\\t\\t\\t\\t\\ttuples[ 2 ][ 3 ].add(\\r\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tisFunction( onRejected ) ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonRejected :\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tThrower\\r\\n\\t\\t\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t} ).promise();\\r\\n\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\t// Get a promise for this deferred\\r\\n\\t\\t\\t\\t// If obj is provided, the promise aspect is added to the object\\r\\n\\t\\t\\t\\tpromise: function( obj ) {\\r\\n\\t\\t\\t\\t\\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tdeferred = {};\\r\\n\\r\\n\\t\\t// Add list-specific methods\\r\\n\\t\\tjQuery.each( tuples, function( i, tuple ) {\\r\\n\\t\\t\\tvar list = tuple[ 2 ],\\r\\n\\t\\t\\t\\tstateString = tuple[ 5 ];\\r\\n\\r\\n\\t\\t\\t// promise.progress = list.add\\r\\n\\t\\t\\t// promise.done = list.add\\r\\n\\t\\t\\t// promise.fail = list.add\\r\\n\\t\\t\\tpromise[ tuple[ 1 ] ] = list.add;\\r\\n\\r\\n\\t\\t\\t// Handle state\\r\\n\\t\\t\\tif ( stateString ) {\\r\\n\\t\\t\\t\\tlist.add(\\r\\n\\t\\t\\t\\t\\tfunction() {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// state = \"resolved\" (i.e., fulfilled)\\r\\n\\t\\t\\t\\t\\t\\t// state = \"rejected\"\\r\\n\\t\\t\\t\\t\\t\\tstate = stateString;\\r\\n\\t\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\t\\t// rejected_callbacks.disable\\r\\n\\t\\t\\t\\t\\t// fulfilled_callbacks.disable\\r\\n\\t\\t\\t\\t\\ttuples[ 3 - i ][ 2 ].disable,\\r\\n\\r\\n\\t\\t\\t\\t\\t// rejected_handlers.disable\\r\\n\\t\\t\\t\\t\\t// fulfilled_handlers.disable\\r\\n\\t\\t\\t\\t\\ttuples[ 3 - i ][ 3 ].disable,\\r\\n\\r\\n\\t\\t\\t\\t\\t// progress_callbacks.lock\\r\\n\\t\\t\\t\\t\\ttuples[ 0 ][ 2 ].lock,\\r\\n\\r\\n\\t\\t\\t\\t\\t// progress_handlers.lock\\r\\n\\t\\t\\t\\t\\ttuples[ 0 ][ 3 ].lock\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// progress_handlers.fire\\r\\n\\t\\t\\t// fulfilled_handlers.fire\\r\\n\\t\\t\\t// rejected_handlers.fire\\r\\n\\t\\t\\tlist.add( tuple[ 3 ].fire );\\r\\n\\r\\n\\t\\t\\t// deferred.notify = function() { deferred.notifyWith(...) }\\r\\n\\t\\t\\t// deferred.resolve = function() { deferred.resolveWith(...) }\\r\\n\\t\\t\\t// deferred.reject = function() { deferred.rejectWith(...) }\\r\\n\\t\\t\\tdeferred[ tuple[ 0 ] ] = function() {\\r\\n\\t\\t\\t\\tdeferred[ tuple[ 0 ] + \"With\" ]( this === deferred ? undefined : this, arguments );\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t// deferred.notifyWith = list.fireWith\\r\\n\\t\\t\\t// deferred.resolveWith = list.fireWith\\r\\n\\t\\t\\t// deferred.rejectWith = list.fireWith\\r\\n\\t\\t\\tdeferred[ tuple[ 0 ] + \"With\" ] = list.fireWith;\\r\\n\\t\\t} );\\r\\n\\r\\n\\t\\t// Make the deferred a promise\\r\\n\\t\\tpromise.promise( deferred );\\r\\n\\r\\n\\t\\t// Call given func if any\\r\\n\\t\\tif ( func ) {\\r\\n\\t\\t\\tfunc.call( deferred, deferred );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// All done!\\r\\n\\t\\treturn deferred;\\r\\n\\t},\\r\\n\\r\\n\\t// Deferred helper\\r\\n\\twhen: function( singleValue ) {\\r\\n\\t\\tvar\\r\\n\\r\\n\\t\\t\\t// count of uncompleted subordinates\\r\\n\\t\\t\\tremaining = arguments.length,\\r\\n\\r\\n\\t\\t\\t// count of unprocessed arguments\\r\\n\\t\\t\\ti = remaining,\\r\\n\\r\\n\\t\\t\\t// subordinate fulfillment data\\r\\n\\t\\t\\tresolveContexts = Array( i ),\\r\\n\\t\\t\\tresolveValues = slice.call( arguments ),\\r\\n\\r\\n\\t\\t\\t// the master Deferred\\r\\n\\t\\t\\tmaster = jQuery.Deferred(),\\r\\n\\r\\n\\t\\t\\t// subordinate callback factory\\r\\n\\t\\t\\tupdateFunc = function( i ) {\\r\\n\\t\\t\\t\\treturn function( value ) {\\r\\n\\t\\t\\t\\t\\tresolveContexts[ i ] = this;\\r\\n\\t\\t\\t\\t\\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\\r\\n\\t\\t\\t\\t\\tif ( !( --remaining ) ) {\\r\\n\\t\\t\\t\\t\\t\\tmaster.resolveWith( resolveContexts, resolveValues );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t// Single- and empty arguments are adopted like Promise.resolve\\r\\n\\t\\tif ( remaining <= 1 ) {\\r\\n\\t\\t\\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\\r\\n\\t\\t\\t\\t!remaining );\\r\\n\\r\\n\\t\\t\\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\\r\\n\\t\\t\\tif ( master.state() === \"pending\" ||\\r\\n\\t\\t\\t\\tisFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\\r\\n\\r\\n\\t\\t\\t\\treturn master.then();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Multiple arguments are aggregated like Promise.all array elements\\r\\n\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn master.promise();\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\n// These usually indicate a programmer mistake during development,\\r\\n// warn about them ASAP rather than swallowing them by default.\\r\\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\\r\\n\\r\\njQuery.Deferred.exceptionHook = function( error, stack ) {\\r\\n\\r\\n\\t// Support: IE 8 - 9 only\\r\\n\\t// Console exists when dev tools are open, which can happen at any time\\r\\n\\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\\r\\n\\t\\twindow.console.warn( \"jQuery.Deferred exception: \" + error.message, error.stack, stack );\\r\\n\\t}\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\njQuery.readyException = function( error ) {\\r\\n\\twindow.setTimeout( function() {\\r\\n\\t\\tthrow error;\\r\\n\\t} );\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// The deferred used on DOM ready\\r\\nvar readyList = jQuery.Deferred();\\r\\n\\r\\njQuery.fn.ready = function( fn ) {\\r\\n\\r\\n\\treadyList\\r\\n\\t\\t.then( fn )\\r\\n\\r\\n\\t\\t// Wrap jQuery.readyException in a function so that the lookup\\r\\n\\t\\t// happens at the time of error handling instead of callback\\r\\n\\t\\t// registration.\\r\\n\\t\\t.catch( function( error ) {\\r\\n\\t\\t\\tjQuery.readyException( error );\\r\\n\\t\\t} );\\r\\n\\r\\n\\treturn this;\\r\\n};\\r\\n\\r\\njQuery.extend( {\\r\\n\\r\\n\\t// Is the DOM ready to be used? Set to true once it occurs.\\r\\n\\tisReady: false,\\r\\n\\r\\n\\t// A counter to track how many items to wait for before\\r\\n\\t// the ready event fires. See #6781\\r\\n\\treadyWait: 1,\\r\\n\\r\\n\\t// Handle when the DOM is ready\\r\\n\\tready: function( wait ) {\\r\\n\\r\\n\\t\\t// Abort if there are pending holds or we\\'re already ready\\r\\n\\t\\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Remember that the DOM is ready\\r\\n\\t\\tjQuery.isReady = true;\\r\\n\\r\\n\\t\\t// If a normal DOM Ready event fired, decrement, and wait if need be\\r\\n\\t\\tif ( wait !== true && --jQuery.readyWait > 0 ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// If there are functions bound, to execute\\r\\n\\t\\treadyList.resolveWith( document, [ jQuery ] );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.ready.then = readyList.then;\\r\\n\\r\\n// The ready event handler and self cleanup method\\r\\nfunction completed() {\\r\\n\\tdocument.removeEventListener( \"DOMContentLoaded\", completed );\\r\\n\\twindow.removeEventListener( \"load\", completed );\\r\\n\\tjQuery.ready();\\r\\n}\\r\\n\\r\\n// Catch cases where $(document).ready() is called\\r\\n// after the browser event has already occurred.\\r\\n// Support: IE <=9 - 10 only\\r\\n// Older IE sometimes signals \"interactive\" too soon\\r\\nif ( document.readyState === \"complete\" ||\\r\\n\\t( document.readyState !== \"loading\" && !document.documentElement.doScroll ) ) {\\r\\n\\r\\n\\t// Handle it asynchronously to allow scripts the opportunity to delay ready\\r\\n\\twindow.setTimeout( jQuery.ready );\\r\\n\\r\\n} else {\\r\\n\\r\\n\\t// Use the handy event callback\\r\\n\\tdocument.addEventListener( \"DOMContentLoaded\", completed );\\r\\n\\r\\n\\t// A fallback to window.onload, that will always work\\r\\n\\twindow.addEventListener( \"load\", completed );\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// Multifunctional method to get and set values of a collection\\r\\n// The value/s can optionally be executed if it\\'s a function\\r\\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\\r\\n\\tvar i = 0,\\r\\n\\t\\tlen = elems.length,\\r\\n\\t\\tbulk = key == null;\\r\\n\\r\\n\\t// Sets many values\\r\\n\\tif ( toType( key ) === \"object\" ) {\\r\\n\\t\\tchainable = true;\\r\\n\\t\\tfor ( i in key ) {\\r\\n\\t\\t\\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\\r\\n\\t\\t}\\r\\n\\r\\n\\t// Sets one value\\r\\n\\t} else if ( value !== undefined ) {\\r\\n\\t\\tchainable = true;\\r\\n\\r\\n\\t\\tif ( !isFunction( value ) ) {\\r\\n\\t\\t\\traw = true;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( bulk ) {\\r\\n\\r\\n\\t\\t\\t// Bulk operations run against the entire set\\r\\n\\t\\t\\tif ( raw ) {\\r\\n\\t\\t\\t\\tfn.call( elems, value );\\r\\n\\t\\t\\t\\tfn = null;\\r\\n\\r\\n\\t\\t\\t// ...except when executing function values\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tbulk = fn;\\r\\n\\t\\t\\t\\tfn = function( elem, _key, value ) {\\r\\n\\t\\t\\t\\t\\treturn bulk.call( jQuery( elem ), value );\\r\\n\\t\\t\\t\\t};\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( fn ) {\\r\\n\\t\\t\\tfor ( ; i < len; i++ ) {\\r\\n\\t\\t\\t\\tfn(\\r\\n\\t\\t\\t\\t\\telems[ i ], key, raw ?\\r\\n\\t\\t\\t\\t\\tvalue :\\r\\n\\t\\t\\t\\t\\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tif ( chainable ) {\\r\\n\\t\\treturn elems;\\r\\n\\t}\\r\\n\\r\\n\\t// Gets\\r\\n\\tif ( bulk ) {\\r\\n\\t\\treturn fn.call( elems );\\r\\n\\t}\\r\\n\\r\\n\\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\\r\\n};\\r\\n\\r\\n\\r\\n// Matches dashed string for camelizing\\r\\nvar rmsPrefix = /^-ms-/,\\r\\n\\trdashAlpha = /-([a-z])/g;\\r\\n\\r\\n// Used by camelCase as callback to replace()\\r\\nfunction fcamelCase( _all, letter ) {\\r\\n\\treturn letter.toUpperCase();\\r\\n}\\r\\n\\r\\n// Convert dashed to camelCase; used by the css and data modules\\r\\n// Support: IE <=9 - 11, Edge 12 - 15\\r\\n// Microsoft forgot to hump their vendor prefix (#9572)\\r\\nfunction camelCase( string ) {\\r\\n\\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\\r\\n}\\r\\nvar acceptData = function( owner ) {\\r\\n\\r\\n\\t// Accepts only:\\r\\n\\t//  - Node\\r\\n\\t//    - Node.ELEMENT_NODE\\r\\n\\t//    - Node.DOCUMENT_NODE\\r\\n\\t//  - Object\\r\\n\\t//    - Any\\r\\n\\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nfunction Data() {\\r\\n\\tthis.expando = jQuery.expando + Data.uid++;\\r\\n}\\r\\n\\r\\nData.uid = 1;\\r\\n\\r\\nData.prototype = {\\r\\n\\r\\n\\tcache: function( owner ) {\\r\\n\\r\\n\\t\\t// Check if the owner object already has a cache\\r\\n\\t\\tvar value = owner[ this.expando ];\\r\\n\\r\\n\\t\\t// If not, create one\\r\\n\\t\\tif ( !value ) {\\r\\n\\t\\t\\tvalue = {};\\r\\n\\r\\n\\t\\t\\t// We can accept data for non-element nodes in modern browsers,\\r\\n\\t\\t\\t// but we should not, see #8335.\\r\\n\\t\\t\\t// Always return an empty object.\\r\\n\\t\\t\\tif ( acceptData( owner ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// If it is a node unlikely to be stringify-ed or looped over\\r\\n\\t\\t\\t\\t// use plain assignment\\r\\n\\t\\t\\t\\tif ( owner.nodeType ) {\\r\\n\\t\\t\\t\\t\\towner[ this.expando ] = value;\\r\\n\\r\\n\\t\\t\\t\\t// Otherwise secure it in a non-enumerable property\\r\\n\\t\\t\\t\\t// configurable must be true to allow the property to be\\r\\n\\t\\t\\t\\t// deleted when data is removed\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tObject.defineProperty( owner, this.expando, {\\r\\n\\t\\t\\t\\t\\t\\tvalue: value,\\r\\n\\t\\t\\t\\t\\t\\tconfigurable: true\\r\\n\\t\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn value;\\r\\n\\t},\\r\\n\\tset: function( owner, data, value ) {\\r\\n\\t\\tvar prop,\\r\\n\\t\\t\\tcache = this.cache( owner );\\r\\n\\r\\n\\t\\t// Handle: [ owner, key, value ] args\\r\\n\\t\\t// Always use camelCase key (gh-2257)\\r\\n\\t\\tif ( typeof data === \"string\" ) {\\r\\n\\t\\t\\tcache[ camelCase( data ) ] = value;\\r\\n\\r\\n\\t\\t// Handle: [ owner, { properties } ] args\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// Copy the properties one-by-one to the cache object\\r\\n\\t\\t\\tfor ( prop in data ) {\\r\\n\\t\\t\\t\\tcache[ camelCase( prop ) ] = data[ prop ];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\treturn cache;\\r\\n\\t},\\r\\n\\tget: function( owner, key ) {\\r\\n\\t\\treturn key === undefined ?\\r\\n\\t\\t\\tthis.cache( owner ) :\\r\\n\\r\\n\\t\\t\\t// Always use camelCase key (gh-2257)\\r\\n\\t\\t\\towner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];\\r\\n\\t},\\r\\n\\taccess: function( owner, key, value ) {\\r\\n\\r\\n\\t\\t// In cases where either:\\r\\n\\t\\t//\\r\\n\\t\\t//   1. No key was specified\\r\\n\\t\\t//   2. A string key was specified, but no value provided\\r\\n\\t\\t//\\r\\n\\t\\t// Take the \"read\" path and allow the get method to determine\\r\\n\\t\\t// which value to return, respectively either:\\r\\n\\t\\t//\\r\\n\\t\\t//   1. The entire cache object\\r\\n\\t\\t//   2. The data stored at the key\\r\\n\\t\\t//\\r\\n\\t\\tif ( key === undefined ||\\r\\n\\t\\t\\t\\t( ( key && typeof key === \"string\" ) && value === undefined ) ) {\\r\\n\\r\\n\\t\\t\\treturn this.get( owner, key );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// When the key is not a string, or both a key and value\\r\\n\\t\\t// are specified, set or extend (existing objects) with either:\\r\\n\\t\\t//\\r\\n\\t\\t//   1. An object of properties\\r\\n\\t\\t//   2. A key and value\\r\\n\\t\\t//\\r\\n\\t\\tthis.set( owner, key, value );\\r\\n\\r\\n\\t\\t// Since the \"set\" path can have two possible entry points\\r\\n\\t\\t// return the expected data based on which path was taken[*]\\r\\n\\t\\treturn value !== undefined ? value : key;\\r\\n\\t},\\r\\n\\tremove: function( owner, key ) {\\r\\n\\t\\tvar i,\\r\\n\\t\\t\\tcache = owner[ this.expando ];\\r\\n\\r\\n\\t\\tif ( cache === undefined ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( key !== undefined ) {\\r\\n\\r\\n\\t\\t\\t// Support array or space separated string of keys\\r\\n\\t\\t\\tif ( Array.isArray( key ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// If key is an array of keys...\\r\\n\\t\\t\\t\\t// We always set camelCase keys, so remove that.\\r\\n\\t\\t\\t\\tkey = key.map( camelCase );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tkey = camelCase( key );\\r\\n\\r\\n\\t\\t\\t\\t// If a key with the spaces exists, use it.\\r\\n\\t\\t\\t\\t// Otherwise, create an array by matching non-whitespace\\r\\n\\t\\t\\t\\tkey = key in cache ?\\r\\n\\t\\t\\t\\t\\t[ key ] :\\r\\n\\t\\t\\t\\t\\t( key.match( rnothtmlwhite ) || [] );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ti = key.length;\\r\\n\\r\\n\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\tdelete cache[ key[ i ] ];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Remove the expando if there\\'s no more data\\r\\n\\t\\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\\r\\n\\r\\n\\t\\t\\t// Support: Chrome <=35 - 45\\r\\n\\t\\t\\t// Webkit & Blink performance suffers when deleting properties\\r\\n\\t\\t\\t// from DOM nodes, so set to undefined instead\\r\\n\\t\\t\\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\\r\\n\\t\\t\\tif ( owner.nodeType ) {\\r\\n\\t\\t\\t\\towner[ this.expando ] = undefined;\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tdelete owner[ this.expando ];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\thasData: function( owner ) {\\r\\n\\t\\tvar cache = owner[ this.expando ];\\r\\n\\t\\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\\r\\n\\t}\\r\\n};\\r\\nvar dataPriv = new Data();\\r\\n\\r\\nvar dataUser = new Data();\\r\\n\\r\\n\\r\\n\\r\\n//\\tImplementation Summary\\r\\n//\\r\\n//\\t1. Enforce API surface and semantic compatibility with 1.9.x branch\\r\\n//\\t2. Improve the module\\'s maintainability by reducing the storage\\r\\n//\\t\\tpaths to a single mechanism.\\r\\n//\\t3. Use the same single mechanism to support \"private\" and \"user\" data.\\r\\n//\\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\\r\\n//\\t5. Avoid exposing implementation details on user objects (eg. expando properties)\\r\\n//\\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\\r\\n\\r\\nvar rbrace = /^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,\\r\\n\\trmultiDash = /[A-Z]/g;\\r\\n\\r\\nfunction getData( data ) {\\r\\n\\tif ( data === \"true\" ) {\\r\\n\\t\\treturn true;\\r\\n\\t}\\r\\n\\r\\n\\tif ( data === \"false\" ) {\\r\\n\\t\\treturn false;\\r\\n\\t}\\r\\n\\r\\n\\tif ( data === \"null\" ) {\\r\\n\\t\\treturn null;\\r\\n\\t}\\r\\n\\r\\n\\t// Only convert to a number if it doesn\\'t change the string\\r\\n\\tif ( data === +data + \"\" ) {\\r\\n\\t\\treturn +data;\\r\\n\\t}\\r\\n\\r\\n\\tif ( rbrace.test( data ) ) {\\r\\n\\t\\treturn JSON.parse( data );\\r\\n\\t}\\r\\n\\r\\n\\treturn data;\\r\\n}\\r\\n\\r\\nfunction dataAttr( elem, key, data ) {\\r\\n\\tvar name;\\r\\n\\r\\n\\t// If nothing was found internally, try to fetch any\\r\\n\\t// data from the HTML5 data-* attribute\\r\\n\\tif ( data === undefined && elem.nodeType === 1 ) {\\r\\n\\t\\tname = \"data-\" + key.replace( rmultiDash, \"-$&\" ).toLowerCase();\\r\\n\\t\\tdata = elem.getAttribute( name );\\r\\n\\r\\n\\t\\tif ( typeof data === \"string\" ) {\\r\\n\\t\\t\\ttry {\\r\\n\\t\\t\\t\\tdata = getData( data );\\r\\n\\t\\t\\t} catch ( e ) {}\\r\\n\\r\\n\\t\\t\\t// Make sure we set the data so it isn\\'t changed later\\r\\n\\t\\t\\tdataUser.set( elem, key, data );\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tdata = undefined;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn data;\\r\\n}\\r\\n\\r\\njQuery.extend( {\\r\\n\\thasData: function( elem ) {\\r\\n\\t\\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\\r\\n\\t},\\r\\n\\r\\n\\tdata: function( elem, name, data ) {\\r\\n\\t\\treturn dataUser.access( elem, name, data );\\r\\n\\t},\\r\\n\\r\\n\\tremoveData: function( elem, name ) {\\r\\n\\t\\tdataUser.remove( elem, name );\\r\\n\\t},\\r\\n\\r\\n\\t// TODO: Now that all calls to _data and _removeData have been replaced\\r\\n\\t// with direct calls to dataPriv methods, these can be deprecated.\\r\\n\\t_data: function( elem, name, data ) {\\r\\n\\t\\treturn dataPriv.access( elem, name, data );\\r\\n\\t},\\r\\n\\r\\n\\t_removeData: function( elem, name ) {\\r\\n\\t\\tdataPriv.remove( elem, name );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tdata: function( key, value ) {\\r\\n\\t\\tvar i, name, data,\\r\\n\\t\\t\\telem = this[ 0 ],\\r\\n\\t\\t\\tattrs = elem && elem.attributes;\\r\\n\\r\\n\\t\\t// Gets all values\\r\\n\\t\\tif ( key === undefined ) {\\r\\n\\t\\t\\tif ( this.length ) {\\r\\n\\t\\t\\t\\tdata = dataUser.get( elem );\\r\\n\\r\\n\\t\\t\\t\\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \"hasDataAttrs\" ) ) {\\r\\n\\t\\t\\t\\t\\ti = attrs.length;\\r\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Support: IE 11 only\\r\\n\\t\\t\\t\\t\\t\\t// The attrs elements can be null (#14894)\\r\\n\\t\\t\\t\\t\\t\\tif ( attrs[ i ] ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tname = attrs[ i ].name;\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( name.indexOf( \"data-\" ) === 0 ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tname = camelCase( name.slice( 5 ) );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tdataAttr( elem, name, data[ name ] );\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tdataPriv.set( elem, \"hasDataAttrs\", true );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn data;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Sets multiple values\\r\\n\\t\\tif ( typeof key === \"object\" ) {\\r\\n\\t\\t\\treturn this.each( function() {\\r\\n\\t\\t\\t\\tdataUser.set( this, key );\\r\\n\\t\\t\\t} );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn access( this, function( value ) {\\r\\n\\t\\t\\tvar data;\\r\\n\\r\\n\\t\\t\\t// The calling jQuery object (element matches) is not empty\\r\\n\\t\\t\\t// (and therefore has an element appears at this[ 0 ]) and the\\r\\n\\t\\t\\t// `value` parameter was not undefined. An empty jQuery object\\r\\n\\t\\t\\t// will result in `undefined` for elem = this[ 0 ] which will\\r\\n\\t\\t\\t// throw an exception if an attempt to read a data cache is made.\\r\\n\\t\\t\\tif ( elem && value === undefined ) {\\r\\n\\r\\n\\t\\t\\t\\t// Attempt to get data from the cache\\r\\n\\t\\t\\t\\t// The key will always be camelCased in Data\\r\\n\\t\\t\\t\\tdata = dataUser.get( elem, key );\\r\\n\\t\\t\\t\\tif ( data !== undefined ) {\\r\\n\\t\\t\\t\\t\\treturn data;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Attempt to \"discover\" the data in\\r\\n\\t\\t\\t\\t// HTML5 custom data-* attrs\\r\\n\\t\\t\\t\\tdata = dataAttr( elem, key );\\r\\n\\t\\t\\t\\tif ( data !== undefined ) {\\r\\n\\t\\t\\t\\t\\treturn data;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// We tried really hard, but the data doesn\\'t exist.\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Set the data...\\r\\n\\t\\t\\tthis.each( function() {\\r\\n\\r\\n\\t\\t\\t\\t// We always store the camelCased key\\r\\n\\t\\t\\t\\tdataUser.set( this, key, value );\\r\\n\\t\\t\\t} );\\r\\n\\t\\t}, null, value, arguments.length > 1, null, true );\\r\\n\\t},\\r\\n\\r\\n\\tremoveData: function( key ) {\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tdataUser.remove( this, key );\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\njQuery.extend( {\\r\\n\\tqueue: function( elem, type, data ) {\\r\\n\\t\\tvar queue;\\r\\n\\r\\n\\t\\tif ( elem ) {\\r\\n\\t\\t\\ttype = ( type || \"fx\" ) + \"queue\";\\r\\n\\t\\t\\tqueue = dataPriv.get( elem, type );\\r\\n\\r\\n\\t\\t\\t// Speed up dequeue by getting out quickly if this is just a lookup\\r\\n\\t\\t\\tif ( data ) {\\r\\n\\t\\t\\t\\tif ( !queue || Array.isArray( data ) ) {\\r\\n\\t\\t\\t\\t\\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tqueue.push( data );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn queue || [];\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tdequeue: function( elem, type ) {\\r\\n\\t\\ttype = type || \"fx\";\\r\\n\\r\\n\\t\\tvar queue = jQuery.queue( elem, type ),\\r\\n\\t\\t\\tstartLength = queue.length,\\r\\n\\t\\t\\tfn = queue.shift(),\\r\\n\\t\\t\\thooks = jQuery._queueHooks( elem, type ),\\r\\n\\t\\t\\tnext = function() {\\r\\n\\t\\t\\t\\tjQuery.dequeue( elem, type );\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t// If the fx queue is dequeued, always remove the progress sentinel\\r\\n\\t\\tif ( fn === \"inprogress\" ) {\\r\\n\\t\\t\\tfn = queue.shift();\\r\\n\\t\\t\\tstartLength--;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( fn ) {\\r\\n\\r\\n\\t\\t\\t// Add a progress sentinel to prevent the fx queue from being\\r\\n\\t\\t\\t// automatically dequeued\\r\\n\\t\\t\\tif ( type === \"fx\" ) {\\r\\n\\t\\t\\t\\tqueue.unshift( \"inprogress\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Clear up the last queue stop function\\r\\n\\t\\t\\tdelete hooks.stop;\\r\\n\\t\\t\\tfn.call( elem, next, hooks );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( !startLength && hooks ) {\\r\\n\\t\\t\\thooks.empty.fire();\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\t// Not public - generate a queueHooks object, or return the current one\\r\\n\\t_queueHooks: function( elem, type ) {\\r\\n\\t\\tvar key = type + \"queueHooks\";\\r\\n\\t\\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\\r\\n\\t\\t\\tempty: jQuery.Callbacks( \"once memory\" ).add( function() {\\r\\n\\t\\t\\t\\tdataPriv.remove( elem, [ type + \"queue\", key ] );\\r\\n\\t\\t\\t} )\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tqueue: function( type, data ) {\\r\\n\\t\\tvar setter = 2;\\r\\n\\r\\n\\t\\tif ( typeof type !== \"string\" ) {\\r\\n\\t\\t\\tdata = type;\\r\\n\\t\\t\\ttype = \"fx\";\\r\\n\\t\\t\\tsetter--;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( arguments.length < setter ) {\\r\\n\\t\\t\\treturn jQuery.queue( this[ 0 ], type );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn data === undefined ?\\r\\n\\t\\t\\tthis :\\r\\n\\t\\t\\tthis.each( function() {\\r\\n\\t\\t\\t\\tvar queue = jQuery.queue( this, type, data );\\r\\n\\r\\n\\t\\t\\t\\t// Ensure a hooks for this queue\\r\\n\\t\\t\\t\\tjQuery._queueHooks( this, type );\\r\\n\\r\\n\\t\\t\\t\\tif ( type === \"fx\" && queue[ 0 ] !== \"inprogress\" ) {\\r\\n\\t\\t\\t\\t\\tjQuery.dequeue( this, type );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} );\\r\\n\\t},\\r\\n\\tdequeue: function( type ) {\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tjQuery.dequeue( this, type );\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\tclearQueue: function( type ) {\\r\\n\\t\\treturn this.queue( type || \"fx\", [] );\\r\\n\\t},\\r\\n\\r\\n\\t// Get a promise resolved when queues of a certain type\\r\\n\\t// are emptied (fx is the type by default)\\r\\n\\tpromise: function( type, obj ) {\\r\\n\\t\\tvar tmp,\\r\\n\\t\\t\\tcount = 1,\\r\\n\\t\\t\\tdefer = jQuery.Deferred(),\\r\\n\\t\\t\\telements = this,\\r\\n\\t\\t\\ti = this.length,\\r\\n\\t\\t\\tresolve = function() {\\r\\n\\t\\t\\t\\tif ( !( --count ) ) {\\r\\n\\t\\t\\t\\t\\tdefer.resolveWith( elements, [ elements ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\tif ( typeof type !== \"string\" ) {\\r\\n\\t\\t\\tobj = type;\\r\\n\\t\\t\\ttype = undefined;\\r\\n\\t\\t}\\r\\n\\t\\ttype = type || \"fx\";\\r\\n\\r\\n\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\ttmp = dataPriv.get( elements[ i ], type + \"queueHooks\" );\\r\\n\\t\\t\\tif ( tmp && tmp.empty ) {\\r\\n\\t\\t\\t\\tcount++;\\r\\n\\t\\t\\t\\ttmp.empty.add( resolve );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tresolve();\\r\\n\\t\\treturn defer.promise( obj );\\r\\n\\t}\\r\\n} );\\r\\nvar pnum = ( /[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/ ).source;\\r\\n\\r\\nvar rcssNum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" );\\r\\n\\r\\n\\r\\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\\r\\n\\r\\nvar documentElement = document.documentElement;\\r\\n\\r\\n\\r\\n\\r\\n\\tvar isAttached = function( elem ) {\\r\\n\\t\\t\\treturn jQuery.contains( elem.ownerDocument, elem );\\r\\n\\t\\t},\\r\\n\\t\\tcomposed = { composed: true };\\r\\n\\r\\n\\t// Support: IE 9 - 11+, Edge 12 - 18+, iOS 10.0 - 10.2 only\\r\\n\\t// Check attachment across shadow DOM boundaries when possible (gh-3504)\\r\\n\\t// Support: iOS 10.0-10.2 only\\r\\n\\t// Early iOS 10 versions support `attachShadow` but not `getRootNode`,\\r\\n\\t// leading to errors. We need to check for `getRootNode`.\\r\\n\\tif ( documentElement.getRootNode ) {\\r\\n\\t\\tisAttached = function( elem ) {\\r\\n\\t\\t\\treturn jQuery.contains( elem.ownerDocument, elem ) ||\\r\\n\\t\\t\\t\\telem.getRootNode( composed ) === elem.ownerDocument;\\r\\n\\t\\t};\\r\\n\\t}\\r\\nvar isHiddenWithinTree = function( elem, el ) {\\r\\n\\r\\n\\t\\t// isHiddenWithinTree might be called from jQuery#filter function;\\r\\n\\t\\t// in that case, element will be second argument\\r\\n\\t\\telem = el || elem;\\r\\n\\r\\n\\t\\t// Inline style trumps all\\r\\n\\t\\treturn elem.style.display === \"none\" ||\\r\\n\\t\\t\\telem.style.display === \"\" &&\\r\\n\\r\\n\\t\\t\\t// Otherwise, check computed style\\r\\n\\t\\t\\t// Support: Firefox <=43 - 45\\r\\n\\t\\t\\t// Disconnected elements can have computed display: none, so first confirm that elem is\\r\\n\\t\\t\\t// in the document.\\r\\n\\t\\t\\tisAttached( elem ) &&\\r\\n\\r\\n\\t\\t\\tjQuery.css( elem, \"display\" ) === \"none\";\\r\\n\\t};\\r\\n\\r\\n\\r\\n\\r\\nfunction adjustCSS( elem, prop, valueParts, tween ) {\\r\\n\\tvar adjusted, scale,\\r\\n\\t\\tmaxIterations = 20,\\r\\n\\t\\tcurrentValue = tween ?\\r\\n\\t\\t\\tfunction() {\\r\\n\\t\\t\\t\\treturn tween.cur();\\r\\n\\t\\t\\t} :\\r\\n\\t\\t\\tfunction() {\\r\\n\\t\\t\\t\\treturn jQuery.css( elem, prop, \"\" );\\r\\n\\t\\t\\t},\\r\\n\\t\\tinitial = currentValue(),\\r\\n\\t\\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\\r\\n\\r\\n\\t\\t// Starting value computation is required for potential unit mismatches\\r\\n\\t\\tinitialInUnit = elem.nodeType &&\\r\\n\\t\\t\\t( jQuery.cssNumber[ prop ] || unit !== \"px\" && +initial ) &&\\r\\n\\t\\t\\trcssNum.exec( jQuery.css( elem, prop ) );\\r\\n\\r\\n\\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\\r\\n\\r\\n\\t\\t// Support: Firefox <=54\\r\\n\\t\\t// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)\\r\\n\\t\\tinitial = initial / 2;\\r\\n\\r\\n\\t\\t// Trust units reported by jQuery.css\\r\\n\\t\\tunit = unit || initialInUnit[ 3 ];\\r\\n\\r\\n\\t\\t// Iteratively approximate from a nonzero starting point\\r\\n\\t\\tinitialInUnit = +initial || 1;\\r\\n\\r\\n\\t\\twhile ( maxIterations-- ) {\\r\\n\\r\\n\\t\\t\\t// Evaluate and update our best guess (doubling guesses that zero out).\\r\\n\\t\\t\\t// Finish if the scale equals or crosses 1 (making the old*new product non-positive).\\r\\n\\t\\t\\tjQuery.style( elem, prop, initialInUnit + unit );\\r\\n\\t\\t\\tif ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {\\r\\n\\t\\t\\t\\tmaxIterations = 0;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tinitialInUnit = initialInUnit / scale;\\r\\n\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tinitialInUnit = initialInUnit * 2;\\r\\n\\t\\tjQuery.style( elem, prop, initialInUnit + unit );\\r\\n\\r\\n\\t\\t// Make sure we update the tween properties later on\\r\\n\\t\\tvalueParts = valueParts || [];\\r\\n\\t}\\r\\n\\r\\n\\tif ( valueParts ) {\\r\\n\\t\\tinitialInUnit = +initialInUnit || +initial || 0;\\r\\n\\r\\n\\t\\t// Apply relative offset (+=/-=) if specified\\r\\n\\t\\tadjusted = valueParts[ 1 ] ?\\r\\n\\t\\t\\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\\r\\n\\t\\t\\t+valueParts[ 2 ];\\r\\n\\t\\tif ( tween ) {\\r\\n\\t\\t\\ttween.unit = unit;\\r\\n\\t\\t\\ttween.start = initialInUnit;\\r\\n\\t\\t\\ttween.end = adjusted;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\treturn adjusted;\\r\\n}\\r\\n\\r\\n\\r\\nvar defaultDisplayMap = {};\\r\\n\\r\\nfunction getDefaultDisplay( elem ) {\\r\\n\\tvar temp,\\r\\n\\t\\tdoc = elem.ownerDocument,\\r\\n\\t\\tnodeName = elem.nodeName,\\r\\n\\t\\tdisplay = defaultDisplayMap[ nodeName ];\\r\\n\\r\\n\\tif ( display ) {\\r\\n\\t\\treturn display;\\r\\n\\t}\\r\\n\\r\\n\\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\\r\\n\\tdisplay = jQuery.css( temp, \"display\" );\\r\\n\\r\\n\\ttemp.parentNode.removeChild( temp );\\r\\n\\r\\n\\tif ( display === \"none\" ) {\\r\\n\\t\\tdisplay = \"block\";\\r\\n\\t}\\r\\n\\tdefaultDisplayMap[ nodeName ] = display;\\r\\n\\r\\n\\treturn display;\\r\\n}\\r\\n\\r\\nfunction showHide( elements, show ) {\\r\\n\\tvar display, elem,\\r\\n\\t\\tvalues = [],\\r\\n\\t\\tindex = 0,\\r\\n\\t\\tlength = elements.length;\\r\\n\\r\\n\\t// Determine new display value for elements that need to change\\r\\n\\tfor ( ; index < length; index++ ) {\\r\\n\\t\\telem = elements[ index ];\\r\\n\\t\\tif ( !elem.style ) {\\r\\n\\t\\t\\tcontinue;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdisplay = elem.style.display;\\r\\n\\t\\tif ( show ) {\\r\\n\\r\\n\\t\\t\\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\\r\\n\\t\\t\\t// check is required in this first loop unless we have a nonempty display value (either\\r\\n\\t\\t\\t// inline or about-to-be-restored)\\r\\n\\t\\t\\tif ( display === \"none\" ) {\\r\\n\\t\\t\\t\\tvalues[ index ] = dataPriv.get( elem, \"display\" ) || null;\\r\\n\\t\\t\\t\\tif ( !values[ index ] ) {\\r\\n\\t\\t\\t\\t\\telem.style.display = \"\";\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( elem.style.display === \"\" && isHiddenWithinTree( elem ) ) {\\r\\n\\t\\t\\t\\tvalues[ index ] = getDefaultDisplay( elem );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tif ( display !== \"none\" ) {\\r\\n\\t\\t\\t\\tvalues[ index ] = \"none\";\\r\\n\\r\\n\\t\\t\\t\\t// Remember what we\\'re overwriting\\r\\n\\t\\t\\t\\tdataPriv.set( elem, \"display\", display );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Set the display of the elements in a second loop to avoid constant reflow\\r\\n\\tfor ( index = 0; index < length; index++ ) {\\r\\n\\t\\tif ( values[ index ] != null ) {\\r\\n\\t\\t\\telements[ index ].style.display = values[ index ];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn elements;\\r\\n}\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tshow: function() {\\r\\n\\t\\treturn showHide( this, true );\\r\\n\\t},\\r\\n\\thide: function() {\\r\\n\\t\\treturn showHide( this );\\r\\n\\t},\\r\\n\\ttoggle: function( state ) {\\r\\n\\t\\tif ( typeof state === \"boolean\" ) {\\r\\n\\t\\t\\treturn state ? this.show() : this.hide();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tif ( isHiddenWithinTree( this ) ) {\\r\\n\\t\\t\\t\\tjQuery( this ).show();\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tjQuery( this ).hide();\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n} );\\r\\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\\r\\n\\r\\nvar rtagName = ( /<([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]*)/i );\\r\\n\\r\\nvar rscriptType = ( /^$|^module$|\\\\/(?:java|ecma)script/i );\\r\\n\\r\\n\\r\\n\\r\\n( function() {\\r\\n\\tvar fragment = document.createDocumentFragment(),\\r\\n\\t\\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\\r\\n\\t\\tinput = document.createElement( \"input\" );\\r\\n\\r\\n\\t// Support: Android 4.0 - 4.3 only\\r\\n\\t// Check state lost if the name is set (#11217)\\r\\n\\t// Support: Windows Web Apps (WWA)\\r\\n\\t// `name` and `type` must use .setAttribute for WWA (#14901)\\r\\n\\tinput.setAttribute( \"type\", \"radio\" );\\r\\n\\tinput.setAttribute( \"checked\", \"checked\" );\\r\\n\\tinput.setAttribute( \"name\", \"t\" );\\r\\n\\r\\n\\tdiv.appendChild( input );\\r\\n\\r\\n\\t// Support: Android <=4.1 only\\r\\n\\t// Older WebKit doesn\\'t clone checked state correctly in fragments\\r\\n\\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\\r\\n\\r\\n\\t// Support: IE <=11 only\\r\\n\\t// Make sure textarea (and checkbox) defaultValue is properly cloned\\r\\n\\tdiv.innerHTML = \"<textarea>x</textarea>\";\\r\\n\\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\\r\\n\\r\\n\\t// Support: IE <=9 only\\r\\n\\t// IE <=9 replaces <option> tags with their contents when inserted outside of\\r\\n\\t// the select element.\\r\\n\\tdiv.innerHTML = \"<option></option>\";\\r\\n\\tsupport.option = !!div.lastChild;\\r\\n} )();\\r\\n\\r\\n\\r\\n// We have to close these tags to support XHTML (#13200)\\r\\nvar wrapMap = {\\r\\n\\r\\n\\t// XHTML parsers do not magically insert elements in the\\r\\n\\t// same way that tag soup parsers do. So we cannot shorten\\r\\n\\t// this by omitting <tbody> or other required elements.\\r\\n\\tthead: [ 1, \"<table>\", \"</table>\" ],\\r\\n\\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\\r\\n\\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\\r\\n\\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\\r\\n\\r\\n\\t_default: [ 0, \"\", \"\" ]\\r\\n};\\r\\n\\r\\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\\r\\nwrapMap.th = wrapMap.td;\\r\\n\\r\\n// Support: IE <=9 only\\r\\nif ( !support.option ) {\\r\\n\\twrapMap.optgroup = wrapMap.option = [ 1, \"<select multiple=\\'multiple\\'>\", \"</select>\" ];\\r\\n}\\r\\n\\r\\n\\r\\nfunction getAll( context, tag ) {\\r\\n\\r\\n\\t// Support: IE <=9 - 11 only\\r\\n\\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\\r\\n\\tvar ret;\\r\\n\\r\\n\\tif ( typeof context.getElementsByTagName !== \"undefined\" ) {\\r\\n\\t\\tret = context.getElementsByTagName( tag || \"*\" );\\r\\n\\r\\n\\t} else if ( typeof context.querySelectorAll !== \"undefined\" ) {\\r\\n\\t\\tret = context.querySelectorAll( tag || \"*\" );\\r\\n\\r\\n\\t} else {\\r\\n\\t\\tret = [];\\r\\n\\t}\\r\\n\\r\\n\\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\\r\\n\\t\\treturn jQuery.merge( [ context ], ret );\\r\\n\\t}\\r\\n\\r\\n\\treturn ret;\\r\\n}\\r\\n\\r\\n\\r\\n// Mark scripts as having already been evaluated\\r\\nfunction setGlobalEval( elems, refElements ) {\\r\\n\\tvar i = 0,\\r\\n\\t\\tl = elems.length;\\r\\n\\r\\n\\tfor ( ; i < l; i++ ) {\\r\\n\\t\\tdataPriv.set(\\r\\n\\t\\t\\telems[ i ],\\r\\n\\t\\t\\t\"globalEval\",\\r\\n\\t\\t\\t!refElements || dataPriv.get( refElements[ i ], \"globalEval\" )\\r\\n\\t\\t);\\r\\n\\t}\\r\\n}\\r\\n\\r\\n\\r\\nvar rhtml = /<|&#?\\\\w+;/;\\r\\n\\r\\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\\r\\n\\tvar elem, tmp, tag, wrap, attached, j,\\r\\n\\t\\tfragment = context.createDocumentFragment(),\\r\\n\\t\\tnodes = [],\\r\\n\\t\\ti = 0,\\r\\n\\t\\tl = elems.length;\\r\\n\\r\\n\\tfor ( ; i < l; i++ ) {\\r\\n\\t\\telem = elems[ i ];\\r\\n\\r\\n\\t\\tif ( elem || elem === 0 ) {\\r\\n\\r\\n\\t\\t\\t// Add nodes directly\\r\\n\\t\\t\\tif ( toType( elem ) === \"object\" ) {\\r\\n\\r\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\r\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\r\\n\\t\\t\\t\\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\\r\\n\\r\\n\\t\\t\\t// Convert non-html into a text node\\r\\n\\t\\t\\t} else if ( !rhtml.test( elem ) ) {\\r\\n\\t\\t\\t\\tnodes.push( context.createTextNode( elem ) );\\r\\n\\r\\n\\t\\t\\t// Convert html into DOM nodes\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\ttmp = tmp || fragment.appendChild( context.createElement( \"div\" ) );\\r\\n\\r\\n\\t\\t\\t\\t// Deserialize a standard representation\\r\\n\\t\\t\\t\\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\\r\\n\\t\\t\\t\\twrap = wrapMap[ tag ] || wrapMap._default;\\r\\n\\t\\t\\t\\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\\r\\n\\r\\n\\t\\t\\t\\t// Descend through wrappers to the right content\\r\\n\\t\\t\\t\\tj = wrap[ 0 ];\\r\\n\\t\\t\\t\\twhile ( j-- ) {\\r\\n\\t\\t\\t\\t\\ttmp = tmp.lastChild;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\r\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\r\\n\\t\\t\\t\\tjQuery.merge( nodes, tmp.childNodes );\\r\\n\\r\\n\\t\\t\\t\\t// Remember the top-level container\\r\\n\\t\\t\\t\\ttmp = fragment.firstChild;\\r\\n\\r\\n\\t\\t\\t\\t// Ensure the created nodes are orphaned (#12392)\\r\\n\\t\\t\\t\\ttmp.textContent = \"\";\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Remove wrapper from fragment\\r\\n\\tfragment.textContent = \"\";\\r\\n\\r\\n\\ti = 0;\\r\\n\\twhile ( ( elem = nodes[ i++ ] ) ) {\\r\\n\\r\\n\\t\\t// Skip elements already in the context collection (trac-4087)\\r\\n\\t\\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\\r\\n\\t\\t\\tif ( ignored ) {\\r\\n\\t\\t\\t\\tignored.push( elem );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tcontinue;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tattached = isAttached( elem );\\r\\n\\r\\n\\t\\t// Append to fragment\\r\\n\\t\\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\\r\\n\\r\\n\\t\\t// Preserve script evaluation history\\r\\n\\t\\tif ( attached ) {\\r\\n\\t\\t\\tsetGlobalEval( tmp );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Capture executables\\r\\n\\t\\tif ( scripts ) {\\r\\n\\t\\t\\tj = 0;\\r\\n\\t\\t\\twhile ( ( elem = tmp[ j++ ] ) ) {\\r\\n\\t\\t\\t\\tif ( rscriptType.test( elem.type || \"\" ) ) {\\r\\n\\t\\t\\t\\t\\tscripts.push( elem );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn fragment;\\r\\n}\\r\\n\\r\\n\\r\\nvar\\r\\n\\trkeyEvent = /^key/,\\r\\n\\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\\r\\n\\trtypenamespace = /^([^.]*)(?:\\\\.(.+)|)/;\\r\\n\\r\\nfunction returnTrue() {\\r\\n\\treturn true;\\r\\n}\\r\\n\\r\\nfunction returnFalse() {\\r\\n\\treturn false;\\r\\n}\\r\\n\\r\\n// Support: IE <=9 - 11+\\r\\n// focus() and blur() are asynchronous, except when they are no-op.\\r\\n// So expect focus to be synchronous when the element is already active,\\r\\n// and blur to be synchronous when the element is not already active.\\r\\n// (focus and blur are always synchronous in other supported browsers,\\r\\n// this just defines when we can count on it).\\r\\nfunction expectSync( elem, type ) {\\r\\n\\treturn ( elem === safeActiveElement() ) === ( type === \"focus\" );\\r\\n}\\r\\n\\r\\n// Support: IE <=9 only\\r\\n// Accessing document.activeElement can throw unexpectedly\\r\\n// https://bugs.jquery.com/ticket/13393\\r\\nfunction safeActiveElement() {\\r\\n\\ttry {\\r\\n\\t\\treturn document.activeElement;\\r\\n\\t} catch ( err ) { }\\r\\n}\\r\\n\\r\\nfunction on( elem, types, selector, data, fn, one ) {\\r\\n\\tvar origFn, type;\\r\\n\\r\\n\\t// Types can be a map of types/handlers\\r\\n\\tif ( typeof types === \"object\" ) {\\r\\n\\r\\n\\t\\t// ( types-Object, selector, data )\\r\\n\\t\\tif ( typeof selector !== \"string\" ) {\\r\\n\\r\\n\\t\\t\\t// ( types-Object, data )\\r\\n\\t\\t\\tdata = data || selector;\\r\\n\\t\\t\\tselector = undefined;\\r\\n\\t\\t}\\r\\n\\t\\tfor ( type in types ) {\\r\\n\\t\\t\\ton( elem, type, selector, data, types[ type ], one );\\r\\n\\t\\t}\\r\\n\\t\\treturn elem;\\r\\n\\t}\\r\\n\\r\\n\\tif ( data == null && fn == null ) {\\r\\n\\r\\n\\t\\t// ( types, fn )\\r\\n\\t\\tfn = selector;\\r\\n\\t\\tdata = selector = undefined;\\r\\n\\t} else if ( fn == null ) {\\r\\n\\t\\tif ( typeof selector === \"string\" ) {\\r\\n\\r\\n\\t\\t\\t// ( types, selector, fn )\\r\\n\\t\\t\\tfn = data;\\r\\n\\t\\t\\tdata = undefined;\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// ( types, data, fn )\\r\\n\\t\\t\\tfn = data;\\r\\n\\t\\t\\tdata = selector;\\r\\n\\t\\t\\tselector = undefined;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tif ( fn === false ) {\\r\\n\\t\\tfn = returnFalse;\\r\\n\\t} else if ( !fn ) {\\r\\n\\t\\treturn elem;\\r\\n\\t}\\r\\n\\r\\n\\tif ( one === 1 ) {\\r\\n\\t\\torigFn = fn;\\r\\n\\t\\tfn = function( event ) {\\r\\n\\r\\n\\t\\t\\t// Can use an empty set, since event contains the info\\r\\n\\t\\t\\tjQuery().off( event );\\r\\n\\t\\t\\treturn origFn.apply( this, arguments );\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// Use same guid so caller can remove using origFn\\r\\n\\t\\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\\r\\n\\t}\\r\\n\\treturn elem.each( function() {\\r\\n\\t\\tjQuery.event.add( this, types, fn, data, selector );\\r\\n\\t} );\\r\\n}\\r\\n\\r\\n/*\\r\\n * Helper functions for managing events -- not part of the public interface.\\r\\n * Props to Dean Edwards\\' addEvent library for many of the ideas.\\r\\n */\\r\\njQuery.event = {\\r\\n\\r\\n\\tglobal: {},\\r\\n\\r\\n\\tadd: function( elem, types, handler, data, selector ) {\\r\\n\\r\\n\\t\\tvar handleObjIn, eventHandle, tmp,\\r\\n\\t\\t\\tevents, t, handleObj,\\r\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\r\\n\\t\\t\\telemData = dataPriv.get( elem );\\r\\n\\r\\n\\t\\t// Only attach events to objects that accept data\\r\\n\\t\\tif ( !acceptData( elem ) ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Caller can pass in an object of custom data in lieu of the handler\\r\\n\\t\\tif ( handler.handler ) {\\r\\n\\t\\t\\thandleObjIn = handler;\\r\\n\\t\\t\\thandler = handleObjIn.handler;\\r\\n\\t\\t\\tselector = handleObjIn.selector;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Ensure that invalid selectors throw exceptions at attach time\\r\\n\\t\\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\\r\\n\\t\\tif ( selector ) {\\r\\n\\t\\t\\tjQuery.find.matchesSelector( documentElement, selector );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Make sure that the handler has a unique ID, used to find/remove it later\\r\\n\\t\\tif ( !handler.guid ) {\\r\\n\\t\\t\\thandler.guid = jQuery.guid++;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Init the element\\'s event structure and main handler, if this is the first\\r\\n\\t\\tif ( !( events = elemData.events ) ) {\\r\\n\\t\\t\\tevents = elemData.events = Object.create( null );\\r\\n\\t\\t}\\r\\n\\t\\tif ( !( eventHandle = elemData.handle ) ) {\\r\\n\\t\\t\\teventHandle = elemData.handle = function( e ) {\\r\\n\\r\\n\\t\\t\\t\\t// Discard the second event of a jQuery.event.trigger() and\\r\\n\\t\\t\\t\\t// when an event is called after a page has unloaded\\r\\n\\t\\t\\t\\treturn typeof jQuery !== \"undefined\" && jQuery.event.triggered !== e.type ?\\r\\n\\t\\t\\t\\t\\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\\r\\n\\t\\t\\t};\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Handle multiple events separated by a space\\r\\n\\t\\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\\r\\n\\t\\tt = types.length;\\r\\n\\t\\twhile ( t-- ) {\\r\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\r\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\r\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\\r\\n\\r\\n\\t\\t\\t// There *must* be a type, no attaching namespace-only handlers\\r\\n\\t\\t\\tif ( !type ) {\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// If event changes its type, use the special event handlers for the changed type\\r\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\r\\n\\r\\n\\t\\t\\t// If selector defined, determine special event api type, otherwise given type\\r\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\r\\n\\r\\n\\t\\t\\t// Update special based on newly reset type\\r\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\r\\n\\r\\n\\t\\t\\t// handleObj is passed to all event handlers\\r\\n\\t\\t\\thandleObj = jQuery.extend( {\\r\\n\\t\\t\\t\\ttype: type,\\r\\n\\t\\t\\t\\torigType: origType,\\r\\n\\t\\t\\t\\tdata: data,\\r\\n\\t\\t\\t\\thandler: handler,\\r\\n\\t\\t\\t\\tguid: handler.guid,\\r\\n\\t\\t\\t\\tselector: selector,\\r\\n\\t\\t\\t\\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\\r\\n\\t\\t\\t\\tnamespace: namespaces.join( \".\" )\\r\\n\\t\\t\\t}, handleObjIn );\\r\\n\\r\\n\\t\\t\\t// Init the event handler queue if we\\'re the first\\r\\n\\t\\t\\tif ( !( handlers = events[ type ] ) ) {\\r\\n\\t\\t\\t\\thandlers = events[ type ] = [];\\r\\n\\t\\t\\t\\thandlers.delegateCount = 0;\\r\\n\\r\\n\\t\\t\\t\\t// Only use addEventListener if the special events handler returns false\\r\\n\\t\\t\\t\\tif ( !special.setup ||\\r\\n\\t\\t\\t\\t\\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( elem.addEventListener ) {\\r\\n\\t\\t\\t\\t\\t\\telem.addEventListener( type, eventHandle );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( special.add ) {\\r\\n\\t\\t\\t\\tspecial.add.call( elem, handleObj );\\r\\n\\r\\n\\t\\t\\t\\tif ( !handleObj.handler.guid ) {\\r\\n\\t\\t\\t\\t\\thandleObj.handler.guid = handler.guid;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Add to the element\\'s handler list, delegates in front\\r\\n\\t\\t\\tif ( selector ) {\\r\\n\\t\\t\\t\\thandlers.splice( handlers.delegateCount++, 0, handleObj );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\thandlers.push( handleObj );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Keep track of which events have ever been used, for event optimization\\r\\n\\t\\t\\tjQuery.event.global[ type ] = true;\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\t// Detach an event or set of events from an element\\r\\n\\tremove: function( elem, types, handler, selector, mappedTypes ) {\\r\\n\\r\\n\\t\\tvar j, origCount, tmp,\\r\\n\\t\\t\\tevents, t, handleObj,\\r\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\r\\n\\t\\t\\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\\r\\n\\r\\n\\t\\tif ( !elemData || !( events = elemData.events ) ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Once for each type.namespace in types; type may be omitted\\r\\n\\t\\ttypes = ( types || \"\" ).match( rnothtmlwhite ) || [ \"\" ];\\r\\n\\t\\tt = types.length;\\r\\n\\t\\twhile ( t-- ) {\\r\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\r\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\r\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \"\" ).split( \".\" ).sort();\\r\\n\\r\\n\\t\\t\\t// Unbind all events (on this namespace, if provided) for the element\\r\\n\\t\\t\\tif ( !type ) {\\r\\n\\t\\t\\t\\tfor ( type in events ) {\\r\\n\\t\\t\\t\\t\\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\r\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\r\\n\\t\\t\\thandlers = events[ type ] || [];\\r\\n\\t\\t\\ttmp = tmp[ 2 ] &&\\r\\n\\t\\t\\t\\tnew RegExp( \"(^|\\\\\\\\.)\" + namespaces.join( \"\\\\\\\\.(?:.*\\\\\\\\.|)\" ) + \"(\\\\\\\\.|$)\" );\\r\\n\\r\\n\\t\\t\\t// Remove matching events\\r\\n\\t\\t\\torigCount = j = handlers.length;\\r\\n\\t\\t\\twhile ( j-- ) {\\r\\n\\t\\t\\t\\thandleObj = handlers[ j ];\\r\\n\\r\\n\\t\\t\\t\\tif ( ( mappedTypes || origType === handleObj.origType ) &&\\r\\n\\t\\t\\t\\t\\t( !handler || handler.guid === handleObj.guid ) &&\\r\\n\\t\\t\\t\\t\\t( !tmp || tmp.test( handleObj.namespace ) ) &&\\r\\n\\t\\t\\t\\t\\t( !selector || selector === handleObj.selector ||\\r\\n\\t\\t\\t\\t\\t\\tselector === \"**\" && handleObj.selector ) ) {\\r\\n\\t\\t\\t\\t\\thandlers.splice( j, 1 );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( handleObj.selector ) {\\r\\n\\t\\t\\t\\t\\t\\thandlers.delegateCount--;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( special.remove ) {\\r\\n\\t\\t\\t\\t\\t\\tspecial.remove.call( elem, handleObj );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Remove generic event handler if we removed something and no more handlers exist\\r\\n\\t\\t\\t// (avoids potential for endless recursion during removal of special event handlers)\\r\\n\\t\\t\\tif ( origCount && !handlers.length ) {\\r\\n\\t\\t\\t\\tif ( !special.teardown ||\\r\\n\\t\\t\\t\\t\\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, elemData.handle );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tdelete events[ type ];\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Remove data and the expando if it\\'s no longer used\\r\\n\\t\\tif ( jQuery.isEmptyObject( events ) ) {\\r\\n\\t\\t\\tdataPriv.remove( elem, \"handle events\" );\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tdispatch: function( nativeEvent ) {\\r\\n\\r\\n\\t\\tvar i, j, ret, matched, handleObj, handlerQueue,\\r\\n\\t\\t\\targs = new Array( arguments.length ),\\r\\n\\r\\n\\t\\t\\t// Make a writable jQuery.Event from the native event object\\r\\n\\t\\t\\tevent = jQuery.event.fix( nativeEvent ),\\r\\n\\r\\n\\t\\t\\thandlers = (\\r\\n\\t\\t\\t\\t\\tdataPriv.get( this, \"events\" ) || Object.create( null )\\r\\n\\t\\t\\t\\t)[ event.type ] || [],\\r\\n\\t\\t\\tspecial = jQuery.event.special[ event.type ] || {};\\r\\n\\r\\n\\t\\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\\r\\n\\t\\targs[ 0 ] = event;\\r\\n\\r\\n\\t\\tfor ( i = 1; i < arguments.length; i++ ) {\\r\\n\\t\\t\\targs[ i ] = arguments[ i ];\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tevent.delegateTarget = this;\\r\\n\\r\\n\\t\\t// Call the preDispatch hook for the mapped type, and let it bail if desired\\r\\n\\t\\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Determine handlers\\r\\n\\t\\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\\r\\n\\r\\n\\t\\t// Run delegates first; they may want to stop propagation beneath us\\r\\n\\t\\ti = 0;\\r\\n\\t\\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\\r\\n\\t\\t\\tevent.currentTarget = matched.elem;\\r\\n\\r\\n\\t\\t\\tj = 0;\\r\\n\\t\\t\\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\\r\\n\\t\\t\\t\\t!event.isImmediatePropagationStopped() ) {\\r\\n\\r\\n\\t\\t\\t\\t// If the event is namespaced, then each handler is only invoked if it is\\r\\n\\t\\t\\t\\t// specially universal or its namespaces are a superset of the event\\'s.\\r\\n\\t\\t\\t\\tif ( !event.rnamespace || handleObj.namespace === false ||\\r\\n\\t\\t\\t\\t\\tevent.rnamespace.test( handleObj.namespace ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tevent.handleObj = handleObj;\\r\\n\\t\\t\\t\\t\\tevent.data = handleObj.data;\\r\\n\\r\\n\\t\\t\\t\\t\\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\\r\\n\\t\\t\\t\\t\\t\\thandleObj.handler ).apply( matched.elem, args );\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( ret !== undefined ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( ( event.result = ret ) === false ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\r\\n\\t\\t\\t\\t\\t\\t\\tevent.stopPropagation();\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Call the postDispatch hook for the mapped type\\r\\n\\t\\tif ( special.postDispatch ) {\\r\\n\\t\\t\\tspecial.postDispatch.call( this, event );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn event.result;\\r\\n\\t},\\r\\n\\r\\n\\thandlers: function( event, handlers ) {\\r\\n\\t\\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\\r\\n\\t\\t\\thandlerQueue = [],\\r\\n\\t\\t\\tdelegateCount = handlers.delegateCount,\\r\\n\\t\\t\\tcur = event.target;\\r\\n\\r\\n\\t\\t// Find delegate handlers\\r\\n\\t\\tif ( delegateCount &&\\r\\n\\r\\n\\t\\t\\t// Support: IE <=9\\r\\n\\t\\t\\t// Black-hole SVG <use> instance trees (trac-13180)\\r\\n\\t\\t\\tcur.nodeType &&\\r\\n\\r\\n\\t\\t\\t// Support: Firefox <=42\\r\\n\\t\\t\\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\\r\\n\\t\\t\\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\\r\\n\\t\\t\\t// Support: IE 11 only\\r\\n\\t\\t\\t// ...but not arrow key \"clicks\" of radio inputs, which can have `button` -1 (gh-2343)\\r\\n\\t\\t\\t!( event.type === \"click\" && event.button >= 1 ) ) {\\r\\n\\r\\n\\t\\t\\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\\r\\n\\r\\n\\t\\t\\t\\t// Don\\'t check non-elements (#13208)\\r\\n\\t\\t\\t\\t// Don\\'t process clicks on disabled elements (#6911, #8165, #11382, #11764)\\r\\n\\t\\t\\t\\tif ( cur.nodeType === 1 && !( event.type === \"click\" && cur.disabled === true ) ) {\\r\\n\\t\\t\\t\\t\\tmatchedHandlers = [];\\r\\n\\t\\t\\t\\t\\tmatchedSelectors = {};\\r\\n\\t\\t\\t\\t\\tfor ( i = 0; i < delegateCount; i++ ) {\\r\\n\\t\\t\\t\\t\\t\\thandleObj = handlers[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Don\\'t conflict with Object.prototype properties (#13203)\\r\\n\\t\\t\\t\\t\\t\\tsel = handleObj.selector + \" \";\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] === undefined ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tmatchedSelectors[ sel ] = handleObj.needsContext ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery( sel, this ).index( cur ) > -1 :\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.find( sel, this, null, [ cur ] ).length;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tmatchedHandlers.push( handleObj );\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( matchedHandlers.length ) {\\r\\n\\t\\t\\t\\t\\t\\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Add the remaining (directly-bound) handlers\\r\\n\\t\\tcur = this;\\r\\n\\t\\tif ( delegateCount < handlers.length ) {\\r\\n\\t\\t\\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn handlerQueue;\\r\\n\\t},\\r\\n\\r\\n\\taddProp: function( name, hook ) {\\r\\n\\t\\tObject.defineProperty( jQuery.Event.prototype, name, {\\r\\n\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\tconfigurable: true,\\r\\n\\r\\n\\t\\t\\tget: isFunction( hook ) ?\\r\\n\\t\\t\\t\\tfunction() {\\r\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn hook( this.originalEvent );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} :\\r\\n\\t\\t\\t\\tfunction() {\\r\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn this.originalEvent[ name ];\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tset: function( value ) {\\r\\n\\t\\t\\t\\tObject.defineProperty( this, name, {\\r\\n\\t\\t\\t\\t\\tenumerable: true,\\r\\n\\t\\t\\t\\t\\tconfigurable: true,\\r\\n\\t\\t\\t\\t\\twritable: true,\\r\\n\\t\\t\\t\\t\\tvalue: value\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\tfix: function( originalEvent ) {\\r\\n\\t\\treturn originalEvent[ jQuery.expando ] ?\\r\\n\\t\\t\\toriginalEvent :\\r\\n\\t\\t\\tnew jQuery.Event( originalEvent );\\r\\n\\t},\\r\\n\\r\\n\\tspecial: {\\r\\n\\t\\tload: {\\r\\n\\r\\n\\t\\t\\t// Prevent triggered image.load events from bubbling to window.load\\r\\n\\t\\t\\tnoBubble: true\\r\\n\\t\\t},\\r\\n\\t\\tclick: {\\r\\n\\r\\n\\t\\t\\t// Utilize native event to ensure correct state for checkable inputs\\r\\n\\t\\t\\tsetup: function( data ) {\\r\\n\\r\\n\\t\\t\\t\\t// For mutual compressibility with _default, replace `this` access with a local var.\\r\\n\\t\\t\\t\\t// `|| data` is dead code meant only to preserve the variable through minification.\\r\\n\\t\\t\\t\\tvar el = this || data;\\r\\n\\r\\n\\t\\t\\t\\t// Claim the first handler\\r\\n\\t\\t\\t\\tif ( rcheckableType.test( el.type ) &&\\r\\n\\t\\t\\t\\t\\tel.click && nodeName( el, \"input\" ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// dataPriv.set( el, \"click\", ... )\\r\\n\\t\\t\\t\\t\\tleverageNative( el, \"click\", returnTrue );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Return false to allow normal processing in the caller\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\ttrigger: function( data ) {\\r\\n\\r\\n\\t\\t\\t\\t// For mutual compressibility with _default, replace `this` access with a local var.\\r\\n\\t\\t\\t\\t// `|| data` is dead code meant only to preserve the variable through minification.\\r\\n\\t\\t\\t\\tvar el = this || data;\\r\\n\\r\\n\\t\\t\\t\\t// Force setup before triggering a click\\r\\n\\t\\t\\t\\tif ( rcheckableType.test( el.type ) &&\\r\\n\\t\\t\\t\\t\\tel.click && nodeName( el, \"input\" ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\tleverageNative( el, \"click\" );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Return non-false to allow normal event-path propagation\\r\\n\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t// For cross-browser consistency, suppress native .click() on links\\r\\n\\t\\t\\t// Also prevent it if we\\'re currently inside a leveraged native-event stack\\r\\n\\t\\t\\t_default: function( event ) {\\r\\n\\t\\t\\t\\tvar target = event.target;\\r\\n\\t\\t\\t\\treturn rcheckableType.test( target.type ) &&\\r\\n\\t\\t\\t\\t\\ttarget.click && nodeName( target, \"input\" ) &&\\r\\n\\t\\t\\t\\t\\tdataPriv.get( target, \"click\" ) ||\\r\\n\\t\\t\\t\\t\\tnodeName( target, \"a\" );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tbeforeunload: {\\r\\n\\t\\t\\tpostDispatch: function( event ) {\\r\\n\\r\\n\\t\\t\\t\\t// Support: Firefox 20+\\r\\n\\t\\t\\t\\t// Firefox doesn\\'t alert if the returnValue field is not set.\\r\\n\\t\\t\\t\\tif ( event.result !== undefined && event.originalEvent ) {\\r\\n\\t\\t\\t\\t\\tevent.originalEvent.returnValue = event.result;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n};\\r\\n\\r\\n// Ensure the presence of an event listener that handles manually-triggered\\r\\n// synthetic events by interrupting progress until reinvoked in response to\\r\\n// *native* events that it fires directly, ensuring that state changes have\\r\\n// already occurred before other listeners are invoked.\\r\\nfunction leverageNative( el, type, expectSync ) {\\r\\n\\r\\n\\t// Missing expectSync indicates a trigger call, which must force setup through jQuery.event.add\\r\\n\\tif ( !expectSync ) {\\r\\n\\t\\tif ( dataPriv.get( el, type ) === undefined ) {\\r\\n\\t\\t\\tjQuery.event.add( el, type, returnTrue );\\r\\n\\t\\t}\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\r\\n\\t// Register the controller as a special universal handler for all event namespaces\\r\\n\\tdataPriv.set( el, type, false );\\r\\n\\tjQuery.event.add( el, type, {\\r\\n\\t\\tnamespace: false,\\r\\n\\t\\thandler: function( event ) {\\r\\n\\t\\t\\tvar notAsync, result,\\r\\n\\t\\t\\t\\tsaved = dataPriv.get( this, type );\\r\\n\\r\\n\\t\\t\\tif ( ( event.isTrigger & 1 ) && this[ type ] ) {\\r\\n\\r\\n\\t\\t\\t\\t// Interrupt processing of the outer synthetic .trigger()ed event\\r\\n\\t\\t\\t\\t// Saved data should be false in such cases, but might be a leftover capture object\\r\\n\\t\\t\\t\\t// from an async native handler (gh-4350)\\r\\n\\t\\t\\t\\tif ( !saved.length ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Store arguments for use when handling the inner native event\\r\\n\\t\\t\\t\\t\\t// There will always be at least one argument (an event object), so this array\\r\\n\\t\\t\\t\\t\\t// will not be confused with a leftover capture object.\\r\\n\\t\\t\\t\\t\\tsaved = slice.call( arguments );\\r\\n\\t\\t\\t\\t\\tdataPriv.set( this, type, saved );\\r\\n\\r\\n\\t\\t\\t\\t\\t// Trigger the native event and capture its result\\r\\n\\t\\t\\t\\t\\t// Support: IE <=9 - 11+\\r\\n\\t\\t\\t\\t\\t// focus() and blur() are asynchronous\\r\\n\\t\\t\\t\\t\\tnotAsync = expectSync( this, type );\\r\\n\\t\\t\\t\\t\\tthis[ type ]();\\r\\n\\t\\t\\t\\t\\tresult = dataPriv.get( this, type );\\r\\n\\t\\t\\t\\t\\tif ( saved !== result || notAsync ) {\\r\\n\\t\\t\\t\\t\\t\\tdataPriv.set( this, type, false );\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\tresult = {};\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( saved !== result ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Cancel the outer synthetic event\\r\\n\\t\\t\\t\\t\\t\\tevent.stopImmediatePropagation();\\r\\n\\t\\t\\t\\t\\t\\tevent.preventDefault();\\r\\n\\t\\t\\t\\t\\t\\treturn result.value;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// If this is an inner synthetic event for an event with a bubbling surrogate\\r\\n\\t\\t\\t\\t// (focus or blur), assume that the surrogate already propagated from triggering the\\r\\n\\t\\t\\t\\t// native event and prevent that from happening again here.\\r\\n\\t\\t\\t\\t// This technically gets the ordering wrong w.r.t. to `.trigger()` (in which the\\r\\n\\t\\t\\t\\t// bubbling surrogate propagates *after* the non-bubbling base), but that seems\\r\\n\\t\\t\\t\\t// less bad than duplication.\\r\\n\\t\\t\\t\\t} else if ( ( jQuery.event.special[ type ] || {} ).delegateType ) {\\r\\n\\t\\t\\t\\t\\tevent.stopPropagation();\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// If this is a native event triggered above, everything is now in order\\r\\n\\t\\t\\t// Fire an inner synthetic event with the original arguments\\r\\n\\t\\t\\t} else if ( saved.length ) {\\r\\n\\r\\n\\t\\t\\t\\t// ...and capture the result\\r\\n\\t\\t\\t\\tdataPriv.set( this, type, {\\r\\n\\t\\t\\t\\t\\tvalue: jQuery.event.trigger(\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Support: IE <=9 - 11+\\r\\n\\t\\t\\t\\t\\t\\t// Extend with the prototype to reset the above stopImmediatePropagation()\\r\\n\\t\\t\\t\\t\\t\\tjQuery.extend( saved[ 0 ], jQuery.Event.prototype ),\\r\\n\\t\\t\\t\\t\\t\\tsaved.slice( 1 ),\\r\\n\\t\\t\\t\\t\\t\\tthis\\r\\n\\t\\t\\t\\t\\t)\\r\\n\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t\\t// Abort handling of the native event\\r\\n\\t\\t\\t\\tevent.stopImmediatePropagation();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n}\\r\\n\\r\\njQuery.removeEvent = function( elem, type, handle ) {\\r\\n\\r\\n\\t// This \"if\" is needed for plain objects\\r\\n\\tif ( elem.removeEventListener ) {\\r\\n\\t\\telem.removeEventListener( type, handle );\\r\\n\\t}\\r\\n};\\r\\n\\r\\njQuery.Event = function( src, props ) {\\r\\n\\r\\n\\t// Allow instantiation without the \\'new\\' keyword\\r\\n\\tif ( !( this instanceof jQuery.Event ) ) {\\r\\n\\t\\treturn new jQuery.Event( src, props );\\r\\n\\t}\\r\\n\\r\\n\\t// Event object\\r\\n\\tif ( src && src.type ) {\\r\\n\\t\\tthis.originalEvent = src;\\r\\n\\t\\tthis.type = src.type;\\r\\n\\r\\n\\t\\t// Events bubbling up the document may have been marked as prevented\\r\\n\\t\\t// by a handler lower down the tree; reflect the correct value.\\r\\n\\t\\tthis.isDefaultPrevented = src.defaultPrevented ||\\r\\n\\t\\t\\t\\tsrc.defaultPrevented === undefined &&\\r\\n\\r\\n\\t\\t\\t\\t// Support: Android <=2.3 only\\r\\n\\t\\t\\t\\tsrc.returnValue === false ?\\r\\n\\t\\t\\treturnTrue :\\r\\n\\t\\t\\treturnFalse;\\r\\n\\r\\n\\t\\t// Create target properties\\r\\n\\t\\t// Support: Safari <=6 - 7 only\\r\\n\\t\\t// Target should not be a text node (#504, #13143)\\r\\n\\t\\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\\r\\n\\t\\t\\tsrc.target.parentNode :\\r\\n\\t\\t\\tsrc.target;\\r\\n\\r\\n\\t\\tthis.currentTarget = src.currentTarget;\\r\\n\\t\\tthis.relatedTarget = src.relatedTarget;\\r\\n\\r\\n\\t// Event type\\r\\n\\t} else {\\r\\n\\t\\tthis.type = src;\\r\\n\\t}\\r\\n\\r\\n\\t// Put explicitly provided properties onto the event object\\r\\n\\tif ( props ) {\\r\\n\\t\\tjQuery.extend( this, props );\\r\\n\\t}\\r\\n\\r\\n\\t// Create a timestamp if incoming event doesn\\'t have one\\r\\n\\tthis.timeStamp = src && src.timeStamp || Date.now();\\r\\n\\r\\n\\t// Mark it as fixed\\r\\n\\tthis[ jQuery.expando ] = true;\\r\\n};\\r\\n\\r\\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\\r\\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\\r\\njQuery.Event.prototype = {\\r\\n\\tconstructor: jQuery.Event,\\r\\n\\tisDefaultPrevented: returnFalse,\\r\\n\\tisPropagationStopped: returnFalse,\\r\\n\\tisImmediatePropagationStopped: returnFalse,\\r\\n\\tisSimulated: false,\\r\\n\\r\\n\\tpreventDefault: function() {\\r\\n\\t\\tvar e = this.originalEvent;\\r\\n\\r\\n\\t\\tthis.isDefaultPrevented = returnTrue;\\r\\n\\r\\n\\t\\tif ( e && !this.isSimulated ) {\\r\\n\\t\\t\\te.preventDefault();\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tstopPropagation: function() {\\r\\n\\t\\tvar e = this.originalEvent;\\r\\n\\r\\n\\t\\tthis.isPropagationStopped = returnTrue;\\r\\n\\r\\n\\t\\tif ( e && !this.isSimulated ) {\\r\\n\\t\\t\\te.stopPropagation();\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\tstopImmediatePropagation: function() {\\r\\n\\t\\tvar e = this.originalEvent;\\r\\n\\r\\n\\t\\tthis.isImmediatePropagationStopped = returnTrue;\\r\\n\\r\\n\\t\\tif ( e && !this.isSimulated ) {\\r\\n\\t\\t\\te.stopImmediatePropagation();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tthis.stopPropagation();\\r\\n\\t}\\r\\n};\\r\\n\\r\\n// Includes all common event props including KeyEvent and MouseEvent specific props\\r\\njQuery.each( {\\r\\n\\taltKey: true,\\r\\n\\tbubbles: true,\\r\\n\\tcancelable: true,\\r\\n\\tchangedTouches: true,\\r\\n\\tctrlKey: true,\\r\\n\\tdetail: true,\\r\\n\\teventPhase: true,\\r\\n\\tmetaKey: true,\\r\\n\\tpageX: true,\\r\\n\\tpageY: true,\\r\\n\\tshiftKey: true,\\r\\n\\tview: true,\\r\\n\\t\"char\": true,\\r\\n\\tcode: true,\\r\\n\\tcharCode: true,\\r\\n\\tkey: true,\\r\\n\\tkeyCode: true,\\r\\n\\tbutton: true,\\r\\n\\tbuttons: true,\\r\\n\\tclientX: true,\\r\\n\\tclientY: true,\\r\\n\\toffsetX: true,\\r\\n\\toffsetY: true,\\r\\n\\tpointerId: true,\\r\\n\\tpointerType: true,\\r\\n\\tscreenX: true,\\r\\n\\tscreenY: true,\\r\\n\\ttargetTouches: true,\\r\\n\\ttoElement: true,\\r\\n\\ttouches: true,\\r\\n\\r\\n\\twhich: function( event ) {\\r\\n\\t\\tvar button = event.button;\\r\\n\\r\\n\\t\\t// Add which for key events\\r\\n\\t\\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\\r\\n\\t\\t\\treturn event.charCode != null ? event.charCode : event.keyCode;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Add which for click: 1 === left; 2 === middle; 3 === right\\r\\n\\t\\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\\r\\n\\t\\t\\tif ( button & 1 ) {\\r\\n\\t\\t\\t\\treturn 1;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( button & 2 ) {\\r\\n\\t\\t\\t\\treturn 3;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( button & 4 ) {\\r\\n\\t\\t\\t\\treturn 2;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn event.which;\\r\\n\\t}\\r\\n}, jQuery.event.addProp );\\r\\n\\r\\njQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( type, delegateType ) {\\r\\n\\tjQuery.event.special[ type ] = {\\r\\n\\r\\n\\t\\t// Utilize native event if possible so blur/focus sequence is correct\\r\\n\\t\\tsetup: function() {\\r\\n\\r\\n\\t\\t\\t// Claim the first handler\\r\\n\\t\\t\\t// dataPriv.set( this, \"focus\", ... )\\r\\n\\t\\t\\t// dataPriv.set( this, \"blur\", ... )\\r\\n\\t\\t\\tleverageNative( this, type, expectSync );\\r\\n\\r\\n\\t\\t\\t// Return false to allow normal processing in the caller\\r\\n\\t\\t\\treturn false;\\r\\n\\t\\t},\\r\\n\\t\\ttrigger: function() {\\r\\n\\r\\n\\t\\t\\t// Force setup before trigger\\r\\n\\t\\t\\tleverageNative( this, type );\\r\\n\\r\\n\\t\\t\\t// Return non-false to allow normal event-path propagation\\r\\n\\t\\t\\treturn true;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tdelegateType: delegateType\\r\\n\\t};\\r\\n} );\\r\\n\\r\\n// Create mouseenter/leave events using mouseover/out and event-time checks\\r\\n// so that event delegation works in jQuery.\\r\\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\\r\\n//\\r\\n// Support: Safari 7 only\\r\\n// Safari sends mouseenter too often; see:\\r\\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\\r\\n// for the description of the bug (it existed in older Chrome versions as well).\\r\\njQuery.each( {\\r\\n\\tmouseenter: \"mouseover\",\\r\\n\\tmouseleave: \"mouseout\",\\r\\n\\tpointerenter: \"pointerover\",\\r\\n\\tpointerleave: \"pointerout\"\\r\\n}, function( orig, fix ) {\\r\\n\\tjQuery.event.special[ orig ] = {\\r\\n\\t\\tdelegateType: fix,\\r\\n\\t\\tbindType: fix,\\r\\n\\r\\n\\t\\thandle: function( event ) {\\r\\n\\t\\t\\tvar ret,\\r\\n\\t\\t\\t\\ttarget = this,\\r\\n\\t\\t\\t\\trelated = event.relatedTarget,\\r\\n\\t\\t\\t\\thandleObj = event.handleObj;\\r\\n\\r\\n\\t\\t\\t// For mouseenter/leave call the handler if related is outside the target.\\r\\n\\t\\t\\t// NB: No relatedTarget if the mouse left/entered the browser window\\r\\n\\t\\t\\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\\r\\n\\t\\t\\t\\tevent.type = handleObj.origType;\\r\\n\\t\\t\\t\\tret = handleObj.handler.apply( this, arguments );\\r\\n\\t\\t\\t\\tevent.type = fix;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn ret;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n} );\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\r\\n\\ton: function( types, selector, data, fn ) {\\r\\n\\t\\treturn on( this, types, selector, data, fn );\\r\\n\\t},\\r\\n\\tone: function( types, selector, data, fn ) {\\r\\n\\t\\treturn on( this, types, selector, data, fn, 1 );\\r\\n\\t},\\r\\n\\toff: function( types, selector, fn ) {\\r\\n\\t\\tvar handleObj, type;\\r\\n\\t\\tif ( types && types.preventDefault && types.handleObj ) {\\r\\n\\r\\n\\t\\t\\t// ( event )  dispatched jQuery.Event\\r\\n\\t\\t\\thandleObj = types.handleObj;\\r\\n\\t\\t\\tjQuery( types.delegateTarget ).off(\\r\\n\\t\\t\\t\\thandleObj.namespace ?\\r\\n\\t\\t\\t\\t\\thandleObj.origType + \".\" + handleObj.namespace :\\r\\n\\t\\t\\t\\t\\thandleObj.origType,\\r\\n\\t\\t\\t\\thandleObj.selector,\\r\\n\\t\\t\\t\\thandleObj.handler\\r\\n\\t\\t\\t);\\r\\n\\t\\t\\treturn this;\\r\\n\\t\\t}\\r\\n\\t\\tif ( typeof types === \"object\" ) {\\r\\n\\r\\n\\t\\t\\t// ( types-object [, selector] )\\r\\n\\t\\t\\tfor ( type in types ) {\\r\\n\\t\\t\\t\\tthis.off( type, selector, types[ type ] );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn this;\\r\\n\\t\\t}\\r\\n\\t\\tif ( selector === false || typeof selector === \"function\" ) {\\r\\n\\r\\n\\t\\t\\t// ( types [, fn] )\\r\\n\\t\\t\\tfn = selector;\\r\\n\\t\\t\\tselector = undefined;\\r\\n\\t\\t}\\r\\n\\t\\tif ( fn === false ) {\\r\\n\\t\\t\\tfn = returnFalse;\\r\\n\\t\\t}\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tjQuery.event.remove( this, types, fn, selector );\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\nvar\\r\\n\\r\\n\\t// Support: IE <=10 - 11, Edge 12 - 13 only\\r\\n\\t// In IE/Edge using regex groups here causes severe slowdowns.\\r\\n\\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\\r\\n\\trnoInnerhtml = /<script|<style|<link/i,\\r\\n\\r\\n\\t// checked=\"checked\" or checked\\r\\n\\trchecked = /checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,\\r\\n\\trcleanScript = /^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g;\\r\\n\\r\\n// Prefer a tbody over its parent table for containing new rows\\r\\nfunction manipulationTarget( elem, content ) {\\r\\n\\tif ( nodeName( elem, \"table\" ) &&\\r\\n\\t\\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ) {\\r\\n\\r\\n\\t\\treturn jQuery( elem ).children( \"tbody\" )[ 0 ] || elem;\\r\\n\\t}\\r\\n\\r\\n\\treturn elem;\\r\\n}\\r\\n\\r\\n// Replace/restore the type attribute of script elements for safe DOM manipulation\\r\\nfunction disableScript( elem ) {\\r\\n\\telem.type = ( elem.getAttribute( \"type\" ) !== null ) + \"/\" + elem.type;\\r\\n\\treturn elem;\\r\\n}\\r\\nfunction restoreScript( elem ) {\\r\\n\\tif ( ( elem.type || \"\" ).slice( 0, 5 ) === \"true/\" ) {\\r\\n\\t\\telem.type = elem.type.slice( 5 );\\r\\n\\t} else {\\r\\n\\t\\telem.removeAttribute( \"type\" );\\r\\n\\t}\\r\\n\\r\\n\\treturn elem;\\r\\n}\\r\\n\\r\\nfunction cloneCopyEvent( src, dest ) {\\r\\n\\tvar i, l, type, pdataOld, udataOld, udataCur, events;\\r\\n\\r\\n\\tif ( dest.nodeType !== 1 ) {\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\r\\n\\t// 1. Copy private data: events, handlers, etc.\\r\\n\\tif ( dataPriv.hasData( src ) ) {\\r\\n\\t\\tpdataOld = dataPriv.get( src );\\r\\n\\t\\tevents = pdataOld.events;\\r\\n\\r\\n\\t\\tif ( events ) {\\r\\n\\t\\t\\tdataPriv.remove( dest, \"handle events\" );\\r\\n\\r\\n\\t\\t\\tfor ( type in events ) {\\r\\n\\t\\t\\t\\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\\r\\n\\t\\t\\t\\t\\tjQuery.event.add( dest, type, events[ type ][ i ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// 2. Copy user data\\r\\n\\tif ( dataUser.hasData( src ) ) {\\r\\n\\t\\tudataOld = dataUser.access( src );\\r\\n\\t\\tudataCur = jQuery.extend( {}, udataOld );\\r\\n\\r\\n\\t\\tdataUser.set( dest, udataCur );\\r\\n\\t}\\r\\n}\\r\\n\\r\\n// Fix IE bugs, see support tests\\r\\nfunction fixInput( src, dest ) {\\r\\n\\tvar nodeName = dest.nodeName.toLowerCase();\\r\\n\\r\\n\\t// Fails to persist the checked state of a cloned checkbox or radio button.\\r\\n\\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\\r\\n\\t\\tdest.checked = src.checked;\\r\\n\\r\\n\\t// Fails to return the selected option to the default selected state when cloning options\\r\\n\\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\\r\\n\\t\\tdest.defaultValue = src.defaultValue;\\r\\n\\t}\\r\\n}\\r\\n\\r\\nfunction domManip( collection, args, callback, ignored ) {\\r\\n\\r\\n\\t// Flatten any nested arrays\\r\\n\\targs = flat( args );\\r\\n\\r\\n\\tvar fragment, first, scripts, hasScripts, node, doc,\\r\\n\\t\\ti = 0,\\r\\n\\t\\tl = collection.length,\\r\\n\\t\\tiNoClone = l - 1,\\r\\n\\t\\tvalue = args[ 0 ],\\r\\n\\t\\tvalueIsFunction = isFunction( value );\\r\\n\\r\\n\\t// We can\\'t cloneNode fragments that contain checked, in WebKit\\r\\n\\tif ( valueIsFunction ||\\r\\n\\t\\t\\t( l > 1 && typeof value === \"string\" &&\\r\\n\\t\\t\\t\\t!support.checkClone && rchecked.test( value ) ) ) {\\r\\n\\t\\treturn collection.each( function( index ) {\\r\\n\\t\\t\\tvar self = collection.eq( index );\\r\\n\\t\\t\\tif ( valueIsFunction ) {\\r\\n\\t\\t\\t\\targs[ 0 ] = value.call( this, index, self.html() );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tdomManip( self, args, callback, ignored );\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n\\r\\n\\tif ( l ) {\\r\\n\\t\\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\\r\\n\\t\\tfirst = fragment.firstChild;\\r\\n\\r\\n\\t\\tif ( fragment.childNodes.length === 1 ) {\\r\\n\\t\\t\\tfragment = first;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Require either new content or an interest in ignored elements to invoke the callback\\r\\n\\t\\tif ( first || ignored ) {\\r\\n\\t\\t\\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\\r\\n\\t\\t\\thasScripts = scripts.length;\\r\\n\\r\\n\\t\\t\\t// Use the original fragment for the last item\\r\\n\\t\\t\\t// instead of the first because it can end up\\r\\n\\t\\t\\t// being emptied incorrectly in certain situations (#8070).\\r\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\r\\n\\t\\t\\t\\tnode = fragment;\\r\\n\\r\\n\\t\\t\\t\\tif ( i !== iNoClone ) {\\r\\n\\t\\t\\t\\t\\tnode = jQuery.clone( node, true, true );\\r\\n\\r\\n\\t\\t\\t\\t\\t// Keep references to cloned scripts for later restoration\\r\\n\\t\\t\\t\\t\\tif ( hasScripts ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\r\\n\\t\\t\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\r\\n\\t\\t\\t\\t\\t\\tjQuery.merge( scripts, getAll( node, \"script\" ) );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tcallback.call( collection[ i ], node, i );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( hasScripts ) {\\r\\n\\t\\t\\t\\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\\r\\n\\r\\n\\t\\t\\t\\t// Reenable scripts\\r\\n\\t\\t\\t\\tjQuery.map( scripts, restoreScript );\\r\\n\\r\\n\\t\\t\\t\\t// Evaluate executable scripts on first document insertion\\r\\n\\t\\t\\t\\tfor ( i = 0; i < hasScripts; i++ ) {\\r\\n\\t\\t\\t\\t\\tnode = scripts[ i ];\\r\\n\\t\\t\\t\\t\\tif ( rscriptType.test( node.type || \"\" ) &&\\r\\n\\t\\t\\t\\t\\t\\t!dataPriv.access( node, \"globalEval\" ) &&\\r\\n\\t\\t\\t\\t\\t\\tjQuery.contains( doc, node ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\tif ( node.src && ( node.type || \"\" ).toLowerCase()  !== \"module\" ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Optional AJAX dependency, but won\\'t run scripts if not present\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery._evalUrl && !node.noModule ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery._evalUrl( node.src, {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnonce: node.nonce || node.getAttribute( \"nonce\" )\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}, doc );\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\tDOMEval( node.textContent.replace( rcleanScript, \"\" ), node, doc );\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn collection;\\r\\n}\\r\\n\\r\\nfunction remove( elem, selector, keepData ) {\\r\\n\\tvar node,\\r\\n\\t\\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\\r\\n\\t\\ti = 0;\\r\\n\\r\\n\\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\\r\\n\\t\\tif ( !keepData && node.nodeType === 1 ) {\\r\\n\\t\\t\\tjQuery.cleanData( getAll( node ) );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( node.parentNode ) {\\r\\n\\t\\t\\tif ( keepData && isAttached( node ) ) {\\r\\n\\t\\t\\t\\tsetGlobalEval( getAll( node, \"script\" ) );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tnode.parentNode.removeChild( node );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn elem;\\r\\n}\\r\\n\\r\\njQuery.extend( {\\r\\n\\thtmlPrefilter: function( html ) {\\r\\n\\t\\treturn html;\\r\\n\\t},\\r\\n\\r\\n\\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\\r\\n\\t\\tvar i, l, srcElements, destElements,\\r\\n\\t\\t\\tclone = elem.cloneNode( true ),\\r\\n\\t\\t\\tinPage = isAttached( elem );\\r\\n\\r\\n\\t\\t// Fix IE cloning issues\\r\\n\\t\\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\\r\\n\\t\\t\\t\\t!jQuery.isXMLDoc( elem ) ) {\\r\\n\\r\\n\\t\\t\\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\\r\\n\\t\\t\\tdestElements = getAll( clone );\\r\\n\\t\\t\\tsrcElements = getAll( elem );\\r\\n\\r\\n\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\r\\n\\t\\t\\t\\tfixInput( srcElements[ i ], destElements[ i ] );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Copy the events from the original to the clone\\r\\n\\t\\tif ( dataAndEvents ) {\\r\\n\\t\\t\\tif ( deepDataAndEvents ) {\\r\\n\\t\\t\\t\\tsrcElements = srcElements || getAll( elem );\\r\\n\\t\\t\\t\\tdestElements = destElements || getAll( clone );\\r\\n\\r\\n\\t\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\r\\n\\t\\t\\t\\t\\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tcloneCopyEvent( elem, clone );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Preserve script evaluation history\\r\\n\\t\\tdestElements = getAll( clone, \"script\" );\\r\\n\\t\\tif ( destElements.length > 0 ) {\\r\\n\\t\\t\\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Return the cloned set\\r\\n\\t\\treturn clone;\\r\\n\\t},\\r\\n\\r\\n\\tcleanData: function( elems ) {\\r\\n\\t\\tvar data, elem, type,\\r\\n\\t\\t\\tspecial = jQuery.event.special,\\r\\n\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\\r\\n\\t\\t\\tif ( acceptData( elem ) ) {\\r\\n\\t\\t\\t\\tif ( ( data = elem[ dataPriv.expando ] ) ) {\\r\\n\\t\\t\\t\\t\\tif ( data.events ) {\\r\\n\\t\\t\\t\\t\\t\\tfor ( type in data.events ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( special[ type ] ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.event.remove( elem, type );\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// This is a shortcut to avoid jQuery.event.remove\\'s overhead\\r\\n\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, data.handle );\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\r\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\r\\n\\t\\t\\t\\t\\telem[ dataPriv.expando ] = undefined;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif ( elem[ dataUser.expando ] ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\r\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\r\\n\\t\\t\\t\\t\\telem[ dataUser.expando ] = undefined;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tdetach: function( selector ) {\\r\\n\\t\\treturn remove( this, selector, true );\\r\\n\\t},\\r\\n\\r\\n\\tremove: function( selector ) {\\r\\n\\t\\treturn remove( this, selector );\\r\\n\\t},\\r\\n\\r\\n\\ttext: function( value ) {\\r\\n\\t\\treturn access( this, function( value ) {\\r\\n\\t\\t\\treturn value === undefined ?\\r\\n\\t\\t\\t\\tjQuery.text( this ) :\\r\\n\\t\\t\\t\\tthis.empty().each( function() {\\r\\n\\t\\t\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\r\\n\\t\\t\\t\\t\\t\\tthis.textContent = value;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t}, null, value, arguments.length );\\r\\n\\t},\\r\\n\\r\\n\\tappend: function() {\\r\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\r\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\r\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\r\\n\\t\\t\\t\\ttarget.appendChild( elem );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\tprepend: function() {\\r\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\r\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\r\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\r\\n\\t\\t\\t\\ttarget.insertBefore( elem, target.firstChild );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\tbefore: function() {\\r\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\r\\n\\t\\t\\tif ( this.parentNode ) {\\r\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\tafter: function() {\\r\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\r\\n\\t\\t\\tif ( this.parentNode ) {\\r\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this.nextSibling );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\tempty: function() {\\r\\n\\t\\tvar elem,\\r\\n\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\\r\\n\\t\\t\\tif ( elem.nodeType === 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t// Prevent memory leaks\\r\\n\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\r\\n\\r\\n\\t\\t\\t\\t// Remove any remaining nodes\\r\\n\\t\\t\\t\\telem.textContent = \"\";\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\t},\\r\\n\\r\\n\\tclone: function( dataAndEvents, deepDataAndEvents ) {\\r\\n\\t\\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\\r\\n\\t\\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\\r\\n\\r\\n\\t\\treturn this.map( function() {\\r\\n\\t\\t\\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\thtml: function( value ) {\\r\\n\\t\\treturn access( this, function( value ) {\\r\\n\\t\\t\\tvar elem = this[ 0 ] || {},\\r\\n\\t\\t\\t\\ti = 0,\\r\\n\\t\\t\\t\\tl = this.length;\\r\\n\\r\\n\\t\\t\\tif ( value === undefined && elem.nodeType === 1 ) {\\r\\n\\t\\t\\t\\treturn elem.innerHTML;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// See if we can take a shortcut and just use innerHTML\\r\\n\\t\\t\\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\\r\\n\\t\\t\\t\\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\\r\\n\\r\\n\\t\\t\\t\\tvalue = jQuery.htmlPrefilter( value );\\r\\n\\r\\n\\t\\t\\t\\ttry {\\r\\n\\t\\t\\t\\t\\tfor ( ; i < l; i++ ) {\\r\\n\\t\\t\\t\\t\\t\\telem = this[ i ] || {};\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Remove element nodes and prevent memory leaks\\r\\n\\t\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\r\\n\\t\\t\\t\\t\\t\\t\\telem.innerHTML = value;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\telem = 0;\\r\\n\\r\\n\\t\\t\\t\\t// If using innerHTML throws an exception, use the fallback method\\r\\n\\t\\t\\t\\t} catch ( e ) {}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( elem ) {\\r\\n\\t\\t\\t\\tthis.empty().append( value );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}, null, value, arguments.length );\\r\\n\\t},\\r\\n\\r\\n\\treplaceWith: function() {\\r\\n\\t\\tvar ignored = [];\\r\\n\\r\\n\\t\\t// Make the changes, replacing each non-ignored context element with the new content\\r\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\r\\n\\t\\t\\tvar parent = this.parentNode;\\r\\n\\r\\n\\t\\t\\tif ( jQuery.inArray( this, ignored ) < 0 ) {\\r\\n\\t\\t\\t\\tjQuery.cleanData( getAll( this ) );\\r\\n\\t\\t\\t\\tif ( parent ) {\\r\\n\\t\\t\\t\\t\\tparent.replaceChild( elem, this );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t// Force callback invocation\\r\\n\\t\\t}, ignored );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.each( {\\r\\n\\tappendTo: \"append\",\\r\\n\\tprependTo: \"prepend\",\\r\\n\\tinsertBefore: \"before\",\\r\\n\\tinsertAfter: \"after\",\\r\\n\\treplaceAll: \"replaceWith\"\\r\\n}, function( name, original ) {\\r\\n\\tjQuery.fn[ name ] = function( selector ) {\\r\\n\\t\\tvar elems,\\r\\n\\t\\t\\tret = [],\\r\\n\\t\\t\\tinsert = jQuery( selector ),\\r\\n\\t\\t\\tlast = insert.length - 1,\\r\\n\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\tfor ( ; i <= last; i++ ) {\\r\\n\\t\\t\\telems = i === last ? this : this.clone( true );\\r\\n\\t\\t\\tjQuery( insert[ i ] )[ original ]( elems );\\r\\n\\r\\n\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\r\\n\\t\\t\\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\\r\\n\\t\\t\\tpush.apply( ret, elems.get() );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.pushStack( ret );\\r\\n\\t};\\r\\n} );\\r\\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\\r\\n\\r\\nvar getStyles = function( elem ) {\\r\\n\\r\\n\\t\\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\\r\\n\\t\\t// IE throws on elements created in popups\\r\\n\\t\\t// FF meanwhile throws on frame elements through \"defaultView.getComputedStyle\"\\r\\n\\t\\tvar view = elem.ownerDocument.defaultView;\\r\\n\\r\\n\\t\\tif ( !view || !view.opener ) {\\r\\n\\t\\t\\tview = window;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn view.getComputedStyle( elem );\\r\\n\\t};\\r\\n\\r\\nvar swap = function( elem, options, callback ) {\\r\\n\\tvar ret, name,\\r\\n\\t\\told = {};\\r\\n\\r\\n\\t// Remember the old values, and insert the new ones\\r\\n\\tfor ( name in options ) {\\r\\n\\t\\told[ name ] = elem.style[ name ];\\r\\n\\t\\telem.style[ name ] = options[ name ];\\r\\n\\t}\\r\\n\\r\\n\\tret = callback.call( elem );\\r\\n\\r\\n\\t// Revert the old values\\r\\n\\tfor ( name in options ) {\\r\\n\\t\\telem.style[ name ] = old[ name ];\\r\\n\\t}\\r\\n\\r\\n\\treturn ret;\\r\\n};\\r\\n\\r\\n\\r\\nvar rboxStyle = new RegExp( cssExpand.join( \"|\" ), \"i\" );\\r\\n\\r\\n\\r\\n\\r\\n( function() {\\r\\n\\r\\n\\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\\r\\n\\t// so they\\'re executed at the same time to save the second computation.\\r\\n\\tfunction computeStyleTests() {\\r\\n\\r\\n\\t\\t// This is a singleton, we need to execute it only once\\r\\n\\t\\tif ( !div ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tcontainer.style.cssText = \"position:absolute;left:-11111px;width:60px;\" +\\r\\n\\t\\t\\t\"margin-top:1px;padding:0;border:0\";\\r\\n\\t\\tdiv.style.cssText =\\r\\n\\t\\t\\t\"position:relative;display:block;box-sizing:border-box;overflow:scroll;\" +\\r\\n\\t\\t\\t\"margin:auto;border:1px;padding:1px;\" +\\r\\n\\t\\t\\t\"width:60%;top:1%\";\\r\\n\\t\\tdocumentElement.appendChild( container ).appendChild( div );\\r\\n\\r\\n\\t\\tvar divStyle = window.getComputedStyle( div );\\r\\n\\t\\tpixelPositionVal = divStyle.top !== \"1%\";\\r\\n\\r\\n\\t\\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\\r\\n\\t\\treliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;\\r\\n\\r\\n\\t\\t// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3\\r\\n\\t\\t// Some styles come back with percentage values, even though they shouldn\\'t\\r\\n\\t\\tdiv.style.right = \"60%\";\\r\\n\\t\\tpixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;\\r\\n\\r\\n\\t\\t// Support: IE 9 - 11 only\\r\\n\\t\\t// Detect misreporting of content dimensions for box-sizing:border-box elements\\r\\n\\t\\tboxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;\\r\\n\\r\\n\\t\\t// Support: IE 9 only\\r\\n\\t\\t// Detect overflow:scroll screwiness (gh-3699)\\r\\n\\t\\t// Support: Chrome <=64\\r\\n\\t\\t// Don\\'t get tricked when zoom affects offsetWidth (gh-4029)\\r\\n\\t\\tdiv.style.position = \"absolute\";\\r\\n\\t\\tscrollboxSizeVal = roundPixelMeasures( div.offsetWidth / 3 ) === 12;\\r\\n\\r\\n\\t\\tdocumentElement.removeChild( container );\\r\\n\\r\\n\\t\\t// Nullify the div so it wouldn\\'t be stored in the memory and\\r\\n\\t\\t// it will also be a sign that checks already performed\\r\\n\\t\\tdiv = null;\\r\\n\\t}\\r\\n\\r\\n\\tfunction roundPixelMeasures( measure ) {\\r\\n\\t\\treturn Math.round( parseFloat( measure ) );\\r\\n\\t}\\r\\n\\r\\n\\tvar pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,\\r\\n\\t\\treliableTrDimensionsVal, reliableMarginLeftVal,\\r\\n\\t\\tcontainer = document.createElement( \"div\" ),\\r\\n\\t\\tdiv = document.createElement( \"div\" );\\r\\n\\r\\n\\t// Finish early in limited (non-browser) environments\\r\\n\\tif ( !div.style ) {\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\r\\n\\t// Support: IE <=9 - 11 only\\r\\n\\t// Style of cloned element affects source element cloned (#8908)\\r\\n\\tdiv.style.backgroundClip = \"content-box\";\\r\\n\\tdiv.cloneNode( true ).style.backgroundClip = \"\";\\r\\n\\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\\r\\n\\r\\n\\tjQuery.extend( support, {\\r\\n\\t\\tboxSizingReliable: function() {\\r\\n\\t\\t\\tcomputeStyleTests();\\r\\n\\t\\t\\treturn boxSizingReliableVal;\\r\\n\\t\\t},\\r\\n\\t\\tpixelBoxStyles: function() {\\r\\n\\t\\t\\tcomputeStyleTests();\\r\\n\\t\\t\\treturn pixelBoxStylesVal;\\r\\n\\t\\t},\\r\\n\\t\\tpixelPosition: function() {\\r\\n\\t\\t\\tcomputeStyleTests();\\r\\n\\t\\t\\treturn pixelPositionVal;\\r\\n\\t\\t},\\r\\n\\t\\treliableMarginLeft: function() {\\r\\n\\t\\t\\tcomputeStyleTests();\\r\\n\\t\\t\\treturn reliableMarginLeftVal;\\r\\n\\t\\t},\\r\\n\\t\\tscrollboxSize: function() {\\r\\n\\t\\t\\tcomputeStyleTests();\\r\\n\\t\\t\\treturn scrollboxSizeVal;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Support: IE 9 - 11+, Edge 15 - 18+\\r\\n\\t\\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\\r\\n\\t\\t// set in CSS while `offset*` properties report correct values.\\r\\n\\t\\t// Behavior in IE 9 is more subtle than in newer versions & it passes\\r\\n\\t\\t// some versions of this test; make sure not to make it pass there!\\r\\n\\t\\treliableTrDimensions: function() {\\r\\n\\t\\t\\tvar table, tr, trChild, trStyle;\\r\\n\\t\\t\\tif ( reliableTrDimensionsVal == null ) {\\r\\n\\t\\t\\t\\ttable = document.createElement( \"table\" );\\r\\n\\t\\t\\t\\ttr = document.createElement( \"tr\" );\\r\\n\\t\\t\\t\\ttrChild = document.createElement( \"div\" );\\r\\n\\r\\n\\t\\t\\t\\ttable.style.cssText = \"position:absolute;left:-11111px\";\\r\\n\\t\\t\\t\\ttr.style.height = \"1px\";\\r\\n\\t\\t\\t\\ttrChild.style.height = \"9px\";\\r\\n\\r\\n\\t\\t\\t\\tdocumentElement\\r\\n\\t\\t\\t\\t\\t.appendChild( table )\\r\\n\\t\\t\\t\\t\\t.appendChild( tr )\\r\\n\\t\\t\\t\\t\\t.appendChild( trChild );\\r\\n\\r\\n\\t\\t\\t\\ttrStyle = window.getComputedStyle( tr );\\r\\n\\t\\t\\t\\treliableTrDimensionsVal = parseInt( trStyle.height ) > 3;\\r\\n\\r\\n\\t\\t\\t\\tdocumentElement.removeChild( table );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn reliableTrDimensionsVal;\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n} )();\\r\\n\\r\\n\\r\\nfunction curCSS( elem, name, computed ) {\\r\\n\\tvar width, minWidth, maxWidth, ret,\\r\\n\\r\\n\\t\\t// Support: Firefox 51+\\r\\n\\t\\t// Retrieving style before computed somehow\\r\\n\\t\\t// fixes an issue with getting wrong values\\r\\n\\t\\t// on detached elements\\r\\n\\t\\tstyle = elem.style;\\r\\n\\r\\n\\tcomputed = computed || getStyles( elem );\\r\\n\\r\\n\\t// getPropertyValue is needed for:\\r\\n\\t//   .css(\\'filter\\') (IE 9 only, #12537)\\r\\n\\t//   .css(\\'--customProperty) (#3144)\\r\\n\\tif ( computed ) {\\r\\n\\t\\tret = computed.getPropertyValue( name ) || computed[ name ];\\r\\n\\r\\n\\t\\tif ( ret === \"\" && !isAttached( elem ) ) {\\r\\n\\t\\t\\tret = jQuery.style( elem, name );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// A tribute to the \"awesome hack by Dean Edwards\"\\r\\n\\t\\t// Android Browser returns percentage for some values,\\r\\n\\t\\t// but width seems to be reliably pixels.\\r\\n\\t\\t// This is against the CSSOM draft spec:\\r\\n\\t\\t// https://drafts.csswg.org/cssom/#resolved-values\\r\\n\\t\\tif ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {\\r\\n\\r\\n\\t\\t\\t// Remember the original values\\r\\n\\t\\t\\twidth = style.width;\\r\\n\\t\\t\\tminWidth = style.minWidth;\\r\\n\\t\\t\\tmaxWidth = style.maxWidth;\\r\\n\\r\\n\\t\\t\\t// Put in the new values to get a computed value out\\r\\n\\t\\t\\tstyle.minWidth = style.maxWidth = style.width = ret;\\r\\n\\t\\t\\tret = computed.width;\\r\\n\\r\\n\\t\\t\\t// Revert the changed values\\r\\n\\t\\t\\tstyle.width = width;\\r\\n\\t\\t\\tstyle.minWidth = minWidth;\\r\\n\\t\\t\\tstyle.maxWidth = maxWidth;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn ret !== undefined ?\\r\\n\\r\\n\\t\\t// Support: IE <=9 - 11 only\\r\\n\\t\\t// IE returns zIndex value as an integer.\\r\\n\\t\\tret + \"\" :\\r\\n\\t\\tret;\\r\\n}\\r\\n\\r\\n\\r\\nfunction addGetHookIf( conditionFn, hookFn ) {\\r\\n\\r\\n\\t// Define the hook, we\\'ll check on the first run if it\\'s really needed.\\r\\n\\treturn {\\r\\n\\t\\tget: function() {\\r\\n\\t\\t\\tif ( conditionFn() ) {\\r\\n\\r\\n\\t\\t\\t\\t// Hook not needed (or it\\'s not possible to use it due\\r\\n\\t\\t\\t\\t// to missing dependency), remove it.\\r\\n\\t\\t\\t\\tdelete this.get;\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Hook needed; redefine it so that the support test is not executed again.\\r\\n\\t\\t\\treturn ( this.get = hookFn ).apply( this, arguments );\\r\\n\\t\\t}\\r\\n\\t};\\r\\n}\\r\\n\\r\\n\\r\\nvar cssPrefixes = [ \"Webkit\", \"Moz\", \"ms\" ],\\r\\n\\temptyStyle = document.createElement( \"div\" ).style,\\r\\n\\tvendorProps = {};\\r\\n\\r\\n// Return a vendor-prefixed property or undefined\\r\\nfunction vendorPropName( name ) {\\r\\n\\r\\n\\t// Check for vendor prefixed names\\r\\n\\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\\r\\n\\t\\ti = cssPrefixes.length;\\r\\n\\r\\n\\twhile ( i-- ) {\\r\\n\\t\\tname = cssPrefixes[ i ] + capName;\\r\\n\\t\\tif ( name in emptyStyle ) {\\r\\n\\t\\t\\treturn name;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\n// Return a potentially-mapped jQuery.cssProps or vendor prefixed property\\r\\nfunction finalPropName( name ) {\\r\\n\\tvar final = jQuery.cssProps[ name ] || vendorProps[ name ];\\r\\n\\r\\n\\tif ( final ) {\\r\\n\\t\\treturn final;\\r\\n\\t}\\r\\n\\tif ( name in emptyStyle ) {\\r\\n\\t\\treturn name;\\r\\n\\t}\\r\\n\\treturn vendorProps[ name ] = vendorPropName( name ) || name;\\r\\n}\\r\\n\\r\\n\\r\\nvar\\r\\n\\r\\n\\t// Swappable if display is none or starts with table\\r\\n\\t// except \"table\", \"table-cell\", or \"table-caption\"\\r\\n\\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\\r\\n\\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\\r\\n\\trcustomProp = /^--/,\\r\\n\\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\\r\\n\\tcssNormalTransform = {\\r\\n\\t\\tletterSpacing: \"0\",\\r\\n\\t\\tfontWeight: \"400\"\\r\\n\\t};\\r\\n\\r\\nfunction setPositiveNumber( _elem, value, subtract ) {\\r\\n\\r\\n\\t// Any relative (+/-) values have already been\\r\\n\\t// normalized at this point\\r\\n\\tvar matches = rcssNum.exec( value );\\r\\n\\treturn matches ?\\r\\n\\r\\n\\t\\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\\r\\n\\t\\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \"px\" ) :\\r\\n\\t\\tvalue;\\r\\n}\\r\\n\\r\\nfunction boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {\\r\\n\\tvar i = dimension === \"width\" ? 1 : 0,\\r\\n\\t\\textra = 0,\\r\\n\\t\\tdelta = 0;\\r\\n\\r\\n\\t// Adjustment may not be necessary\\r\\n\\tif ( box === ( isBorderBox ? \"border\" : \"content\" ) ) {\\r\\n\\t\\treturn 0;\\r\\n\\t}\\r\\n\\r\\n\\tfor ( ; i < 4; i += 2 ) {\\r\\n\\r\\n\\t\\t// Both box models exclude margin\\r\\n\\t\\tif ( box === \"margin\" ) {\\r\\n\\t\\t\\tdelta += jQuery.css( elem, box + cssExpand[ i ], true, styles );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// If we get here with a content-box, we\\'re seeking \"padding\" or \"border\" or \"margin\"\\r\\n\\t\\tif ( !isBorderBox ) {\\r\\n\\r\\n\\t\\t\\t// Add padding\\r\\n\\t\\t\\tdelta += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\\r\\n\\r\\n\\t\\t\\t// For \"border\" or \"margin\", add border\\r\\n\\t\\t\\tif ( box !== \"padding\" ) {\\r\\n\\t\\t\\t\\tdelta += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\\r\\n\\r\\n\\t\\t\\t// But still keep track of it otherwise\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\textra += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t// If we get here with a border-box (content + padding + border), we\\'re seeking \"content\" or\\r\\n\\t\\t// \"padding\" or \"margin\"\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// For \"content\", subtract padding\\r\\n\\t\\t\\tif ( box === \"content\" ) {\\r\\n\\t\\t\\t\\tdelta -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// For \"content\" or \"padding\", subtract border\\r\\n\\t\\t\\tif ( box !== \"margin\" ) {\\r\\n\\t\\t\\t\\tdelta -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Account for positive content-box scroll gutter when requested by providing computedVal\\r\\n\\tif ( !isBorderBox && computedVal >= 0 ) {\\r\\n\\r\\n\\t\\t// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border\\r\\n\\t\\t// Assuming integer scroll gutter, subtract the rest and round down\\r\\n\\t\\tdelta += Math.max( 0, Math.ceil(\\r\\n\\t\\t\\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\\r\\n\\t\\t\\tcomputedVal -\\r\\n\\t\\t\\tdelta -\\r\\n\\t\\t\\textra -\\r\\n\\t\\t\\t0.5\\r\\n\\r\\n\\t\\t// If offsetWidth/offsetHeight is unknown, then we can\\'t determine content-box scroll gutter\\r\\n\\t\\t// Use an explicit zero to avoid NaN (gh-3964)\\r\\n\\t\\t) ) || 0;\\r\\n\\t}\\r\\n\\r\\n\\treturn delta;\\r\\n}\\r\\n\\r\\nfunction getWidthOrHeight( elem, dimension, extra ) {\\r\\n\\r\\n\\t// Start with computed style\\r\\n\\tvar styles = getStyles( elem ),\\r\\n\\r\\n\\t\\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-4322).\\r\\n\\t\\t// Fake content-box until we know it\\'s needed to know the true value.\\r\\n\\t\\tboxSizingNeeded = !support.boxSizingReliable() || extra,\\r\\n\\t\\tisBorderBox = boxSizingNeeded &&\\r\\n\\t\\t\\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\\r\\n\\t\\tvalueIsBorderBox = isBorderBox,\\r\\n\\r\\n\\t\\tval = curCSS( elem, dimension, styles ),\\r\\n\\t\\toffsetProp = \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 );\\r\\n\\r\\n\\t// Support: Firefox <=54\\r\\n\\t// Return a confounding non-pixel value or feign ignorance, as appropriate.\\r\\n\\tif ( rnumnonpx.test( val ) ) {\\r\\n\\t\\tif ( !extra ) {\\r\\n\\t\\t\\treturn val;\\r\\n\\t\\t}\\r\\n\\t\\tval = \"auto\";\\r\\n\\t}\\r\\n\\r\\n\\r\\n\\t// Support: IE 9 - 11 only\\r\\n\\t// Use offsetWidth/offsetHeight for when box sizing is unreliable.\\r\\n\\t// In those cases, the computed value can be trusted to be border-box.\\r\\n\\tif ( ( !support.boxSizingReliable() && isBorderBox ||\\r\\n\\r\\n\\t\\t// Support: IE 10 - 11+, Edge 15 - 18+\\r\\n\\t\\t// IE/Edge misreport `getComputedStyle` of table rows with width/height\\r\\n\\t\\t// set in CSS while `offset*` properties report correct values.\\r\\n\\t\\t// Interestingly, in some cases IE 9 doesn\\'t suffer from this issue.\\r\\n\\t\\t!support.reliableTrDimensions() && nodeName( elem, \"tr\" ) ||\\r\\n\\r\\n\\t\\t// Fall back to offsetWidth/offsetHeight when value is \"auto\"\\r\\n\\t\\t// This happens for inline elements with no explicit setting (gh-3571)\\r\\n\\t\\tval === \"auto\" ||\\r\\n\\r\\n\\t\\t// Support: Android <=4.1 - 4.3 only\\r\\n\\t\\t// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)\\r\\n\\t\\t!parseFloat( val ) && jQuery.css( elem, \"display\", false, styles ) === \"inline\" ) &&\\r\\n\\r\\n\\t\\t// Make sure the element is visible & connected\\r\\n\\t\\telem.getClientRects().length ) {\\r\\n\\r\\n\\t\\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\\r\\n\\r\\n\\t\\t// Where available, offsetWidth/offsetHeight approximate border box dimensions.\\r\\n\\t\\t// Where not available (e.g., SVG), assume unreliable box-sizing and interpret the\\r\\n\\t\\t// retrieved value as a content box dimension.\\r\\n\\t\\tvalueIsBorderBox = offsetProp in elem;\\r\\n\\t\\tif ( valueIsBorderBox ) {\\r\\n\\t\\t\\tval = elem[ offsetProp ];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Normalize \"\" and auto\\r\\n\\tval = parseFloat( val ) || 0;\\r\\n\\r\\n\\t// Adjust for the element\\'s box model\\r\\n\\treturn ( val +\\r\\n\\t\\tboxModelAdjustment(\\r\\n\\t\\t\\telem,\\r\\n\\t\\t\\tdimension,\\r\\n\\t\\t\\textra || ( isBorderBox ? \"border\" : \"content\" ),\\r\\n\\t\\t\\tvalueIsBorderBox,\\r\\n\\t\\t\\tstyles,\\r\\n\\r\\n\\t\\t\\t// Provide the current computed size to request scroll gutter calculation (gh-3589)\\r\\n\\t\\t\\tval\\r\\n\\t\\t)\\r\\n\\t) + \"px\";\\r\\n}\\r\\n\\r\\njQuery.extend( {\\r\\n\\r\\n\\t// Add in style property hooks for overriding the default\\r\\n\\t// behavior of getting and setting a style property\\r\\n\\tcssHooks: {\\r\\n\\t\\topacity: {\\r\\n\\t\\t\\tget: function( elem, computed ) {\\r\\n\\t\\t\\t\\tif ( computed ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// We should always get a number back from opacity\\r\\n\\t\\t\\t\\t\\tvar ret = curCSS( elem, \"opacity\" );\\r\\n\\t\\t\\t\\t\\treturn ret === \"\" ? \"1\" : ret;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\t// Don\\'t automatically add \"px\" to these possibly-unitless properties\\r\\n\\tcssNumber: {\\r\\n\\t\\t\"animationIterationCount\": true,\\r\\n\\t\\t\"columnCount\": true,\\r\\n\\t\\t\"fillOpacity\": true,\\r\\n\\t\\t\"flexGrow\": true,\\r\\n\\t\\t\"flexShrink\": true,\\r\\n\\t\\t\"fontWeight\": true,\\r\\n\\t\\t\"gridArea\": true,\\r\\n\\t\\t\"gridColumn\": true,\\r\\n\\t\\t\"gridColumnEnd\": true,\\r\\n\\t\\t\"gridColumnStart\": true,\\r\\n\\t\\t\"gridRow\": true,\\r\\n\\t\\t\"gridRowEnd\": true,\\r\\n\\t\\t\"gridRowStart\": true,\\r\\n\\t\\t\"lineHeight\": true,\\r\\n\\t\\t\"opacity\": true,\\r\\n\\t\\t\"order\": true,\\r\\n\\t\\t\"orphans\": true,\\r\\n\\t\\t\"widows\": true,\\r\\n\\t\\t\"zIndex\": true,\\r\\n\\t\\t\"zoom\": true\\r\\n\\t},\\r\\n\\r\\n\\t// Add in properties whose names you wish to fix before\\r\\n\\t// setting or getting the value\\r\\n\\tcssProps: {},\\r\\n\\r\\n\\t// Get and set the style property on a DOM Node\\r\\n\\tstyle: function( elem, name, value, extra ) {\\r\\n\\r\\n\\t\\t// Don\\'t set styles on text and comment nodes\\r\\n\\t\\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Make sure that we\\'re working with the right name\\r\\n\\t\\tvar ret, type, hooks,\\r\\n\\t\\t\\torigName = camelCase( name ),\\r\\n\\t\\t\\tisCustomProp = rcustomProp.test( name ),\\r\\n\\t\\t\\tstyle = elem.style;\\r\\n\\r\\n\\t\\t// Make sure that we\\'re working with the right name. We don\\'t\\r\\n\\t\\t// want to query the value if it is a CSS custom property\\r\\n\\t\\t// since they are user-defined.\\r\\n\\t\\tif ( !isCustomProp ) {\\r\\n\\t\\t\\tname = finalPropName( origName );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Gets hook for the prefixed version, then unprefixed version\\r\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\r\\n\\r\\n\\t\\t// Check if we\\'re setting a value\\r\\n\\t\\tif ( value !== undefined ) {\\r\\n\\t\\t\\ttype = typeof value;\\r\\n\\r\\n\\t\\t\\t// Convert \"+=\" or \"-=\" to relative numbers (#7345)\\r\\n\\t\\t\\tif ( type === \"string\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\\r\\n\\t\\t\\t\\tvalue = adjustCSS( elem, name, ret );\\r\\n\\r\\n\\t\\t\\t\\t// Fixes bug #9237\\r\\n\\t\\t\\t\\ttype = \"number\";\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Make sure that null and NaN values aren\\'t set (#7116)\\r\\n\\t\\t\\tif ( value == null || value !== value ) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// If a number was passed in, add the unit (except for certain CSS properties)\\r\\n\\t\\t\\t// The isCustomProp check can be removed in jQuery 4.0 when we only auto-append\\r\\n\\t\\t\\t// \"px\" to a few hardcoded values.\\r\\n\\t\\t\\tif ( type === \"number\" && !isCustomProp ) {\\r\\n\\t\\t\\t\\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \"\" : \"px\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// background-* props affect original clone\\'s values\\r\\n\\t\\t\\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\\r\\n\\t\\t\\t\\tstyle[ name ] = \"inherit\";\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// If a hook was provided, use that value, otherwise just set the specified value\\r\\n\\t\\t\\tif ( !hooks || !( \"set\" in hooks ) ||\\r\\n\\t\\t\\t\\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\tif ( isCustomProp ) {\\r\\n\\t\\t\\t\\t\\tstyle.setProperty( name, value );\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tstyle[ name ] = value;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t// If a hook was provided get the non-computed value from there\\r\\n\\t\\t\\tif ( hooks && \"get\" in hooks &&\\r\\n\\t\\t\\t\\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\\r\\n\\r\\n\\t\\t\\t\\treturn ret;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Otherwise just get the value from the style object\\r\\n\\t\\t\\treturn style[ name ];\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tcss: function( elem, name, extra, styles ) {\\r\\n\\t\\tvar val, num, hooks,\\r\\n\\t\\t\\torigName = camelCase( name ),\\r\\n\\t\\t\\tisCustomProp = rcustomProp.test( name );\\r\\n\\r\\n\\t\\t// Make sure that we\\'re working with the right name. We don\\'t\\r\\n\\t\\t// want to modify the value if it is a CSS custom property\\r\\n\\t\\t// since they are user-defined.\\r\\n\\t\\tif ( !isCustomProp ) {\\r\\n\\t\\t\\tname = finalPropName( origName );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Try prefixed name followed by the unprefixed name\\r\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\r\\n\\r\\n\\t\\t// If a hook was provided get the computed value from there\\r\\n\\t\\tif ( hooks && \"get\" in hooks ) {\\r\\n\\t\\t\\tval = hooks.get( elem, true, extra );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Otherwise, if a way to get the computed value exists, use that\\r\\n\\t\\tif ( val === undefined ) {\\r\\n\\t\\t\\tval = curCSS( elem, name, styles );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Convert \"normal\" to computed value\\r\\n\\t\\tif ( val === \"normal\" && name in cssNormalTransform ) {\\r\\n\\t\\t\\tval = cssNormalTransform[ name ];\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Make numeric if forced or a qualifier was provided and val looks numeric\\r\\n\\t\\tif ( extra === \"\" || extra ) {\\r\\n\\t\\t\\tnum = parseFloat( val );\\r\\n\\t\\t\\treturn extra === true || isFinite( num ) ? num || 0 : val;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn val;\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.each( [ \"height\", \"width\" ], function( _i, dimension ) {\\r\\n\\tjQuery.cssHooks[ dimension ] = {\\r\\n\\t\\tget: function( elem, computed, extra ) {\\r\\n\\t\\t\\tif ( computed ) {\\r\\n\\r\\n\\t\\t\\t\\t// Certain elements can have dimension info if we invisibly show them\\r\\n\\t\\t\\t\\t// but it must have a current display style that would benefit\\r\\n\\t\\t\\t\\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) &&\\r\\n\\r\\n\\t\\t\\t\\t\\t// Support: Safari 8+\\r\\n\\t\\t\\t\\t\\t// Table columns in Safari have non-zero offsetWidth & zero\\r\\n\\t\\t\\t\\t\\t// getBoundingClientRect().width unless display is changed.\\r\\n\\t\\t\\t\\t\\t// Support: IE <=11 only\\r\\n\\t\\t\\t\\t\\t// Running getBoundingClientRect on a disconnected node\\r\\n\\t\\t\\t\\t\\t// in IE throws an error.\\r\\n\\t\\t\\t\\t\\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\\r\\n\\t\\t\\t\\t\\t\\tswap( elem, cssShow, function() {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn getWidthOrHeight( elem, dimension, extra );\\r\\n\\t\\t\\t\\t\\t\\t} ) :\\r\\n\\t\\t\\t\\t\\t\\tgetWidthOrHeight( elem, dimension, extra );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tset: function( elem, value, extra ) {\\r\\n\\t\\t\\tvar matches,\\r\\n\\t\\t\\t\\tstyles = getStyles( elem ),\\r\\n\\r\\n\\t\\t\\t\\t// Only read styles.position if the test has a chance to fail\\r\\n\\t\\t\\t\\t// to avoid forcing a reflow.\\r\\n\\t\\t\\t\\tscrollboxSizeBuggy = !support.scrollboxSize() &&\\r\\n\\t\\t\\t\\t\\tstyles.position === \"absolute\",\\r\\n\\r\\n\\t\\t\\t\\t// To avoid forcing a reflow, only fetch boxSizing if we need it (gh-3991)\\r\\n\\t\\t\\t\\tboxSizingNeeded = scrollboxSizeBuggy || extra,\\r\\n\\t\\t\\t\\tisBorderBox = boxSizingNeeded &&\\r\\n\\t\\t\\t\\t\\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\\r\\n\\t\\t\\t\\tsubtract = extra ?\\r\\n\\t\\t\\t\\t\\tboxModelAdjustment(\\r\\n\\t\\t\\t\\t\\t\\telem,\\r\\n\\t\\t\\t\\t\\t\\tdimension,\\r\\n\\t\\t\\t\\t\\t\\textra,\\r\\n\\t\\t\\t\\t\\t\\tisBorderBox,\\r\\n\\t\\t\\t\\t\\t\\tstyles\\r\\n\\t\\t\\t\\t\\t) :\\r\\n\\t\\t\\t\\t\\t0;\\r\\n\\r\\n\\t\\t\\t// Account for unreliable border-box dimensions by comparing offset* to computed and\\r\\n\\t\\t\\t// faking a content-box to get border and padding (gh-3699)\\r\\n\\t\\t\\tif ( isBorderBox && scrollboxSizeBuggy ) {\\r\\n\\t\\t\\t\\tsubtract -= Math.ceil(\\r\\n\\t\\t\\t\\t\\telem[ \"offset\" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -\\r\\n\\t\\t\\t\\t\\tparseFloat( styles[ dimension ] ) -\\r\\n\\t\\t\\t\\t\\tboxModelAdjustment( elem, dimension, \"border\", false, styles ) -\\r\\n\\t\\t\\t\\t\\t0.5\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Convert to pixels if value adjustment is needed\\r\\n\\t\\t\\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\\r\\n\\t\\t\\t\\t( matches[ 3 ] || \"px\" ) !== \"px\" ) {\\r\\n\\r\\n\\t\\t\\t\\telem.style[ dimension ] = value;\\r\\n\\t\\t\\t\\tvalue = jQuery.css( elem, dimension );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn setPositiveNumber( elem, value, subtract );\\r\\n\\t\\t}\\r\\n\\t};\\r\\n} );\\r\\n\\r\\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\\r\\n\\tfunction( elem, computed ) {\\r\\n\\t\\tif ( computed ) {\\r\\n\\t\\t\\treturn ( parseFloat( curCSS( elem, \"marginLeft\" ) ) ||\\r\\n\\t\\t\\t\\telem.getBoundingClientRect().left -\\r\\n\\t\\t\\t\\t\\tswap( elem, { marginLeft: 0 }, function() {\\r\\n\\t\\t\\t\\t\\t\\treturn elem.getBoundingClientRect().left;\\r\\n\\t\\t\\t\\t\\t} )\\r\\n\\t\\t\\t\\t) + \"px\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n);\\r\\n\\r\\n// These hooks are used by animate to expand properties\\r\\njQuery.each( {\\r\\n\\tmargin: \"\",\\r\\n\\tpadding: \"\",\\r\\n\\tborder: \"Width\"\\r\\n}, function( prefix, suffix ) {\\r\\n\\tjQuery.cssHooks[ prefix + suffix ] = {\\r\\n\\t\\texpand: function( value ) {\\r\\n\\t\\t\\tvar i = 0,\\r\\n\\t\\t\\t\\texpanded = {},\\r\\n\\r\\n\\t\\t\\t\\t// Assumes a single number if not a string\\r\\n\\t\\t\\t\\tparts = typeof value === \"string\" ? value.split( \" \" ) : [ value ];\\r\\n\\r\\n\\t\\t\\tfor ( ; i < 4; i++ ) {\\r\\n\\t\\t\\t\\texpanded[ prefix + cssExpand[ i ] + suffix ] =\\r\\n\\t\\t\\t\\t\\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn expanded;\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\r\\n\\tif ( prefix !== \"margin\" ) {\\r\\n\\t\\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tcss: function( name, value ) {\\r\\n\\t\\treturn access( this, function( elem, name, value ) {\\r\\n\\t\\t\\tvar styles, len,\\r\\n\\t\\t\\t\\tmap = {},\\r\\n\\t\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\t\\tif ( Array.isArray( name ) ) {\\r\\n\\t\\t\\t\\tstyles = getStyles( elem );\\r\\n\\t\\t\\t\\tlen = name.length;\\r\\n\\r\\n\\t\\t\\t\\tfor ( ; i < len; i++ ) {\\r\\n\\t\\t\\t\\t\\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn map;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn value !== undefined ?\\r\\n\\t\\t\\t\\tjQuery.style( elem, name, value ) :\\r\\n\\t\\t\\t\\tjQuery.css( elem, name );\\r\\n\\t\\t}, name, value, arguments.length > 1 );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\nfunction Tween( elem, options, prop, end, easing ) {\\r\\n\\treturn new Tween.prototype.init( elem, options, prop, end, easing );\\r\\n}\\r\\njQuery.Tween = Tween;\\r\\n\\r\\nTween.prototype = {\\r\\n\\tconstructor: Tween,\\r\\n\\tinit: function( elem, options, prop, end, easing, unit ) {\\r\\n\\t\\tthis.elem = elem;\\r\\n\\t\\tthis.prop = prop;\\r\\n\\t\\tthis.easing = easing || jQuery.easing._default;\\r\\n\\t\\tthis.options = options;\\r\\n\\t\\tthis.start = this.now = this.cur();\\r\\n\\t\\tthis.end = end;\\r\\n\\t\\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\\r\\n\\t},\\r\\n\\tcur: function() {\\r\\n\\t\\tvar hooks = Tween.propHooks[ this.prop ];\\r\\n\\r\\n\\t\\treturn hooks && hooks.get ?\\r\\n\\t\\t\\thooks.get( this ) :\\r\\n\\t\\t\\tTween.propHooks._default.get( this );\\r\\n\\t},\\r\\n\\trun: function( percent ) {\\r\\n\\t\\tvar eased,\\r\\n\\t\\t\\thooks = Tween.propHooks[ this.prop ];\\r\\n\\r\\n\\t\\tif ( this.options.duration ) {\\r\\n\\t\\t\\tthis.pos = eased = jQuery.easing[ this.easing ](\\r\\n\\t\\t\\t\\tpercent, this.options.duration * percent, 0, 1, this.options.duration\\r\\n\\t\\t\\t);\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tthis.pos = eased = percent;\\r\\n\\t\\t}\\r\\n\\t\\tthis.now = ( this.end - this.start ) * eased + this.start;\\r\\n\\r\\n\\t\\tif ( this.options.step ) {\\r\\n\\t\\t\\tthis.options.step.call( this.elem, this.now, this );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( hooks && hooks.set ) {\\r\\n\\t\\t\\thooks.set( this );\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tTween.propHooks._default.set( this );\\r\\n\\t\\t}\\r\\n\\t\\treturn this;\\r\\n\\t}\\r\\n};\\r\\n\\r\\nTween.prototype.init.prototype = Tween.prototype;\\r\\n\\r\\nTween.propHooks = {\\r\\n\\t_default: {\\r\\n\\t\\tget: function( tween ) {\\r\\n\\t\\t\\tvar result;\\r\\n\\r\\n\\t\\t\\t// Use a property on the element directly when it is not a DOM element,\\r\\n\\t\\t\\t// or when there is no matching style property that exists.\\r\\n\\t\\t\\tif ( tween.elem.nodeType !== 1 ||\\r\\n\\t\\t\\t\\ttween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {\\r\\n\\t\\t\\t\\treturn tween.elem[ tween.prop ];\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Passing an empty string as a 3rd parameter to .css will automatically\\r\\n\\t\\t\\t// attempt a parseFloat and fallback to a string if the parse fails.\\r\\n\\t\\t\\t// Simple values such as \"10px\" are parsed to Float;\\r\\n\\t\\t\\t// complex values such as \"rotate(1rad)\" are returned as-is.\\r\\n\\t\\t\\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\\r\\n\\r\\n\\t\\t\\t// Empty strings, null, undefined and \"auto\" are converted to 0.\\r\\n\\t\\t\\treturn !result || result === \"auto\" ? 0 : result;\\r\\n\\t\\t},\\r\\n\\t\\tset: function( tween ) {\\r\\n\\r\\n\\t\\t\\t// Use step hook for back compat.\\r\\n\\t\\t\\t// Use cssHook if its there.\\r\\n\\t\\t\\t// Use .style if available and use plain properties where available.\\r\\n\\t\\t\\tif ( jQuery.fx.step[ tween.prop ] ) {\\r\\n\\t\\t\\t\\tjQuery.fx.step[ tween.prop ]( tween );\\r\\n\\t\\t\\t} else if ( tween.elem.nodeType === 1 && (\\r\\n\\t\\t\\t\\t\\tjQuery.cssHooks[ tween.prop ] ||\\r\\n\\t\\t\\t\\t\\ttween.elem.style[ finalPropName( tween.prop ) ] != null ) ) {\\r\\n\\t\\t\\t\\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\ttween.elem[ tween.prop ] = tween.now;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n};\\r\\n\\r\\n// Support: IE <=9 only\\r\\n// Panic based approach to setting things on disconnected nodes\\r\\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\\r\\n\\tset: function( tween ) {\\r\\n\\t\\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\\r\\n\\t\\t\\ttween.elem[ tween.prop ] = tween.now;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n};\\r\\n\\r\\njQuery.easing = {\\r\\n\\tlinear: function( p ) {\\r\\n\\t\\treturn p;\\r\\n\\t},\\r\\n\\tswing: function( p ) {\\r\\n\\t\\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\\r\\n\\t},\\r\\n\\t_default: \"swing\"\\r\\n};\\r\\n\\r\\njQuery.fx = Tween.prototype.init;\\r\\n\\r\\n// Back compat <1.8 extension point\\r\\njQuery.fx.step = {};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nvar\\r\\n\\tfxNow, inProgress,\\r\\n\\trfxtypes = /^(?:toggle|show|hide)$/,\\r\\n\\trrun = /queueHooks$/;\\r\\n\\r\\nfunction schedule() {\\r\\n\\tif ( inProgress ) {\\r\\n\\t\\tif ( document.hidden === false && window.requestAnimationFrame ) {\\r\\n\\t\\t\\twindow.requestAnimationFrame( schedule );\\r\\n\\t\\t} else {\\r\\n\\t\\t\\twindow.setTimeout( schedule, jQuery.fx.interval );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tjQuery.fx.tick();\\r\\n\\t}\\r\\n}\\r\\n\\r\\n// Animations created synchronously will run synchronously\\r\\nfunction createFxNow() {\\r\\n\\twindow.setTimeout( function() {\\r\\n\\t\\tfxNow = undefined;\\r\\n\\t} );\\r\\n\\treturn ( fxNow = Date.now() );\\r\\n}\\r\\n\\r\\n// Generate parameters to create a standard animation\\r\\nfunction genFx( type, includeWidth ) {\\r\\n\\tvar which,\\r\\n\\t\\ti = 0,\\r\\n\\t\\tattrs = { height: type };\\r\\n\\r\\n\\t// If we include width, step value is 1 to do all cssExpand values,\\r\\n\\t// otherwise step value is 2 to skip over Left and Right\\r\\n\\tincludeWidth = includeWidth ? 1 : 0;\\r\\n\\tfor ( ; i < 4; i += 2 - includeWidth ) {\\r\\n\\t\\twhich = cssExpand[ i ];\\r\\n\\t\\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\\r\\n\\t}\\r\\n\\r\\n\\tif ( includeWidth ) {\\r\\n\\t\\tattrs.opacity = attrs.width = type;\\r\\n\\t}\\r\\n\\r\\n\\treturn attrs;\\r\\n}\\r\\n\\r\\nfunction createTween( value, prop, animation ) {\\r\\n\\tvar tween,\\r\\n\\t\\tcollection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ \"*\" ] ),\\r\\n\\t\\tindex = 0,\\r\\n\\t\\tlength = collection.length;\\r\\n\\tfor ( ; index < length; index++ ) {\\r\\n\\t\\tif ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {\\r\\n\\r\\n\\t\\t\\t// We\\'re done with this property\\r\\n\\t\\t\\treturn tween;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nfunction defaultPrefilter( elem, props, opts ) {\\r\\n\\tvar prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,\\r\\n\\t\\tisBox = \"width\" in props || \"height\" in props,\\r\\n\\t\\tanim = this,\\r\\n\\t\\torig = {},\\r\\n\\t\\tstyle = elem.style,\\r\\n\\t\\thidden = elem.nodeType && isHiddenWithinTree( elem ),\\r\\n\\t\\tdataShow = dataPriv.get( elem, \"fxshow\" );\\r\\n\\r\\n\\t// Queue-skipping animations hijack the fx hooks\\r\\n\\tif ( !opts.queue ) {\\r\\n\\t\\thooks = jQuery._queueHooks( elem, \"fx\" );\\r\\n\\t\\tif ( hooks.unqueued == null ) {\\r\\n\\t\\t\\thooks.unqueued = 0;\\r\\n\\t\\t\\toldfire = hooks.empty.fire;\\r\\n\\t\\t\\thooks.empty.fire = function() {\\r\\n\\t\\t\\t\\tif ( !hooks.unqueued ) {\\r\\n\\t\\t\\t\\t\\toldfire();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t};\\r\\n\\t\\t}\\r\\n\\t\\thooks.unqueued++;\\r\\n\\r\\n\\t\\tanim.always( function() {\\r\\n\\r\\n\\t\\t\\t// Ensure the complete handler is called before this completes\\r\\n\\t\\t\\tanim.always( function() {\\r\\n\\t\\t\\t\\thooks.unqueued--;\\r\\n\\t\\t\\t\\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\\r\\n\\t\\t\\t\\t\\thooks.empty.fire();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} );\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n\\r\\n\\t// Detect show/hide animations\\r\\n\\tfor ( prop in props ) {\\r\\n\\t\\tvalue = props[ prop ];\\r\\n\\t\\tif ( rfxtypes.test( value ) ) {\\r\\n\\t\\t\\tdelete props[ prop ];\\r\\n\\t\\t\\ttoggle = toggle || value === \"toggle\";\\r\\n\\t\\t\\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// Pretend to be hidden if this is a \"show\" and\\r\\n\\t\\t\\t\\t// there is still data from a stopped show/hide\\r\\n\\t\\t\\t\\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\\r\\n\\t\\t\\t\\t\\thidden = true;\\r\\n\\r\\n\\t\\t\\t\\t// Ignore all other no-op show/hide data\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Bail out if this is a no-op like .hide().hide()\\r\\n\\tpropTween = !jQuery.isEmptyObject( props );\\r\\n\\tif ( !propTween && jQuery.isEmptyObject( orig ) ) {\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\r\\n\\t// Restrict \"overflow\" and \"display\" styles during box animations\\r\\n\\tif ( isBox && elem.nodeType === 1 ) {\\r\\n\\r\\n\\t\\t// Support: IE <=9 - 11, Edge 12 - 15\\r\\n\\t\\t// Record all 3 overflow attributes because IE does not infer the shorthand\\r\\n\\t\\t// from identically-valued overflowX and overflowY and Edge just mirrors\\r\\n\\t\\t// the overflowX value there.\\r\\n\\t\\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\\r\\n\\r\\n\\t\\t// Identify a display type, preferring old show/hide data over the CSS cascade\\r\\n\\t\\trestoreDisplay = dataShow && dataShow.display;\\r\\n\\t\\tif ( restoreDisplay == null ) {\\r\\n\\t\\t\\trestoreDisplay = dataPriv.get( elem, \"display\" );\\r\\n\\t\\t}\\r\\n\\t\\tdisplay = jQuery.css( elem, \"display\" );\\r\\n\\t\\tif ( display === \"none\" ) {\\r\\n\\t\\t\\tif ( restoreDisplay ) {\\r\\n\\t\\t\\t\\tdisplay = restoreDisplay;\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// Get nonempty value(s) by temporarily forcing visibility\\r\\n\\t\\t\\t\\tshowHide( [ elem ], true );\\r\\n\\t\\t\\t\\trestoreDisplay = elem.style.display || restoreDisplay;\\r\\n\\t\\t\\t\\tdisplay = jQuery.css( elem, \"display\" );\\r\\n\\t\\t\\t\\tshowHide( [ elem ] );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Animate inline elements as inline-block\\r\\n\\t\\tif ( display === \"inline\" || display === \"inline-block\" && restoreDisplay != null ) {\\r\\n\\t\\t\\tif ( jQuery.css( elem, \"float\" ) === \"none\" ) {\\r\\n\\r\\n\\t\\t\\t\\t// Restore the original display value at the end of pure show/hide animations\\r\\n\\t\\t\\t\\tif ( !propTween ) {\\r\\n\\t\\t\\t\\t\\tanim.done( function() {\\r\\n\\t\\t\\t\\t\\t\\tstyle.display = restoreDisplay;\\r\\n\\t\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\t\\tif ( restoreDisplay == null ) {\\r\\n\\t\\t\\t\\t\\t\\tdisplay = style.display;\\r\\n\\t\\t\\t\\t\\t\\trestoreDisplay = display === \"none\" ? \"\" : display;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tstyle.display = \"inline-block\";\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tif ( opts.overflow ) {\\r\\n\\t\\tstyle.overflow = \"hidden\";\\r\\n\\t\\tanim.always( function() {\\r\\n\\t\\t\\tstyle.overflow = opts.overflow[ 0 ];\\r\\n\\t\\t\\tstyle.overflowX = opts.overflow[ 1 ];\\r\\n\\t\\t\\tstyle.overflowY = opts.overflow[ 2 ];\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n\\r\\n\\t// Implement show/hide animations\\r\\n\\tpropTween = false;\\r\\n\\tfor ( prop in orig ) {\\r\\n\\r\\n\\t\\t// General show/hide setup for this element animation\\r\\n\\t\\tif ( !propTween ) {\\r\\n\\t\\t\\tif ( dataShow ) {\\r\\n\\t\\t\\t\\tif ( \"hidden\" in dataShow ) {\\r\\n\\t\\t\\t\\t\\thidden = dataShow.hidden;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tdataShow = dataPriv.access( elem, \"fxshow\", { display: restoreDisplay } );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Store hidden/visible for toggle so `.stop().toggle()` \"reverses\"\\r\\n\\t\\t\\tif ( toggle ) {\\r\\n\\t\\t\\t\\tdataShow.hidden = !hidden;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Show elements before animating them\\r\\n\\t\\t\\tif ( hidden ) {\\r\\n\\t\\t\\t\\tshowHide( [ elem ], true );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t/* eslint-disable no-loop-func */\\r\\n\\r\\n\\t\\t\\tanim.done( function() {\\r\\n\\r\\n\\t\\t\\t/* eslint-enable no-loop-func */\\r\\n\\r\\n\\t\\t\\t\\t// The final step of a \"hide\" animation is actually hiding the element\\r\\n\\t\\t\\t\\tif ( !hidden ) {\\r\\n\\t\\t\\t\\t\\tshowHide( [ elem ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tdataPriv.remove( elem, \"fxshow\" );\\r\\n\\t\\t\\t\\tfor ( prop in orig ) {\\r\\n\\t\\t\\t\\t\\tjQuery.style( elem, prop, orig[ prop ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Per-property setup\\r\\n\\t\\tpropTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\\r\\n\\t\\tif ( !( prop in dataShow ) ) {\\r\\n\\t\\t\\tdataShow[ prop ] = propTween.start;\\r\\n\\t\\t\\tif ( hidden ) {\\r\\n\\t\\t\\t\\tpropTween.end = propTween.start;\\r\\n\\t\\t\\t\\tpropTween.start = 0;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nfunction propFilter( props, specialEasing ) {\\r\\n\\tvar index, name, easing, value, hooks;\\r\\n\\r\\n\\t// camelCase, specialEasing and expand cssHook pass\\r\\n\\tfor ( index in props ) {\\r\\n\\t\\tname = camelCase( index );\\r\\n\\t\\teasing = specialEasing[ name ];\\r\\n\\t\\tvalue = props[ index ];\\r\\n\\t\\tif ( Array.isArray( value ) ) {\\r\\n\\t\\t\\teasing = value[ 1 ];\\r\\n\\t\\t\\tvalue = props[ index ] = value[ 0 ];\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( index !== name ) {\\r\\n\\t\\t\\tprops[ name ] = value;\\r\\n\\t\\t\\tdelete props[ index ];\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\thooks = jQuery.cssHooks[ name ];\\r\\n\\t\\tif ( hooks && \"expand\" in hooks ) {\\r\\n\\t\\t\\tvalue = hooks.expand( value );\\r\\n\\t\\t\\tdelete props[ name ];\\r\\n\\r\\n\\t\\t\\t// Not quite $.extend, this won\\'t overwrite existing keys.\\r\\n\\t\\t\\t// Reusing \\'index\\' because we have the correct \"name\"\\r\\n\\t\\t\\tfor ( index in value ) {\\r\\n\\t\\t\\t\\tif ( !( index in props ) ) {\\r\\n\\t\\t\\t\\t\\tprops[ index ] = value[ index ];\\r\\n\\t\\t\\t\\t\\tspecialEasing[ index ] = easing;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tspecialEasing[ name ] = easing;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\\r\\nfunction Animation( elem, properties, options ) {\\r\\n\\tvar result,\\r\\n\\t\\tstopped,\\r\\n\\t\\tindex = 0,\\r\\n\\t\\tlength = Animation.prefilters.length,\\r\\n\\t\\tdeferred = jQuery.Deferred().always( function() {\\r\\n\\r\\n\\t\\t\\t// Don\\'t match elem in the :animated selector\\r\\n\\t\\t\\tdelete tick.elem;\\r\\n\\t\\t} ),\\r\\n\\t\\ttick = function() {\\r\\n\\t\\t\\tif ( stopped ) {\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tvar currentTime = fxNow || createFxNow(),\\r\\n\\t\\t\\t\\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\\r\\n\\r\\n\\t\\t\\t\\t// Support: Android 2.3 only\\r\\n\\t\\t\\t\\t// Archaic crash bug won\\'t allow us to use `1 - ( 0.5 || 0 )` (#12497)\\r\\n\\t\\t\\t\\ttemp = remaining / animation.duration || 0,\\r\\n\\t\\t\\t\\tpercent = 1 - temp,\\r\\n\\t\\t\\t\\tindex = 0,\\r\\n\\t\\t\\t\\tlength = animation.tweens.length;\\r\\n\\r\\n\\t\\t\\tfor ( ; index < length; index++ ) {\\r\\n\\t\\t\\t\\tanimation.tweens[ index ].run( percent );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tdeferred.notifyWith( elem, [ animation, percent, remaining ] );\\r\\n\\r\\n\\t\\t\\t// If there\\'s more to do, yield\\r\\n\\t\\t\\tif ( percent < 1 && length ) {\\r\\n\\t\\t\\t\\treturn remaining;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// If this was an empty animation, synthesize a final progress notification\\r\\n\\t\\t\\tif ( !length ) {\\r\\n\\t\\t\\t\\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Resolve the animation and report its conclusion\\r\\n\\t\\t\\tdeferred.resolveWith( elem, [ animation ] );\\r\\n\\t\\t\\treturn false;\\r\\n\\t\\t},\\r\\n\\t\\tanimation = deferred.promise( {\\r\\n\\t\\t\\telem: elem,\\r\\n\\t\\t\\tprops: jQuery.extend( {}, properties ),\\r\\n\\t\\t\\topts: jQuery.extend( true, {\\r\\n\\t\\t\\t\\tspecialEasing: {},\\r\\n\\t\\t\\t\\teasing: jQuery.easing._default\\r\\n\\t\\t\\t}, options ),\\r\\n\\t\\t\\toriginalProperties: properties,\\r\\n\\t\\t\\toriginalOptions: options,\\r\\n\\t\\t\\tstartTime: fxNow || createFxNow(),\\r\\n\\t\\t\\tduration: options.duration,\\r\\n\\t\\t\\ttweens: [],\\r\\n\\t\\t\\tcreateTween: function( prop, end ) {\\r\\n\\t\\t\\t\\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\\r\\n\\t\\t\\t\\t\\t\\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\\r\\n\\t\\t\\t\\tanimation.tweens.push( tween );\\r\\n\\t\\t\\t\\treturn tween;\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tstop: function( gotoEnd ) {\\r\\n\\t\\t\\t\\tvar index = 0,\\r\\n\\r\\n\\t\\t\\t\\t\\t// If we are going to the end, we want to run all the tweens\\r\\n\\t\\t\\t\\t\\t// otherwise we skip this part\\r\\n\\t\\t\\t\\t\\tlength = gotoEnd ? animation.tweens.length : 0;\\r\\n\\t\\t\\t\\tif ( stopped ) {\\r\\n\\t\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tstopped = true;\\r\\n\\t\\t\\t\\tfor ( ; index < length; index++ ) {\\r\\n\\t\\t\\t\\t\\tanimation.tweens[ index ].run( 1 );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Resolve when we played the last frame; otherwise, reject\\r\\n\\t\\t\\t\\tif ( gotoEnd ) {\\r\\n\\t\\t\\t\\t\\tdeferred.notifyWith( elem, [ animation, 1, 0 ] );\\r\\n\\t\\t\\t\\t\\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t}\\r\\n\\t\\t} ),\\r\\n\\t\\tprops = animation.props;\\r\\n\\r\\n\\tpropFilter( props, animation.opts.specialEasing );\\r\\n\\r\\n\\tfor ( ; index < length; index++ ) {\\r\\n\\t\\tresult = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );\\r\\n\\t\\tif ( result ) {\\r\\n\\t\\t\\tif ( isFunction( result.stop ) ) {\\r\\n\\t\\t\\t\\tjQuery._queueHooks( animation.elem, animation.opts.queue ).stop =\\r\\n\\t\\t\\t\\t\\tresult.stop.bind( result );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn result;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tjQuery.map( props, createTween, animation );\\r\\n\\r\\n\\tif ( isFunction( animation.opts.start ) ) {\\r\\n\\t\\tanimation.opts.start.call( elem, animation );\\r\\n\\t}\\r\\n\\r\\n\\t// Attach callbacks from options\\r\\n\\tanimation\\r\\n\\t\\t.progress( animation.opts.progress )\\r\\n\\t\\t.done( animation.opts.done, animation.opts.complete )\\r\\n\\t\\t.fail( animation.opts.fail )\\r\\n\\t\\t.always( animation.opts.always );\\r\\n\\r\\n\\tjQuery.fx.timer(\\r\\n\\t\\tjQuery.extend( tick, {\\r\\n\\t\\t\\telem: elem,\\r\\n\\t\\t\\tanim: animation,\\r\\n\\t\\t\\tqueue: animation.opts.queue\\r\\n\\t\\t} )\\r\\n\\t);\\r\\n\\r\\n\\treturn animation;\\r\\n}\\r\\n\\r\\njQuery.Animation = jQuery.extend( Animation, {\\r\\n\\r\\n\\ttweeners: {\\r\\n\\t\\t\"*\": [ function( prop, value ) {\\r\\n\\t\\t\\tvar tween = this.createTween( prop, value );\\r\\n\\t\\t\\tadjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );\\r\\n\\t\\t\\treturn tween;\\r\\n\\t\\t} ]\\r\\n\\t},\\r\\n\\r\\n\\ttweener: function( props, callback ) {\\r\\n\\t\\tif ( isFunction( props ) ) {\\r\\n\\t\\t\\tcallback = props;\\r\\n\\t\\t\\tprops = [ \"*\" ];\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tprops = props.match( rnothtmlwhite );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar prop,\\r\\n\\t\\t\\tindex = 0,\\r\\n\\t\\t\\tlength = props.length;\\r\\n\\r\\n\\t\\tfor ( ; index < length; index++ ) {\\r\\n\\t\\t\\tprop = props[ index ];\\r\\n\\t\\t\\tAnimation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];\\r\\n\\t\\t\\tAnimation.tweeners[ prop ].unshift( callback );\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tprefilters: [ defaultPrefilter ],\\r\\n\\r\\n\\tprefilter: function( callback, prepend ) {\\r\\n\\t\\tif ( prepend ) {\\r\\n\\t\\t\\tAnimation.prefilters.unshift( callback );\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tAnimation.prefilters.push( callback );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.speed = function( speed, easing, fn ) {\\r\\n\\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\\r\\n\\t\\tcomplete: fn || !fn && easing ||\\r\\n\\t\\t\\tisFunction( speed ) && speed,\\r\\n\\t\\tduration: speed,\\r\\n\\t\\teasing: fn && easing || easing && !isFunction( easing ) && easing\\r\\n\\t};\\r\\n\\r\\n\\t// Go to the end state if fx are off\\r\\n\\tif ( jQuery.fx.off ) {\\r\\n\\t\\topt.duration = 0;\\r\\n\\r\\n\\t} else {\\r\\n\\t\\tif ( typeof opt.duration !== \"number\" ) {\\r\\n\\t\\t\\tif ( opt.duration in jQuery.fx.speeds ) {\\r\\n\\t\\t\\t\\topt.duration = jQuery.fx.speeds[ opt.duration ];\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\topt.duration = jQuery.fx.speeds._default;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Normalize opt.queue - true/undefined/null -> \"fx\"\\r\\n\\tif ( opt.queue == null || opt.queue === true ) {\\r\\n\\t\\topt.queue = \"fx\";\\r\\n\\t}\\r\\n\\r\\n\\t// Queueing\\r\\n\\topt.old = opt.complete;\\r\\n\\r\\n\\topt.complete = function() {\\r\\n\\t\\tif ( isFunction( opt.old ) ) {\\r\\n\\t\\t\\topt.old.call( this );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( opt.queue ) {\\r\\n\\t\\t\\tjQuery.dequeue( this, opt.queue );\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\r\\n\\treturn opt;\\r\\n};\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tfadeTo: function( speed, to, easing, callback ) {\\r\\n\\r\\n\\t\\t// Show any hidden elements after setting opacity to 0\\r\\n\\t\\treturn this.filter( isHiddenWithinTree ).css( \"opacity\", 0 ).show()\\r\\n\\r\\n\\t\\t\\t// Animate to the value specified\\r\\n\\t\\t\\t.end().animate( { opacity: to }, speed, easing, callback );\\r\\n\\t},\\r\\n\\tanimate: function( prop, speed, easing, callback ) {\\r\\n\\t\\tvar empty = jQuery.isEmptyObject( prop ),\\r\\n\\t\\t\\toptall = jQuery.speed( speed, easing, callback ),\\r\\n\\t\\t\\tdoAnimation = function() {\\r\\n\\r\\n\\t\\t\\t\\t// Operate on a copy of prop so per-property easing won\\'t be lost\\r\\n\\t\\t\\t\\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\\r\\n\\r\\n\\t\\t\\t\\t// Empty animations, or finishing resolves immediately\\r\\n\\t\\t\\t\\tif ( empty || dataPriv.get( this, \"finish\" ) ) {\\r\\n\\t\\t\\t\\t\\tanim.stop( true );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t};\\r\\n\\t\\t\\tdoAnimation.finish = doAnimation;\\r\\n\\r\\n\\t\\treturn empty || optall.queue === false ?\\r\\n\\t\\t\\tthis.each( doAnimation ) :\\r\\n\\t\\t\\tthis.queue( optall.queue, doAnimation );\\r\\n\\t},\\r\\n\\tstop: function( type, clearQueue, gotoEnd ) {\\r\\n\\t\\tvar stopQueue = function( hooks ) {\\r\\n\\t\\t\\tvar stop = hooks.stop;\\r\\n\\t\\t\\tdelete hooks.stop;\\r\\n\\t\\t\\tstop( gotoEnd );\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tif ( typeof type !== \"string\" ) {\\r\\n\\t\\t\\tgotoEnd = clearQueue;\\r\\n\\t\\t\\tclearQueue = type;\\r\\n\\t\\t\\ttype = undefined;\\r\\n\\t\\t}\\r\\n\\t\\tif ( clearQueue ) {\\r\\n\\t\\t\\tthis.queue( type || \"fx\", [] );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tvar dequeue = true,\\r\\n\\t\\t\\t\\tindex = type != null && type + \"queueHooks\",\\r\\n\\t\\t\\t\\ttimers = jQuery.timers,\\r\\n\\t\\t\\t\\tdata = dataPriv.get( this );\\r\\n\\r\\n\\t\\t\\tif ( index ) {\\r\\n\\t\\t\\t\\tif ( data[ index ] && data[ index ].stop ) {\\r\\n\\t\\t\\t\\t\\tstopQueue( data[ index ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tfor ( index in data ) {\\r\\n\\t\\t\\t\\t\\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\\r\\n\\t\\t\\t\\t\\t\\tstopQueue( data[ index ] );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( index = timers.length; index--; ) {\\r\\n\\t\\t\\t\\tif ( timers[ index ].elem === this &&\\r\\n\\t\\t\\t\\t\\t( type == null || timers[ index ].queue === type ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\ttimers[ index ].anim.stop( gotoEnd );\\r\\n\\t\\t\\t\\t\\tdequeue = false;\\r\\n\\t\\t\\t\\t\\ttimers.splice( index, 1 );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Start the next in the queue if the last step wasn\\'t forced.\\r\\n\\t\\t\\t// Timers currently will call their complete callbacks, which\\r\\n\\t\\t\\t// will dequeue but only if they were gotoEnd.\\r\\n\\t\\t\\tif ( dequeue || !gotoEnd ) {\\r\\n\\t\\t\\t\\tjQuery.dequeue( this, type );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\tfinish: function( type ) {\\r\\n\\t\\tif ( type !== false ) {\\r\\n\\t\\t\\ttype = type || \"fx\";\\r\\n\\t\\t}\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tvar index,\\r\\n\\t\\t\\t\\tdata = dataPriv.get( this ),\\r\\n\\t\\t\\t\\tqueue = data[ type + \"queue\" ],\\r\\n\\t\\t\\t\\thooks = data[ type + \"queueHooks\" ],\\r\\n\\t\\t\\t\\ttimers = jQuery.timers,\\r\\n\\t\\t\\t\\tlength = queue ? queue.length : 0;\\r\\n\\r\\n\\t\\t\\t// Enable finishing flag on private data\\r\\n\\t\\t\\tdata.finish = true;\\r\\n\\r\\n\\t\\t\\t// Empty the queue first\\r\\n\\t\\t\\tjQuery.queue( this, type, [] );\\r\\n\\r\\n\\t\\t\\tif ( hooks && hooks.stop ) {\\r\\n\\t\\t\\t\\thooks.stop.call( this, true );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Look for any active animations, and finish them\\r\\n\\t\\t\\tfor ( index = timers.length; index--; ) {\\r\\n\\t\\t\\t\\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\\r\\n\\t\\t\\t\\t\\ttimers[ index ].anim.stop( true );\\r\\n\\t\\t\\t\\t\\ttimers.splice( index, 1 );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Look for any animations in the old queue and finish them\\r\\n\\t\\t\\tfor ( index = 0; index < length; index++ ) {\\r\\n\\t\\t\\t\\tif ( queue[ index ] && queue[ index ].finish ) {\\r\\n\\t\\t\\t\\t\\tqueue[ index ].finish.call( this );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Turn off finishing flag\\r\\n\\t\\t\\tdelete data.finish;\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.each( [ \"toggle\", \"show\", \"hide\" ], function( _i, name ) {\\r\\n\\tvar cssFn = jQuery.fn[ name ];\\r\\n\\tjQuery.fn[ name ] = function( speed, easing, callback ) {\\r\\n\\t\\treturn speed == null || typeof speed === \"boolean\" ?\\r\\n\\t\\t\\tcssFn.apply( this, arguments ) :\\r\\n\\t\\t\\tthis.animate( genFx( name, true ), speed, easing, callback );\\r\\n\\t};\\r\\n} );\\r\\n\\r\\n// Generate shortcuts for custom animations\\r\\njQuery.each( {\\r\\n\\tslideDown: genFx( \"show\" ),\\r\\n\\tslideUp: genFx( \"hide\" ),\\r\\n\\tslideToggle: genFx( \"toggle\" ),\\r\\n\\tfadeIn: { opacity: \"show\" },\\r\\n\\tfadeOut: { opacity: \"hide\" },\\r\\n\\tfadeToggle: { opacity: \"toggle\" }\\r\\n}, function( name, props ) {\\r\\n\\tjQuery.fn[ name ] = function( speed, easing, callback ) {\\r\\n\\t\\treturn this.animate( props, speed, easing, callback );\\r\\n\\t};\\r\\n} );\\r\\n\\r\\njQuery.timers = [];\\r\\njQuery.fx.tick = function() {\\r\\n\\tvar timer,\\r\\n\\t\\ti = 0,\\r\\n\\t\\ttimers = jQuery.timers;\\r\\n\\r\\n\\tfxNow = Date.now();\\r\\n\\r\\n\\tfor ( ; i < timers.length; i++ ) {\\r\\n\\t\\ttimer = timers[ i ];\\r\\n\\r\\n\\t\\t// Run the timer and safely remove it when done (allowing for external removal)\\r\\n\\t\\tif ( !timer() && timers[ i ] === timer ) {\\r\\n\\t\\t\\ttimers.splice( i--, 1 );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tif ( !timers.length ) {\\r\\n\\t\\tjQuery.fx.stop();\\r\\n\\t}\\r\\n\\tfxNow = undefined;\\r\\n};\\r\\n\\r\\njQuery.fx.timer = function( timer ) {\\r\\n\\tjQuery.timers.push( timer );\\r\\n\\tjQuery.fx.start();\\r\\n};\\r\\n\\r\\njQuery.fx.interval = 13;\\r\\njQuery.fx.start = function() {\\r\\n\\tif ( inProgress ) {\\r\\n\\t\\treturn;\\r\\n\\t}\\r\\n\\r\\n\\tinProgress = true;\\r\\n\\tschedule();\\r\\n};\\r\\n\\r\\njQuery.fx.stop = function() {\\r\\n\\tinProgress = null;\\r\\n};\\r\\n\\r\\njQuery.fx.speeds = {\\r\\n\\tslow: 600,\\r\\n\\tfast: 200,\\r\\n\\r\\n\\t// Default speed\\r\\n\\t_default: 400\\r\\n};\\r\\n\\r\\n\\r\\n// Based off of the plugin by Clint Helfers, with permission.\\r\\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\\r\\njQuery.fn.delay = function( time, type ) {\\r\\n\\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\\r\\n\\ttype = type || \"fx\";\\r\\n\\r\\n\\treturn this.queue( type, function( next, hooks ) {\\r\\n\\t\\tvar timeout = window.setTimeout( next, time );\\r\\n\\t\\thooks.stop = function() {\\r\\n\\t\\t\\twindow.clearTimeout( timeout );\\r\\n\\t\\t};\\r\\n\\t} );\\r\\n};\\r\\n\\r\\n\\r\\n( function() {\\r\\n\\tvar input = document.createElement( \"input\" ),\\r\\n\\t\\tselect = document.createElement( \"select\" ),\\r\\n\\t\\topt = select.appendChild( document.createElement( \"option\" ) );\\r\\n\\r\\n\\tinput.type = \"checkbox\";\\r\\n\\r\\n\\t// Support: Android <=4.3 only\\r\\n\\t// Default value for a checkbox should be \"on\"\\r\\n\\tsupport.checkOn = input.value !== \"\";\\r\\n\\r\\n\\t// Support: IE <=11 only\\r\\n\\t// Must access selectedIndex to make default options select\\r\\n\\tsupport.optSelected = opt.selected;\\r\\n\\r\\n\\t// Support: IE <=11 only\\r\\n\\t// An input loses its value after becoming a radio\\r\\n\\tinput = document.createElement( \"input\" );\\r\\n\\tinput.value = \"t\";\\r\\n\\tinput.type = \"radio\";\\r\\n\\tsupport.radioValue = input.value === \"t\";\\r\\n} )();\\r\\n\\r\\n\\r\\nvar boolHook,\\r\\n\\tattrHandle = jQuery.expr.attrHandle;\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tattr: function( name, value ) {\\r\\n\\t\\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\\r\\n\\t},\\r\\n\\r\\n\\tremoveAttr: function( name ) {\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tjQuery.removeAttr( this, name );\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.extend( {\\r\\n\\tattr: function( elem, name, value ) {\\r\\n\\t\\tvar ret, hooks,\\r\\n\\t\\t\\tnType = elem.nodeType;\\r\\n\\r\\n\\t\\t// Don\\'t get/set attributes on text, comment and attribute nodes\\r\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Fallback to prop when attributes are not supported\\r\\n\\t\\tif ( typeof elem.getAttribute === \"undefined\" ) {\\r\\n\\t\\t\\treturn jQuery.prop( elem, name, value );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Attribute hooks are determined by the lowercase version\\r\\n\\t\\t// Grab necessary hook if one is defined\\r\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\r\\n\\t\\t\\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\\r\\n\\t\\t\\t\\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( value !== undefined ) {\\r\\n\\t\\t\\tif ( value === null ) {\\r\\n\\t\\t\\t\\tjQuery.removeAttr( elem, name );\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( hooks && \"set\" in hooks &&\\r\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\r\\n\\t\\t\\t\\treturn ret;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\telem.setAttribute( name, value + \"\" );\\r\\n\\t\\t\\treturn value;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\r\\n\\t\\t\\treturn ret;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tret = jQuery.find.attr( elem, name );\\r\\n\\r\\n\\t\\t// Non-existent attributes return null, we normalize to undefined\\r\\n\\t\\treturn ret == null ? undefined : ret;\\r\\n\\t},\\r\\n\\r\\n\\tattrHooks: {\\r\\n\\t\\ttype: {\\r\\n\\t\\t\\tset: function( elem, value ) {\\r\\n\\t\\t\\t\\tif ( !support.radioValue && value === \"radio\" &&\\r\\n\\t\\t\\t\\t\\tnodeName( elem, \"input\" ) ) {\\r\\n\\t\\t\\t\\t\\tvar val = elem.value;\\r\\n\\t\\t\\t\\t\\telem.setAttribute( \"type\", value );\\r\\n\\t\\t\\t\\t\\tif ( val ) {\\r\\n\\t\\t\\t\\t\\t\\telem.value = val;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\treturn value;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tremoveAttr: function( elem, value ) {\\r\\n\\t\\tvar name,\\r\\n\\t\\t\\ti = 0,\\r\\n\\r\\n\\t\\t\\t// Attribute names can contain non-HTML whitespace characters\\r\\n\\t\\t\\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\\r\\n\\t\\t\\tattrNames = value && value.match( rnothtmlwhite );\\r\\n\\r\\n\\t\\tif ( attrNames && elem.nodeType === 1 ) {\\r\\n\\t\\t\\twhile ( ( name = attrNames[ i++ ] ) ) {\\r\\n\\t\\t\\t\\telem.removeAttribute( name );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// Hooks for boolean attributes\\r\\nboolHook = {\\r\\n\\tset: function( elem, value, name ) {\\r\\n\\t\\tif ( value === false ) {\\r\\n\\r\\n\\t\\t\\t// Remove boolean attributes when set to false\\r\\n\\t\\t\\tjQuery.removeAttr( elem, name );\\r\\n\\t\\t} else {\\r\\n\\t\\t\\telem.setAttribute( name, name );\\r\\n\\t\\t}\\r\\n\\t\\treturn name;\\r\\n\\t}\\r\\n};\\r\\n\\r\\njQuery.each( jQuery.expr.match.bool.source.match( /\\\\w+/g ), function( _i, name ) {\\r\\n\\tvar getter = attrHandle[ name ] || jQuery.find.attr;\\r\\n\\r\\n\\tattrHandle[ name ] = function( elem, name, isXML ) {\\r\\n\\t\\tvar ret, handle,\\r\\n\\t\\t\\tlowercaseName = name.toLowerCase();\\r\\n\\r\\n\\t\\tif ( !isXML ) {\\r\\n\\r\\n\\t\\t\\t// Avoid an infinite loop by temporarily removing this function from the getter\\r\\n\\t\\t\\thandle = attrHandle[ lowercaseName ];\\r\\n\\t\\t\\tattrHandle[ lowercaseName ] = ret;\\r\\n\\t\\t\\tret = getter( elem, name, isXML ) != null ?\\r\\n\\t\\t\\t\\tlowercaseName :\\r\\n\\t\\t\\t\\tnull;\\r\\n\\t\\t\\tattrHandle[ lowercaseName ] = handle;\\r\\n\\t\\t}\\r\\n\\t\\treturn ret;\\r\\n\\t};\\r\\n} );\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\\r\\n\\trclickable = /^(?:a|area)$/i;\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tprop: function( name, value ) {\\r\\n\\t\\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\\r\\n\\t},\\r\\n\\r\\n\\tremoveProp: function( name ) {\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tdelete this[ jQuery.propFix[ name ] || name ];\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.extend( {\\r\\n\\tprop: function( elem, name, value ) {\\r\\n\\t\\tvar ret, hooks,\\r\\n\\t\\t\\tnType = elem.nodeType;\\r\\n\\r\\n\\t\\t// Don\\'t get/set properties on text, comment and attribute nodes\\r\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\r\\n\\r\\n\\t\\t\\t// Fix name and attach hooks\\r\\n\\t\\t\\tname = jQuery.propFix[ name ] || name;\\r\\n\\t\\t\\thooks = jQuery.propHooks[ name ];\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( value !== undefined ) {\\r\\n\\t\\t\\tif ( hooks && \"set\" in hooks &&\\r\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\r\\n\\t\\t\\t\\treturn ret;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn ( elem[ name ] = value );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( hooks && \"get\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\r\\n\\t\\t\\treturn ret;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn elem[ name ];\\r\\n\\t},\\r\\n\\r\\n\\tpropHooks: {\\r\\n\\t\\ttabIndex: {\\r\\n\\t\\t\\tget: function( elem ) {\\r\\n\\r\\n\\t\\t\\t\\t// Support: IE <=9 - 11 only\\r\\n\\t\\t\\t\\t// elem.tabIndex doesn\\'t always return the\\r\\n\\t\\t\\t\\t// correct value when it hasn\\'t been explicitly set\\r\\n\\t\\t\\t\\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\\r\\n\\t\\t\\t\\t// Use proper attribute retrieval(#12072)\\r\\n\\t\\t\\t\\tvar tabindex = jQuery.find.attr( elem, \"tabindex\" );\\r\\n\\r\\n\\t\\t\\t\\tif ( tabindex ) {\\r\\n\\t\\t\\t\\t\\treturn parseInt( tabindex, 10 );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif (\\r\\n\\t\\t\\t\\t\\trfocusable.test( elem.nodeName ) ||\\r\\n\\t\\t\\t\\t\\trclickable.test( elem.nodeName ) &&\\r\\n\\t\\t\\t\\t\\telem.href\\r\\n\\t\\t\\t\\t) {\\r\\n\\t\\t\\t\\t\\treturn 0;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn -1;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tpropFix: {\\r\\n\\t\\t\"for\": \"htmlFor\",\\r\\n\\t\\t\"class\": \"className\"\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// Support: IE <=11 only\\r\\n// Accessing the selectedIndex property\\r\\n// forces the browser to respect setting selected\\r\\n// on the option\\r\\n// The getter ensures a default option is selected\\r\\n// when in an optgroup\\r\\n// eslint rule \"no-unused-expressions\" is disabled for this code\\r\\n// since it considers such accessions noop\\r\\nif ( !support.optSelected ) {\\r\\n\\tjQuery.propHooks.selected = {\\r\\n\\t\\tget: function( elem ) {\\r\\n\\r\\n\\t\\t\\t/* eslint no-unused-expressions: \"off\" */\\r\\n\\r\\n\\t\\t\\tvar parent = elem.parentNode;\\r\\n\\t\\t\\tif ( parent && parent.parentNode ) {\\r\\n\\t\\t\\t\\tparent.parentNode.selectedIndex;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn null;\\r\\n\\t\\t},\\r\\n\\t\\tset: function( elem ) {\\r\\n\\r\\n\\t\\t\\t/* eslint no-unused-expressions: \"off\" */\\r\\n\\r\\n\\t\\t\\tvar parent = elem.parentNode;\\r\\n\\t\\t\\tif ( parent ) {\\r\\n\\t\\t\\t\\tparent.selectedIndex;\\r\\n\\r\\n\\t\\t\\t\\tif ( parent.parentNode ) {\\r\\n\\t\\t\\t\\t\\tparent.parentNode.selectedIndex;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t};\\r\\n}\\r\\n\\r\\njQuery.each( [\\r\\n\\t\"tabIndex\",\\r\\n\\t\"readOnly\",\\r\\n\\t\"maxLength\",\\r\\n\\t\"cellSpacing\",\\r\\n\\t\"cellPadding\",\\r\\n\\t\"rowSpan\",\\r\\n\\t\"colSpan\",\\r\\n\\t\"useMap\",\\r\\n\\t\"frameBorder\",\\r\\n\\t\"contentEditable\"\\r\\n], function() {\\r\\n\\tjQuery.propFix[ this.toLowerCase() ] = this;\\r\\n} );\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t// Strip and collapse whitespace according to HTML spec\\r\\n\\t// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace\\r\\n\\tfunction stripAndCollapse( value ) {\\r\\n\\t\\tvar tokens = value.match( rnothtmlwhite ) || [];\\r\\n\\t\\treturn tokens.join( \" \" );\\r\\n\\t}\\r\\n\\r\\n\\r\\nfunction getClass( elem ) {\\r\\n\\treturn elem.getAttribute && elem.getAttribute( \"class\" ) || \"\";\\r\\n}\\r\\n\\r\\nfunction classesToArray( value ) {\\r\\n\\tif ( Array.isArray( value ) ) {\\r\\n\\t\\treturn value;\\r\\n\\t}\\r\\n\\tif ( typeof value === \"string\" ) {\\r\\n\\t\\treturn value.match( rnothtmlwhite ) || [];\\r\\n\\t}\\r\\n\\treturn [];\\r\\n}\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\taddClass: function( value ) {\\r\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\r\\n\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\tif ( isFunction( value ) ) {\\r\\n\\t\\t\\treturn this.each( function( j ) {\\r\\n\\t\\t\\t\\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\\r\\n\\t\\t\\t} );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tclasses = classesToArray( value );\\r\\n\\r\\n\\t\\tif ( classes.length ) {\\r\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\r\\n\\t\\t\\t\\tcurValue = getClass( elem );\\r\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\\r\\n\\r\\n\\t\\t\\t\\tif ( cur ) {\\r\\n\\t\\t\\t\\t\\tj = 0;\\r\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tcur += clazz + \" \";\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\r\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\r\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\r\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \"class\", finalValue );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\t},\\r\\n\\r\\n\\tremoveClass: function( value ) {\\r\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\r\\n\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\tif ( isFunction( value ) ) {\\r\\n\\t\\t\\treturn this.each( function( j ) {\\r\\n\\t\\t\\t\\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\\r\\n\\t\\t\\t} );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( !arguments.length ) {\\r\\n\\t\\t\\treturn this.attr( \"class\", \"\" );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tclasses = classesToArray( value );\\r\\n\\r\\n\\t\\tif ( classes.length ) {\\r\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\r\\n\\t\\t\\t\\tcurValue = getClass( elem );\\r\\n\\r\\n\\t\\t\\t\\t// This expression is here for better compressibility (see addClass)\\r\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \" \" + stripAndCollapse( curValue ) + \" \" );\\r\\n\\r\\n\\t\\t\\t\\tif ( cur ) {\\r\\n\\t\\t\\t\\t\\tj = 0;\\r\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Remove *all* instances\\r\\n\\t\\t\\t\\t\\t\\twhile ( cur.indexOf( \" \" + clazz + \" \" ) > -1 ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\r\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\r\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\r\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \"class\", finalValue );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\t},\\r\\n\\r\\n\\ttoggleClass: function( value, stateVal ) {\\r\\n\\t\\tvar type = typeof value,\\r\\n\\t\\t\\tisValidValue = type === \"string\" || Array.isArray( value );\\r\\n\\r\\n\\t\\tif ( typeof stateVal === \"boolean\" && isValidValue ) {\\r\\n\\t\\t\\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( isFunction( value ) ) {\\r\\n\\t\\t\\treturn this.each( function( i ) {\\r\\n\\t\\t\\t\\tjQuery( this ).toggleClass(\\r\\n\\t\\t\\t\\t\\tvalue.call( this, i, getClass( this ), stateVal ),\\r\\n\\t\\t\\t\\t\\tstateVal\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t} );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tvar className, i, self, classNames;\\r\\n\\r\\n\\t\\t\\tif ( isValidValue ) {\\r\\n\\r\\n\\t\\t\\t\\t// Toggle individual class names\\r\\n\\t\\t\\t\\ti = 0;\\r\\n\\t\\t\\t\\tself = jQuery( this );\\r\\n\\t\\t\\t\\tclassNames = classesToArray( value );\\r\\n\\r\\n\\t\\t\\t\\twhile ( ( className = classNames[ i++ ] ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Check each className given, space separated list\\r\\n\\t\\t\\t\\t\\tif ( self.hasClass( className ) ) {\\r\\n\\t\\t\\t\\t\\t\\tself.removeClass( className );\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\tself.addClass( className );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Toggle whole class name\\r\\n\\t\\t\\t} else if ( value === undefined || type === \"boolean\" ) {\\r\\n\\t\\t\\t\\tclassName = getClass( this );\\r\\n\\t\\t\\t\\tif ( className ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Store className if set\\r\\n\\t\\t\\t\\t\\tdataPriv.set( this, \"__className__\", className );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// If the element has a class name or if we\\'re passed `false`,\\r\\n\\t\\t\\t\\t// then remove the whole classname (if there was one, the above saved it).\\r\\n\\t\\t\\t\\t// Otherwise bring back whatever was previously saved (if anything),\\r\\n\\t\\t\\t\\t// falling back to the empty string if nothing was stored.\\r\\n\\t\\t\\t\\tif ( this.setAttribute ) {\\r\\n\\t\\t\\t\\t\\tthis.setAttribute( \"class\",\\r\\n\\t\\t\\t\\t\\t\\tclassName || value === false ?\\r\\n\\t\\t\\t\\t\\t\\t\"\" :\\r\\n\\t\\t\\t\\t\\t\\tdataPriv.get( this, \"__className__\" ) || \"\"\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\thasClass: function( selector ) {\\r\\n\\t\\tvar className, elem,\\r\\n\\t\\t\\ti = 0;\\r\\n\\r\\n\\t\\tclassName = \" \" + selector + \" \";\\r\\n\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\r\\n\\t\\t\\tif ( elem.nodeType === 1 &&\\r\\n\\t\\t\\t\\t( \" \" + stripAndCollapse( getClass( elem ) ) + \" \" ).indexOf( className ) > -1 ) {\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn false;\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nvar rreturn = /\\\\r/g;\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tval: function( value ) {\\r\\n\\t\\tvar hooks, ret, valueIsFunction,\\r\\n\\t\\t\\telem = this[ 0 ];\\r\\n\\r\\n\\t\\tif ( !arguments.length ) {\\r\\n\\t\\t\\tif ( elem ) {\\r\\n\\t\\t\\t\\thooks = jQuery.valHooks[ elem.type ] ||\\r\\n\\t\\t\\t\\t\\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\\r\\n\\r\\n\\t\\t\\t\\tif ( hooks &&\\r\\n\\t\\t\\t\\t\\t\"get\" in hooks &&\\r\\n\\t\\t\\t\\t\\t( ret = hooks.get( elem, \"value\" ) ) !== undefined\\r\\n\\t\\t\\t\\t) {\\r\\n\\t\\t\\t\\t\\treturn ret;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tret = elem.value;\\r\\n\\r\\n\\t\\t\\t\\t// Handle most common string cases\\r\\n\\t\\t\\t\\tif ( typeof ret === \"string\" ) {\\r\\n\\t\\t\\t\\t\\treturn ret.replace( rreturn, \"\" );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Handle cases where value is null/undef or number\\r\\n\\t\\t\\t\\treturn ret == null ? \"\" : ret;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvalueIsFunction = isFunction( value );\\r\\n\\r\\n\\t\\treturn this.each( function( i ) {\\r\\n\\t\\t\\tvar val;\\r\\n\\r\\n\\t\\t\\tif ( this.nodeType !== 1 ) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( valueIsFunction ) {\\r\\n\\t\\t\\t\\tval = value.call( this, i, jQuery( this ).val() );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tval = value;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Treat null/undefined as \"\"; convert numbers to string\\r\\n\\t\\t\\tif ( val == null ) {\\r\\n\\t\\t\\t\\tval = \"\";\\r\\n\\r\\n\\t\\t\\t} else if ( typeof val === \"number\" ) {\\r\\n\\t\\t\\t\\tval += \"\";\\r\\n\\r\\n\\t\\t\\t} else if ( Array.isArray( val ) ) {\\r\\n\\t\\t\\t\\tval = jQuery.map( val, function( value ) {\\r\\n\\t\\t\\t\\t\\treturn value == null ? \"\" : value + \"\";\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\\r\\n\\r\\n\\t\\t\\t// If set returns undefined, fall back to normal setting\\r\\n\\t\\t\\tif ( !hooks || !( \"set\" in hooks ) || hooks.set( this, val, \"value\" ) === undefined ) {\\r\\n\\t\\t\\t\\tthis.value = val;\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.extend( {\\r\\n\\tvalHooks: {\\r\\n\\t\\toption: {\\r\\n\\t\\t\\tget: function( elem ) {\\r\\n\\r\\n\\t\\t\\t\\tvar val = jQuery.find.attr( elem, \"value\" );\\r\\n\\t\\t\\t\\treturn val != null ?\\r\\n\\t\\t\\t\\t\\tval :\\r\\n\\r\\n\\t\\t\\t\\t\\t// Support: IE <=10 - 11 only\\r\\n\\t\\t\\t\\t\\t// option.text throws exceptions (#14686, #14858)\\r\\n\\t\\t\\t\\t\\t// Strip and collapse whitespace\\r\\n\\t\\t\\t\\t\\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\\r\\n\\t\\t\\t\\t\\tstripAndCollapse( jQuery.text( elem ) );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\tselect: {\\r\\n\\t\\t\\tget: function( elem ) {\\r\\n\\t\\t\\t\\tvar value, option, i,\\r\\n\\t\\t\\t\\t\\toptions = elem.options,\\r\\n\\t\\t\\t\\t\\tindex = elem.selectedIndex,\\r\\n\\t\\t\\t\\t\\tone = elem.type === \"select-one\",\\r\\n\\t\\t\\t\\t\\tvalues = one ? null : [],\\r\\n\\t\\t\\t\\t\\tmax = one ? index + 1 : options.length;\\r\\n\\r\\n\\t\\t\\t\\tif ( index < 0 ) {\\r\\n\\t\\t\\t\\t\\ti = max;\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\ti = one ? index : 0;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Loop through all the selected options\\r\\n\\t\\t\\t\\tfor ( ; i < max; i++ ) {\\r\\n\\t\\t\\t\\t\\toption = options[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\t// Support: IE <=9 only\\r\\n\\t\\t\\t\\t\\t// IE8-9 doesn\\'t update selected after form reset (#2551)\\r\\n\\t\\t\\t\\t\\tif ( ( option.selected || i === index ) &&\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Don\\'t return options that are disabled or in a disabled optgroup\\r\\n\\t\\t\\t\\t\\t\\t\\t!option.disabled &&\\r\\n\\t\\t\\t\\t\\t\\t\\t( !option.parentNode.disabled ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t!nodeName( option.parentNode, \"optgroup\" ) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Get the specific value for the option\\r\\n\\t\\t\\t\\t\\t\\tvalue = jQuery( option ).val();\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// We don\\'t need an array for one selects\\r\\n\\t\\t\\t\\t\\t\\tif ( one ) {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn value;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Multi-Selects return an array\\r\\n\\t\\t\\t\\t\\t\\tvalues.push( value );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn values;\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tset: function( elem, value ) {\\r\\n\\t\\t\\t\\tvar optionSet, option,\\r\\n\\t\\t\\t\\t\\toptions = elem.options,\\r\\n\\t\\t\\t\\t\\tvalues = jQuery.makeArray( value ),\\r\\n\\t\\t\\t\\t\\ti = options.length;\\r\\n\\r\\n\\t\\t\\t\\twhile ( i-- ) {\\r\\n\\t\\t\\t\\t\\toption = options[ i ];\\r\\n\\r\\n\\t\\t\\t\\t\\t/* eslint-disable no-cond-assign */\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( option.selected =\\r\\n\\t\\t\\t\\t\\t\\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\\r\\n\\t\\t\\t\\t\\t) {\\r\\n\\t\\t\\t\\t\\t\\toptionSet = true;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t/* eslint-enable no-cond-assign */\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Force browsers to behave consistently when non-matching value is set\\r\\n\\t\\t\\t\\tif ( !optionSet ) {\\r\\n\\t\\t\\t\\t\\telem.selectedIndex = -1;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\treturn values;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// Radios and checkboxes getter/setter\\r\\njQuery.each( [ \"radio\", \"checkbox\" ], function() {\\r\\n\\tjQuery.valHooks[ this ] = {\\r\\n\\t\\tset: function( elem, value ) {\\r\\n\\t\\t\\tif ( Array.isArray( value ) ) {\\r\\n\\t\\t\\t\\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t};\\r\\n\\tif ( !support.checkOn ) {\\r\\n\\t\\tjQuery.valHooks[ this ].get = function( elem ) {\\r\\n\\t\\t\\treturn elem.getAttribute( \"value\" ) === null ? \"on\" : elem.value;\\r\\n\\t\\t};\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// Return jQuery for attributes-only inclusion\\r\\n\\r\\n\\r\\nsupport.focusin = \"onfocusin\" in window;\\r\\n\\r\\n\\r\\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\\r\\n\\tstopPropagationCallback = function( e ) {\\r\\n\\t\\te.stopPropagation();\\r\\n\\t};\\r\\n\\r\\njQuery.extend( jQuery.event, {\\r\\n\\r\\n\\ttrigger: function( event, data, elem, onlyHandlers ) {\\r\\n\\r\\n\\t\\tvar i, cur, tmp, bubbleType, ontype, handle, special, lastElement,\\r\\n\\t\\t\\teventPath = [ elem || document ],\\r\\n\\t\\t\\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\\r\\n\\t\\t\\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split( \".\" ) : [];\\r\\n\\r\\n\\t\\tcur = lastElement = tmp = elem = elem || document;\\r\\n\\r\\n\\t\\t// Don\\'t do events on text and comment nodes\\r\\n\\t\\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// focus/blur morphs to focusin/out; ensure we\\'re not firing them right now\\r\\n\\t\\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( type.indexOf( \".\" ) > -1 ) {\\r\\n\\r\\n\\t\\t\\t// Namespaced trigger; create a regexp to match event type in handle()\\r\\n\\t\\t\\tnamespaces = type.split( \".\" );\\r\\n\\t\\t\\ttype = namespaces.shift();\\r\\n\\t\\t\\tnamespaces.sort();\\r\\n\\t\\t}\\r\\n\\t\\tontype = type.indexOf( \":\" ) < 0 && \"on\" + type;\\r\\n\\r\\n\\t\\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\\r\\n\\t\\tevent = event[ jQuery.expando ] ?\\r\\n\\t\\t\\tevent :\\r\\n\\t\\t\\tnew jQuery.Event( type, typeof event === \"object\" && event );\\r\\n\\r\\n\\t\\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\\r\\n\\t\\tevent.isTrigger = onlyHandlers ? 2 : 3;\\r\\n\\t\\tevent.namespace = namespaces.join( \".\" );\\r\\n\\t\\tevent.rnamespace = event.namespace ?\\r\\n\\t\\t\\tnew RegExp( \"(^|\\\\\\\\.)\" + namespaces.join( \"\\\\\\\\.(?:.*\\\\\\\\.|)\" ) + \"(\\\\\\\\.|$)\" ) :\\r\\n\\t\\t\\tnull;\\r\\n\\r\\n\\t\\t// Clean up the event in case it is being reused\\r\\n\\t\\tevent.result = undefined;\\r\\n\\t\\tif ( !event.target ) {\\r\\n\\t\\t\\tevent.target = elem;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Clone any incoming data and prepend the event, creating the handler arg list\\r\\n\\t\\tdata = data == null ?\\r\\n\\t\\t\\t[ event ] :\\r\\n\\t\\t\\tjQuery.makeArray( data, [ event ] );\\r\\n\\r\\n\\t\\t// Allow special events to draw outside the lines\\r\\n\\t\\tspecial = jQuery.event.special[ type ] || {};\\r\\n\\t\\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Determine event propagation path in advance, per W3C events spec (#9951)\\r\\n\\t\\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\\r\\n\\t\\tif ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {\\r\\n\\r\\n\\t\\t\\tbubbleType = special.delegateType || type;\\r\\n\\t\\t\\tif ( !rfocusMorph.test( bubbleType + type ) ) {\\r\\n\\t\\t\\t\\tcur = cur.parentNode;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tfor ( ; cur; cur = cur.parentNode ) {\\r\\n\\t\\t\\t\\teventPath.push( cur );\\r\\n\\t\\t\\t\\ttmp = cur;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\\r\\n\\t\\t\\tif ( tmp === ( elem.ownerDocument || document ) ) {\\r\\n\\t\\t\\t\\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Fire handlers on the event path\\r\\n\\t\\ti = 0;\\r\\n\\t\\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\\r\\n\\t\\t\\tlastElement = cur;\\r\\n\\t\\t\\tevent.type = i > 1 ?\\r\\n\\t\\t\\t\\tbubbleType :\\r\\n\\t\\t\\t\\tspecial.bindType || type;\\r\\n\\r\\n\\t\\t\\t// jQuery handler\\r\\n\\t\\t\\thandle = (\\r\\n\\t\\t\\t\\t\\tdataPriv.get( cur, \"events\" ) || Object.create( null )\\r\\n\\t\\t\\t\\t)[ event.type ] &&\\r\\n\\t\\t\\t\\tdataPriv.get( cur, \"handle\" );\\r\\n\\t\\t\\tif ( handle ) {\\r\\n\\t\\t\\t\\thandle.apply( cur, data );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Native handler\\r\\n\\t\\t\\thandle = ontype && cur[ ontype ];\\r\\n\\t\\t\\tif ( handle && handle.apply && acceptData( cur ) ) {\\r\\n\\t\\t\\t\\tevent.result = handle.apply( cur, data );\\r\\n\\t\\t\\t\\tif ( event.result === false ) {\\r\\n\\t\\t\\t\\t\\tevent.preventDefault();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t\\tevent.type = type;\\r\\n\\r\\n\\t\\t// If nobody prevented the default action, do it now\\r\\n\\t\\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\\r\\n\\r\\n\\t\\t\\tif ( ( !special._default ||\\r\\n\\t\\t\\t\\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\\r\\n\\t\\t\\t\\tacceptData( elem ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// Call a native DOM method on the target with the same name as the event.\\r\\n\\t\\t\\t\\t// Don\\'t do default actions on window, that\\'s where global variables be (#6170)\\r\\n\\t\\t\\t\\tif ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Don\\'t re-trigger an onFOO event when we call its FOO() method\\r\\n\\t\\t\\t\\t\\ttmp = elem[ ontype ];\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( tmp ) {\\r\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = null;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Prevent re-triggering of the same event, since we already bubbled it above\\r\\n\\t\\t\\t\\t\\tjQuery.event.triggered = type;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( event.isPropagationStopped() ) {\\r\\n\\t\\t\\t\\t\\t\\tlastElement.addEventListener( type, stopPropagationCallback );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\telem[ type ]();\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( event.isPropagationStopped() ) {\\r\\n\\t\\t\\t\\t\\t\\tlastElement.removeEventListener( type, stopPropagationCallback );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tjQuery.event.triggered = undefined;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( tmp ) {\\r\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = tmp;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn event.result;\\r\\n\\t},\\r\\n\\r\\n\\t// Piggyback on a donor event to simulate a different one\\r\\n\\t// Used only for `focus(in | out)` events\\r\\n\\tsimulate: function( type, elem, event ) {\\r\\n\\t\\tvar e = jQuery.extend(\\r\\n\\t\\t\\tnew jQuery.Event(),\\r\\n\\t\\t\\tevent,\\r\\n\\t\\t\\t{\\r\\n\\t\\t\\t\\ttype: type,\\r\\n\\t\\t\\t\\tisSimulated: true\\r\\n\\t\\t\\t}\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\tjQuery.event.trigger( e, null, elem );\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\r\\n\\ttrigger: function( type, data ) {\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tjQuery.event.trigger( type, data, this );\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\ttriggerHandler: function( type, data ) {\\r\\n\\t\\tvar elem = this[ 0 ];\\r\\n\\t\\tif ( elem ) {\\r\\n\\t\\t\\treturn jQuery.event.trigger( type, data, elem, true );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\n// Support: Firefox <=44\\r\\n// Firefox doesn\\'t have focus(in | out) events\\r\\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\\r\\n//\\r\\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\\r\\n// focus(in | out) events fire after focus & blur events,\\r\\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\\r\\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\\r\\nif ( !support.focusin ) {\\r\\n\\tjQuery.each( { focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\\r\\n\\r\\n\\t\\t// Attach a single capturing handler on the document while someone wants focusin/focusout\\r\\n\\t\\tvar handler = function( event ) {\\r\\n\\t\\t\\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\tjQuery.event.special[ fix ] = {\\r\\n\\t\\t\\tsetup: function() {\\r\\n\\r\\n\\t\\t\\t\\t// Handle: regular nodes (via `this.ownerDocument`), window\\r\\n\\t\\t\\t\\t// (via `this.document`) & document (via `this`).\\r\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this.document || this,\\r\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix );\\r\\n\\r\\n\\t\\t\\t\\tif ( !attaches ) {\\r\\n\\t\\t\\t\\t\\tdoc.addEventListener( orig, handler, true );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tteardown: function() {\\r\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this.document || this,\\r\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix ) - 1;\\r\\n\\r\\n\\t\\t\\t\\tif ( !attaches ) {\\r\\n\\t\\t\\t\\t\\tdoc.removeEventListener( orig, handler, true );\\r\\n\\t\\t\\t\\t\\tdataPriv.remove( doc, fix );\\r\\n\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tdataPriv.access( doc, fix, attaches );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\t} );\\r\\n}\\r\\nvar location = window.location;\\r\\n\\r\\nvar nonce = { guid: Date.now() };\\r\\n\\r\\nvar rquery = ( /\\\\?/ );\\r\\n\\r\\n\\r\\n\\r\\n// Cross-browser xml parsing\\r\\njQuery.parseXML = function( data ) {\\r\\n\\tvar xml;\\r\\n\\tif ( !data || typeof data !== \"string\" ) {\\r\\n\\t\\treturn null;\\r\\n\\t}\\r\\n\\r\\n\\t// Support: IE 9 - 11 only\\r\\n\\t// IE throws on parseFromString with invalid input.\\r\\n\\ttry {\\r\\n\\t\\txml = ( new window.DOMParser() ).parseFromString( data, \"text/xml\" );\\r\\n\\t} catch ( e ) {\\r\\n\\t\\txml = undefined;\\r\\n\\t}\\r\\n\\r\\n\\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\\r\\n\\t\\tjQuery.error( \"Invalid XML: \" + data );\\r\\n\\t}\\r\\n\\treturn xml;\\r\\n};\\r\\n\\r\\n\\r\\nvar\\r\\n\\trbracket = /\\\\[\\\\]$/,\\r\\n\\trCRLF = /\\\\r?\\\\n/g,\\r\\n\\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\\r\\n\\trsubmittable = /^(?:input|select|textarea|keygen)/i;\\r\\n\\r\\nfunction buildParams( prefix, obj, traditional, add ) {\\r\\n\\tvar name;\\r\\n\\r\\n\\tif ( Array.isArray( obj ) ) {\\r\\n\\r\\n\\t\\t// Serialize array item.\\r\\n\\t\\tjQuery.each( obj, function( i, v ) {\\r\\n\\t\\t\\tif ( traditional || rbracket.test( prefix ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// Treat each array item as a scalar.\\r\\n\\t\\t\\t\\tadd( prefix, v );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// Item is non-scalar (array or object), encode its numeric index.\\r\\n\\t\\t\\t\\tbuildParams(\\r\\n\\t\\t\\t\\t\\tprefix + \"[\" + ( typeof v === \"object\" && v != null ? i : \"\" ) + \"]\",\\r\\n\\t\\t\\t\\t\\tv,\\r\\n\\t\\t\\t\\t\\ttraditional,\\r\\n\\t\\t\\t\\t\\tadd\\r\\n\\t\\t\\t\\t);\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\r\\n\\t} else if ( !traditional && toType( obj ) === \"object\" ) {\\r\\n\\r\\n\\t\\t// Serialize object item.\\r\\n\\t\\tfor ( name in obj ) {\\r\\n\\t\\t\\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\\r\\n\\t\\t}\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\t// Serialize scalar item.\\r\\n\\t\\tadd( prefix, obj );\\r\\n\\t}\\r\\n}\\r\\n\\r\\n// Serialize an array of form elements or a set of\\r\\n// key/values into a query string\\r\\njQuery.param = function( a, traditional ) {\\r\\n\\tvar prefix,\\r\\n\\t\\ts = [],\\r\\n\\t\\tadd = function( key, valueOrFunction ) {\\r\\n\\r\\n\\t\\t\\t// If value is a function, invoke it and use its return value\\r\\n\\t\\t\\tvar value = isFunction( valueOrFunction ) ?\\r\\n\\t\\t\\t\\tvalueOrFunction() :\\r\\n\\t\\t\\t\\tvalueOrFunction;\\r\\n\\r\\n\\t\\t\\ts[ s.length ] = encodeURIComponent( key ) + \"=\" +\\r\\n\\t\\t\\t\\tencodeURIComponent( value == null ? \"\" : value );\\r\\n\\t\\t};\\r\\n\\r\\n\\tif ( a == null ) {\\r\\n\\t\\treturn \"\";\\r\\n\\t}\\r\\n\\r\\n\\t// If an array was passed in, assume that it is an array of form elements.\\r\\n\\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\\r\\n\\r\\n\\t\\t// Serialize the form elements\\r\\n\\t\\tjQuery.each( a, function() {\\r\\n\\t\\t\\tadd( this.name, this.value );\\r\\n\\t\\t} );\\r\\n\\r\\n\\t} else {\\r\\n\\r\\n\\t\\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\\r\\n\\t\\t// did it), otherwise encode params recursively.\\r\\n\\t\\tfor ( prefix in a ) {\\r\\n\\t\\t\\tbuildParams( prefix, a[ prefix ], traditional, add );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Return the resulting serialization\\r\\n\\treturn s.join( \"&\" );\\r\\n};\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\tserialize: function() {\\r\\n\\t\\treturn jQuery.param( this.serializeArray() );\\r\\n\\t},\\r\\n\\tserializeArray: function() {\\r\\n\\t\\treturn this.map( function() {\\r\\n\\r\\n\\t\\t\\t// Can add propHook for \"elements\" to filter or add form elements\\r\\n\\t\\t\\tvar elements = jQuery.prop( this, \"elements\" );\\r\\n\\t\\t\\treturn elements ? jQuery.makeArray( elements ) : this;\\r\\n\\t\\t} )\\r\\n\\t\\t.filter( function() {\\r\\n\\t\\t\\tvar type = this.type;\\r\\n\\r\\n\\t\\t\\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\\r\\n\\t\\t\\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\\r\\n\\t\\t\\t\\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\\r\\n\\t\\t\\t\\t( this.checked || !rcheckableType.test( type ) );\\r\\n\\t\\t} )\\r\\n\\t\\t.map( function( _i, elem ) {\\r\\n\\t\\t\\tvar val = jQuery( this ).val();\\r\\n\\r\\n\\t\\t\\tif ( val == null ) {\\r\\n\\t\\t\\t\\treturn null;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( Array.isArray( val ) ) {\\r\\n\\t\\t\\t\\treturn jQuery.map( val, function( val ) {\\r\\n\\t\\t\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \"\\\\r\\\\n\" ) };\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \"\\\\r\\\\n\" ) };\\r\\n\\t\\t} ).get();\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\nvar\\r\\n\\tr20 = /%20/g,\\r\\n\\trhash = /#.*$/,\\r\\n\\trantiCache = /([?&])_=[^&]*/,\\r\\n\\trheaders = /^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/mg,\\r\\n\\r\\n\\t// #7653, #8125, #8152: local protocol detection\\r\\n\\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\\r\\n\\trnoContent = /^(?:GET|HEAD)$/,\\r\\n\\trprotocol = /^\\\\/\\\\//,\\r\\n\\r\\n\\t/* Prefilters\\r\\n\\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\\r\\n\\t * 2) These are called:\\r\\n\\t *    - BEFORE asking for a transport\\r\\n\\t *    - AFTER param serialization (s.data is a string if s.processData is true)\\r\\n\\t * 3) key is the dataType\\r\\n\\t * 4) the catchall symbol \"*\" can be used\\r\\n\\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\\r\\n\\t */\\r\\n\\tprefilters = {},\\r\\n\\r\\n\\t/* Transports bindings\\r\\n\\t * 1) key is the dataType\\r\\n\\t * 2) the catchall symbol \"*\" can be used\\r\\n\\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\\r\\n\\t */\\r\\n\\ttransports = {},\\r\\n\\r\\n\\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\\r\\n\\tallTypes = \"*/\".concat( \"*\" ),\\r\\n\\r\\n\\t// Anchor tag for parsing the document origin\\r\\n\\toriginAnchor = document.createElement( \"a\" );\\r\\n\\toriginAnchor.href = location.href;\\r\\n\\r\\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\\r\\nfunction addToPrefiltersOrTransports( structure ) {\\r\\n\\r\\n\\t// dataTypeExpression is optional and defaults to \"*\"\\r\\n\\treturn function( dataTypeExpression, func ) {\\r\\n\\r\\n\\t\\tif ( typeof dataTypeExpression !== \"string\" ) {\\r\\n\\t\\t\\tfunc = dataTypeExpression;\\r\\n\\t\\t\\tdataTypeExpression = \"*\";\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar dataType,\\r\\n\\t\\t\\ti = 0,\\r\\n\\t\\t\\tdataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];\\r\\n\\r\\n\\t\\tif ( isFunction( func ) ) {\\r\\n\\r\\n\\t\\t\\t// For each dataType in the dataTypeExpression\\r\\n\\t\\t\\twhile ( ( dataType = dataTypes[ i++ ] ) ) {\\r\\n\\r\\n\\t\\t\\t\\t// Prepend if requested\\r\\n\\t\\t\\t\\tif ( dataType[ 0 ] === \"+\" ) {\\r\\n\\t\\t\\t\\t\\tdataType = dataType.slice( 1 ) || \"*\";\\r\\n\\t\\t\\t\\t\\t( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );\\r\\n\\r\\n\\t\\t\\t\\t// Otherwise append\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t( structure[ dataType ] = structure[ dataType ] || [] ).push( func );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t};\\r\\n}\\r\\n\\r\\n// Base inspection function for prefilters and transports\\r\\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\\r\\n\\r\\n\\tvar inspected = {},\\r\\n\\t\\tseekingTransport = ( structure === transports );\\r\\n\\r\\n\\tfunction inspect( dataType ) {\\r\\n\\t\\tvar selected;\\r\\n\\t\\tinspected[ dataType ] = true;\\r\\n\\t\\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\\r\\n\\t\\t\\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\\r\\n\\t\\t\\tif ( typeof dataTypeOrTransport === \"string\" &&\\r\\n\\t\\t\\t\\t!seekingTransport && !inspected[ dataTypeOrTransport ] ) {\\r\\n\\r\\n\\t\\t\\t\\toptions.dataTypes.unshift( dataTypeOrTransport );\\r\\n\\t\\t\\t\\tinspect( dataTypeOrTransport );\\r\\n\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t} else if ( seekingTransport ) {\\r\\n\\t\\t\\t\\treturn !( selected = dataTypeOrTransport );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t\\treturn selected;\\r\\n\\t}\\r\\n\\r\\n\\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\\r\\n}\\r\\n\\r\\n// A special extend for ajax options\\r\\n// that takes \"flat\" options (not to be deep extended)\\r\\n// Fixes #9887\\r\\nfunction ajaxExtend( target, src ) {\\r\\n\\tvar key, deep,\\r\\n\\t\\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\\r\\n\\r\\n\\tfor ( key in src ) {\\r\\n\\t\\tif ( src[ key ] !== undefined ) {\\r\\n\\t\\t\\t( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tif ( deep ) {\\r\\n\\t\\tjQuery.extend( true, target, deep );\\r\\n\\t}\\r\\n\\r\\n\\treturn target;\\r\\n}\\r\\n\\r\\n/* Handles responses to an ajax request:\\r\\n * - finds the right dataType (mediates between content-type and expected dataType)\\r\\n * - returns the corresponding response\\r\\n */\\r\\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\\r\\n\\r\\n\\tvar ct, type, finalDataType, firstDataType,\\r\\n\\t\\tcontents = s.contents,\\r\\n\\t\\tdataTypes = s.dataTypes;\\r\\n\\r\\n\\t// Remove auto dataType and get content-type in the process\\r\\n\\twhile ( dataTypes[ 0 ] === \"*\" ) {\\r\\n\\t\\tdataTypes.shift();\\r\\n\\t\\tif ( ct === undefined ) {\\r\\n\\t\\t\\tct = s.mimeType || jqXHR.getResponseHeader( \"Content-Type\" );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Check if we\\'re dealing with a known content-type\\r\\n\\tif ( ct ) {\\r\\n\\t\\tfor ( type in contents ) {\\r\\n\\t\\t\\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\\r\\n\\t\\t\\t\\tdataTypes.unshift( type );\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\t// Check to see if we have a response for the expected dataType\\r\\n\\tif ( dataTypes[ 0 ] in responses ) {\\r\\n\\t\\tfinalDataType = dataTypes[ 0 ];\\r\\n\\t} else {\\r\\n\\r\\n\\t\\t// Try convertible dataTypes\\r\\n\\t\\tfor ( type in responses ) {\\r\\n\\t\\t\\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[ 0 ] ] ) {\\r\\n\\t\\t\\t\\tfinalDataType = type;\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( !firstDataType ) {\\r\\n\\t\\t\\t\\tfirstDataType = type;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Or just use first one\\r\\n\\t\\tfinalDataType = finalDataType || firstDataType;\\r\\n\\t}\\r\\n\\r\\n\\t// If we found a dataType\\r\\n\\t// We add the dataType to the list if needed\\r\\n\\t// and return the corresponding response\\r\\n\\tif ( finalDataType ) {\\r\\n\\t\\tif ( finalDataType !== dataTypes[ 0 ] ) {\\r\\n\\t\\t\\tdataTypes.unshift( finalDataType );\\r\\n\\t\\t}\\r\\n\\t\\treturn responses[ finalDataType ];\\r\\n\\t}\\r\\n}\\r\\n\\r\\n/* Chain conversions given the request and the original response\\r\\n * Also sets the responseXXX fields on the jqXHR instance\\r\\n */\\r\\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\\r\\n\\tvar conv2, current, conv, tmp, prev,\\r\\n\\t\\tconverters = {},\\r\\n\\r\\n\\t\\t// Work with a copy of dataTypes in case we need to modify it for conversion\\r\\n\\t\\tdataTypes = s.dataTypes.slice();\\r\\n\\r\\n\\t// Create converters map with lowercased keys\\r\\n\\tif ( dataTypes[ 1 ] ) {\\r\\n\\t\\tfor ( conv in s.converters ) {\\r\\n\\t\\t\\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tcurrent = dataTypes.shift();\\r\\n\\r\\n\\t// Convert to each sequential dataType\\r\\n\\twhile ( current ) {\\r\\n\\r\\n\\t\\tif ( s.responseFields[ current ] ) {\\r\\n\\t\\t\\tjqXHR[ s.responseFields[ current ] ] = response;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Apply the dataFilter if provided\\r\\n\\t\\tif ( !prev && isSuccess && s.dataFilter ) {\\r\\n\\t\\t\\tresponse = s.dataFilter( response, s.dataType );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tprev = current;\\r\\n\\t\\tcurrent = dataTypes.shift();\\r\\n\\r\\n\\t\\tif ( current ) {\\r\\n\\r\\n\\t\\t\\t// There\\'s only work to do if current dataType is non-auto\\r\\n\\t\\t\\tif ( current === \"*\" ) {\\r\\n\\r\\n\\t\\t\\t\\tcurrent = prev;\\r\\n\\r\\n\\t\\t\\t// Convert response if prev dataType is non-auto and differs from current\\r\\n\\t\\t\\t} else if ( prev !== \"*\" && prev !== current ) {\\r\\n\\r\\n\\t\\t\\t\\t// Seek a direct converter\\r\\n\\t\\t\\t\\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\\r\\n\\r\\n\\t\\t\\t\\t// If none found, seek a pair\\r\\n\\t\\t\\t\\tif ( !conv ) {\\r\\n\\t\\t\\t\\t\\tfor ( conv2 in converters ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// If conv2 outputs current\\r\\n\\t\\t\\t\\t\\t\\ttmp = conv2.split( \" \" );\\r\\n\\t\\t\\t\\t\\t\\tif ( tmp[ 1 ] === current ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// If prev can be converted to accepted input\\r\\n\\t\\t\\t\\t\\t\\t\\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tconverters[ \"* \" + tmp[ 0 ] ];\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( conv ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Condense equivalence converters\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( conv === true ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tconv = converters[ conv2 ];\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Otherwise, insert the intermediate dataType\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t} else if ( converters[ conv2 ] !== true ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcurrent = tmp[ 0 ];\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tdataTypes.unshift( tmp[ 1 ] );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Apply converter (if not an equivalence)\\r\\n\\t\\t\\t\\tif ( conv !== true ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Unless errors are allowed to bubble, catch and return them\\r\\n\\t\\t\\t\\t\\tif ( conv && s.throws ) {\\r\\n\\t\\t\\t\\t\\t\\tresponse = conv( response );\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\ttry {\\r\\n\\t\\t\\t\\t\\t\\t\\tresponse = conv( response );\\r\\n\\t\\t\\t\\t\\t\\t} catch ( e ) {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstate: \"parsererror\",\\r\\n\\t\\t\\t\\t\\t\\t\\t\\terror: conv ? e : \"No conversion from \" + prev + \" to \" + current\\r\\n\\t\\t\\t\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\treturn { state: \"success\", data: response };\\r\\n}\\r\\n\\r\\njQuery.extend( {\\r\\n\\r\\n\\t// Counter for holding the number of active queries\\r\\n\\tactive: 0,\\r\\n\\r\\n\\t// Last-Modified header cache for next request\\r\\n\\tlastModified: {},\\r\\n\\tetag: {},\\r\\n\\r\\n\\tajaxSettings: {\\r\\n\\t\\turl: location.href,\\r\\n\\t\\ttype: \"GET\",\\r\\n\\t\\tisLocal: rlocalProtocol.test( location.protocol ),\\r\\n\\t\\tglobal: true,\\r\\n\\t\\tprocessData: true,\\r\\n\\t\\tasync: true,\\r\\n\\t\\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\\r\\n\\r\\n\\t\\t/*\\r\\n\\t\\ttimeout: 0,\\r\\n\\t\\tdata: null,\\r\\n\\t\\tdataType: null,\\r\\n\\t\\tusername: null,\\r\\n\\t\\tpassword: null,\\r\\n\\t\\tcache: null,\\r\\n\\t\\tthrows: false,\\r\\n\\t\\ttraditional: false,\\r\\n\\t\\theaders: {},\\r\\n\\t\\t*/\\r\\n\\r\\n\\t\\taccepts: {\\r\\n\\t\\t\\t\"*\": allTypes,\\r\\n\\t\\t\\ttext: \"text/plain\",\\r\\n\\t\\t\\thtml: \"text/html\",\\r\\n\\t\\t\\txml: \"application/xml, text/xml\",\\r\\n\\t\\t\\tjson: \"application/json, text/javascript\"\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tcontents: {\\r\\n\\t\\t\\txml: /\\\\bxml\\\\b/,\\r\\n\\t\\t\\thtml: /\\\\bhtml/,\\r\\n\\t\\t\\tjson: /\\\\bjson\\\\b/\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tresponseFields: {\\r\\n\\t\\t\\txml: \"responseXML\",\\r\\n\\t\\t\\ttext: \"responseText\",\\r\\n\\t\\t\\tjson: \"responseJSON\"\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Data converters\\r\\n\\t\\t// Keys separate source (or catchall \"*\") and destination types with a single space\\r\\n\\t\\tconverters: {\\r\\n\\r\\n\\t\\t\\t// Convert anything to text\\r\\n\\t\\t\\t\"* text\": String,\\r\\n\\r\\n\\t\\t\\t// Text to html (true = no transformation)\\r\\n\\t\\t\\t\"text html\": true,\\r\\n\\r\\n\\t\\t\\t// Evaluate text as a json expression\\r\\n\\t\\t\\t\"text json\": JSON.parse,\\r\\n\\r\\n\\t\\t\\t// Parse text as xml\\r\\n\\t\\t\\t\"text xml\": jQuery.parseXML\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// For options that shouldn\\'t be deep extended:\\r\\n\\t\\t// you can add your own custom options here if\\r\\n\\t\\t// and when you create one that shouldn\\'t be\\r\\n\\t\\t// deep extended (see ajaxExtend)\\r\\n\\t\\tflatOptions: {\\r\\n\\t\\t\\turl: true,\\r\\n\\t\\t\\tcontext: true\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\t// Creates a full fledged settings object into target\\r\\n\\t// with both ajaxSettings and settings fields.\\r\\n\\t// If target is omitted, writes into ajaxSettings.\\r\\n\\tajaxSetup: function( target, settings ) {\\r\\n\\t\\treturn settings ?\\r\\n\\r\\n\\t\\t\\t// Building a settings object\\r\\n\\t\\t\\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\\r\\n\\r\\n\\t\\t\\t// Extending ajaxSettings\\r\\n\\t\\t\\tajaxExtend( jQuery.ajaxSettings, target );\\r\\n\\t},\\r\\n\\r\\n\\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\\r\\n\\tajaxTransport: addToPrefiltersOrTransports( transports ),\\r\\n\\r\\n\\t// Main method\\r\\n\\tajax: function( url, options ) {\\r\\n\\r\\n\\t\\t// If url is an object, simulate pre-1.5 signature\\r\\n\\t\\tif ( typeof url === \"object\" ) {\\r\\n\\t\\t\\toptions = url;\\r\\n\\t\\t\\turl = undefined;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Force options to be an object\\r\\n\\t\\toptions = options || {};\\r\\n\\r\\n\\t\\tvar transport,\\r\\n\\r\\n\\t\\t\\t// URL without anti-cache param\\r\\n\\t\\t\\tcacheURL,\\r\\n\\r\\n\\t\\t\\t// Response headers\\r\\n\\t\\t\\tresponseHeadersString,\\r\\n\\t\\t\\tresponseHeaders,\\r\\n\\r\\n\\t\\t\\t// timeout handle\\r\\n\\t\\t\\ttimeoutTimer,\\r\\n\\r\\n\\t\\t\\t// Url cleanup var\\r\\n\\t\\t\\turlAnchor,\\r\\n\\r\\n\\t\\t\\t// Request state (becomes false upon send and true upon completion)\\r\\n\\t\\t\\tcompleted,\\r\\n\\r\\n\\t\\t\\t// To know if global events are to be dispatched\\r\\n\\t\\t\\tfireGlobals,\\r\\n\\r\\n\\t\\t\\t// Loop variable\\r\\n\\t\\t\\ti,\\r\\n\\r\\n\\t\\t\\t// uncached part of the url\\r\\n\\t\\t\\tuncached,\\r\\n\\r\\n\\t\\t\\t// Create the final options object\\r\\n\\t\\t\\ts = jQuery.ajaxSetup( {}, options ),\\r\\n\\r\\n\\t\\t\\t// Callbacks context\\r\\n\\t\\t\\tcallbackContext = s.context || s,\\r\\n\\r\\n\\t\\t\\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\\r\\n\\t\\t\\tglobalEventContext = s.context &&\\r\\n\\t\\t\\t\\t( callbackContext.nodeType || callbackContext.jquery ) ?\\r\\n\\t\\t\\t\\t\\tjQuery( callbackContext ) :\\r\\n\\t\\t\\t\\t\\tjQuery.event,\\r\\n\\r\\n\\t\\t\\t// Deferreds\\r\\n\\t\\t\\tdeferred = jQuery.Deferred(),\\r\\n\\t\\t\\tcompleteDeferred = jQuery.Callbacks( \"once memory\" ),\\r\\n\\r\\n\\t\\t\\t// Status-dependent callbacks\\r\\n\\t\\t\\tstatusCode = s.statusCode || {},\\r\\n\\r\\n\\t\\t\\t// Headers (they are sent all at once)\\r\\n\\t\\t\\trequestHeaders = {},\\r\\n\\t\\t\\trequestHeadersNames = {},\\r\\n\\r\\n\\t\\t\\t// Default abort message\\r\\n\\t\\t\\tstrAbort = \"canceled\",\\r\\n\\r\\n\\t\\t\\t// Fake xhr\\r\\n\\t\\t\\tjqXHR = {\\r\\n\\t\\t\\t\\treadyState: 0,\\r\\n\\r\\n\\t\\t\\t\\t// Builds headers hashtable if needed\\r\\n\\t\\t\\t\\tgetResponseHeader: function( key ) {\\r\\n\\t\\t\\t\\t\\tvar match;\\r\\n\\t\\t\\t\\t\\tif ( completed ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( !responseHeaders ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tresponseHeaders = {};\\r\\n\\t\\t\\t\\t\\t\\t\\twhile ( ( match = rheaders.exec( responseHeadersString ) ) ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tresponseHeaders[ match[ 1 ].toLowerCase() + \" \" ] =\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t( responseHeaders[ match[ 1 ].toLowerCase() + \" \" ] || [] )\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.concat( match[ 2 ] );\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\tmatch = responseHeaders[ key.toLowerCase() + \" \" ];\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\treturn match == null ? null : match.join( \", \" );\\r\\n\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\t// Raw string\\r\\n\\t\\t\\t\\tgetAllResponseHeaders: function() {\\r\\n\\t\\t\\t\\t\\treturn completed ? responseHeadersString : null;\\r\\n\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\t// Caches the header\\r\\n\\t\\t\\t\\tsetRequestHeader: function( name, value ) {\\r\\n\\t\\t\\t\\t\\tif ( completed == null ) {\\r\\n\\t\\t\\t\\t\\t\\tname = requestHeadersNames[ name.toLowerCase() ] =\\r\\n\\t\\t\\t\\t\\t\\t\\trequestHeadersNames[ name.toLowerCase() ] || name;\\r\\n\\t\\t\\t\\t\\t\\trequestHeaders[ name ] = value;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\t// Overrides response content-type header\\r\\n\\t\\t\\t\\toverrideMimeType: function( type ) {\\r\\n\\t\\t\\t\\t\\tif ( completed == null ) {\\r\\n\\t\\t\\t\\t\\t\\ts.mimeType = type;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\t// Status-dependent callbacks\\r\\n\\t\\t\\t\\tstatusCode: function( map ) {\\r\\n\\t\\t\\t\\t\\tvar code;\\r\\n\\t\\t\\t\\t\\tif ( map ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( completed ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Execute the appropriate callbacks\\r\\n\\t\\t\\t\\t\\t\\t\\tjqXHR.always( map[ jqXHR.status ] );\\r\\n\\t\\t\\t\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Lazy-add the new callbacks in a way that preserves old ones\\r\\n\\t\\t\\t\\t\\t\\t\\tfor ( code in map ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\t\\t// Cancel the request\\r\\n\\t\\t\\t\\tabort: function( statusText ) {\\r\\n\\t\\t\\t\\t\\tvar finalText = statusText || strAbort;\\r\\n\\t\\t\\t\\t\\tif ( transport ) {\\r\\n\\t\\t\\t\\t\\t\\ttransport.abort( finalText );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tdone( 0, finalText );\\r\\n\\t\\t\\t\\t\\treturn this;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t};\\r\\n\\r\\n\\t\\t// Attach deferreds\\r\\n\\t\\tdeferred.promise( jqXHR );\\r\\n\\r\\n\\t\\t// Add protocol if not provided (prefilters might expect it)\\r\\n\\t\\t// Handle falsy url in the settings object (#10093: consistency with old signature)\\r\\n\\t\\t// We also use the url parameter if available\\r\\n\\t\\ts.url = ( ( url || s.url || location.href ) + \"\" )\\r\\n\\t\\t\\t.replace( rprotocol, location.protocol + \"//\" );\\r\\n\\r\\n\\t\\t// Alias method option to type as per ticket #12004\\r\\n\\t\\ts.type = options.method || options.type || s.method || s.type;\\r\\n\\r\\n\\t\\t// Extract dataTypes list\\r\\n\\t\\ts.dataTypes = ( s.dataType || \"*\" ).toLowerCase().match( rnothtmlwhite ) || [ \"\" ];\\r\\n\\r\\n\\t\\t// A cross-domain request is in order when the origin doesn\\'t match the current origin.\\r\\n\\t\\tif ( s.crossDomain == null ) {\\r\\n\\t\\t\\turlAnchor = document.createElement( \"a\" );\\r\\n\\r\\n\\t\\t\\t// Support: IE <=8 - 11, Edge 12 - 15\\r\\n\\t\\t\\t// IE throws exception on accessing the href property if url is malformed,\\r\\n\\t\\t\\t// e.g. http://example.com:80x/\\r\\n\\t\\t\\ttry {\\r\\n\\t\\t\\t\\turlAnchor.href = s.url;\\r\\n\\r\\n\\t\\t\\t\\t// Support: IE <=8 - 11 only\\r\\n\\t\\t\\t\\t// Anchor\\'s host property isn\\'t correctly set when s.url is relative\\r\\n\\t\\t\\t\\turlAnchor.href = urlAnchor.href;\\r\\n\\t\\t\\t\\ts.crossDomain = originAnchor.protocol + \"//\" + originAnchor.host !==\\r\\n\\t\\t\\t\\t\\turlAnchor.protocol + \"//\" + urlAnchor.host;\\r\\n\\t\\t\\t} catch ( e ) {\\r\\n\\r\\n\\t\\t\\t\\t// If there is an error parsing the URL, assume it is crossDomain,\\r\\n\\t\\t\\t\\t// it can be rejected by the transport if it is invalid\\r\\n\\t\\t\\t\\ts.crossDomain = true;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Convert data if not already a string\\r\\n\\t\\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\\r\\n\\t\\t\\ts.data = jQuery.param( s.data, s.traditional );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Apply prefilters\\r\\n\\t\\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\\r\\n\\r\\n\\t\\t// If request was aborted inside a prefilter, stop there\\r\\n\\t\\tif ( completed ) {\\r\\n\\t\\t\\treturn jqXHR;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// We can fire global events as of now if asked to\\r\\n\\t\\t// Don\\'t fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\\r\\n\\t\\tfireGlobals = jQuery.event && s.global;\\r\\n\\r\\n\\t\\t// Watch for a new set of requests\\r\\n\\t\\tif ( fireGlobals && jQuery.active++ === 0 ) {\\r\\n\\t\\t\\tjQuery.event.trigger( \"ajaxStart\" );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Uppercase the type\\r\\n\\t\\ts.type = s.type.toUpperCase();\\r\\n\\r\\n\\t\\t// Determine if request has content\\r\\n\\t\\ts.hasContent = !rnoContent.test( s.type );\\r\\n\\r\\n\\t\\t// Save the URL in case we\\'re toying with the If-Modified-Since\\r\\n\\t\\t// and/or If-None-Match header later on\\r\\n\\t\\t// Remove hash to simplify url manipulation\\r\\n\\t\\tcacheURL = s.url.replace( rhash, \"\" );\\r\\n\\r\\n\\t\\t// More options handling for requests with no content\\r\\n\\t\\tif ( !s.hasContent ) {\\r\\n\\r\\n\\t\\t\\t// Remember the hash so we can put it back\\r\\n\\t\\t\\tuncached = s.url.slice( cacheURL.length );\\r\\n\\r\\n\\t\\t\\t// If data is available and should be processed, append data to url\\r\\n\\t\\t\\tif ( s.data && ( s.processData || typeof s.data === \"string\" ) ) {\\r\\n\\t\\t\\t\\tcacheURL += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data;\\r\\n\\r\\n\\t\\t\\t\\t// #9682: remove data so that it\\'s not used in an eventual retry\\r\\n\\t\\t\\t\\tdelete s.data;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Add or update anti-cache param if needed\\r\\n\\t\\t\\tif ( s.cache === false ) {\\r\\n\\t\\t\\t\\tcacheURL = cacheURL.replace( rantiCache, \"$1\" );\\r\\n\\t\\t\\t\\tuncached = ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + ( nonce.guid++ ) +\\r\\n\\t\\t\\t\\t\\tuncached;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Put hash and anti-cache on the URL that will be requested (gh-1732)\\r\\n\\t\\t\\ts.url = cacheURL + uncached;\\r\\n\\r\\n\\t\\t// Change \\'%20\\' to \\'+\\' if this is encoded form body content (gh-2658)\\r\\n\\t\\t} else if ( s.data && s.processData &&\\r\\n\\t\\t\\t( s.contentType || \"\" ).indexOf( \"application/x-www-form-urlencoded\" ) === 0 ) {\\r\\n\\t\\t\\ts.data = s.data.replace( r20, \"+\" );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\r\\n\\t\\tif ( s.ifModified ) {\\r\\n\\t\\t\\tif ( jQuery.lastModified[ cacheURL ] ) {\\r\\n\\t\\t\\t\\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( jQuery.etag[ cacheURL ] ) {\\r\\n\\t\\t\\t\\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Set the correct header, if data is being sent\\r\\n\\t\\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\\r\\n\\t\\t\\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Set the Accepts header for the server, depending on the dataType\\r\\n\\t\\tjqXHR.setRequestHeader(\\r\\n\\t\\t\\t\"Accept\",\\r\\n\\t\\t\\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?\\r\\n\\t\\t\\t\\ts.accepts[ s.dataTypes[ 0 ] ] +\\r\\n\\t\\t\\t\\t\\t( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\\r\\n\\t\\t\\t\\ts.accepts[ \"*\" ]\\r\\n\\t\\t);\\r\\n\\r\\n\\t\\t// Check for headers option\\r\\n\\t\\tfor ( i in s.headers ) {\\r\\n\\t\\t\\tjqXHR.setRequestHeader( i, s.headers[ i ] );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Allow custom headers/mimetypes and early abort\\r\\n\\t\\tif ( s.beforeSend &&\\r\\n\\t\\t\\t( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {\\r\\n\\r\\n\\t\\t\\t// Abort if not done already and return\\r\\n\\t\\t\\treturn jqXHR.abort();\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Aborting is no longer a cancellation\\r\\n\\t\\tstrAbort = \"abort\";\\r\\n\\r\\n\\t\\t// Install callbacks on deferreds\\r\\n\\t\\tcompleteDeferred.add( s.complete );\\r\\n\\t\\tjqXHR.done( s.success );\\r\\n\\t\\tjqXHR.fail( s.error );\\r\\n\\r\\n\\t\\t// Get transport\\r\\n\\t\\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\\r\\n\\r\\n\\t\\t// If no transport, we auto-abort\\r\\n\\t\\tif ( !transport ) {\\r\\n\\t\\t\\tdone( -1, \"No Transport\" );\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tjqXHR.readyState = 1;\\r\\n\\r\\n\\t\\t\\t// Send global event\\r\\n\\t\\t\\tif ( fireGlobals ) {\\r\\n\\t\\t\\t\\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// If request was aborted inside ajaxSend, stop there\\r\\n\\t\\t\\tif ( completed ) {\\r\\n\\t\\t\\t\\treturn jqXHR;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Timeout\\r\\n\\t\\t\\tif ( s.async && s.timeout > 0 ) {\\r\\n\\t\\t\\t\\ttimeoutTimer = window.setTimeout( function() {\\r\\n\\t\\t\\t\\t\\tjqXHR.abort( \"timeout\" );\\r\\n\\t\\t\\t\\t}, s.timeout );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\ttry {\\r\\n\\t\\t\\t\\tcompleted = false;\\r\\n\\t\\t\\t\\ttransport.send( requestHeaders, done );\\r\\n\\t\\t\\t} catch ( e ) {\\r\\n\\r\\n\\t\\t\\t\\t// Rethrow post-completion exceptions\\r\\n\\t\\t\\t\\tif ( completed ) {\\r\\n\\t\\t\\t\\t\\tthrow e;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Propagate others as results\\r\\n\\t\\t\\t\\tdone( -1, e );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Callback for when everything is done\\r\\n\\t\\tfunction done( status, nativeStatusText, responses, headers ) {\\r\\n\\t\\t\\tvar isSuccess, success, error, response, modified,\\r\\n\\t\\t\\t\\tstatusText = nativeStatusText;\\r\\n\\r\\n\\t\\t\\t// Ignore repeat invocations\\r\\n\\t\\t\\tif ( completed ) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tcompleted = true;\\r\\n\\r\\n\\t\\t\\t// Clear timeout if it exists\\r\\n\\t\\t\\tif ( timeoutTimer ) {\\r\\n\\t\\t\\t\\twindow.clearTimeout( timeoutTimer );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Dereference transport for early garbage collection\\r\\n\\t\\t\\t// (no matter how long the jqXHR object will be used)\\r\\n\\t\\t\\ttransport = undefined;\\r\\n\\r\\n\\t\\t\\t// Cache response headers\\r\\n\\t\\t\\tresponseHeadersString = headers || \"\";\\r\\n\\r\\n\\t\\t\\t// Set readyState\\r\\n\\t\\t\\tjqXHR.readyState = status > 0 ? 4 : 0;\\r\\n\\r\\n\\t\\t\\t// Determine if successful\\r\\n\\t\\t\\tisSuccess = status >= 200 && status < 300 || status === 304;\\r\\n\\r\\n\\t\\t\\t// Get response data\\r\\n\\t\\t\\tif ( responses ) {\\r\\n\\t\\t\\t\\tresponse = ajaxHandleResponses( s, jqXHR, responses );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Use a noop converter for missing script\\r\\n\\t\\t\\tif ( !isSuccess && jQuery.inArray( \"script\", s.dataTypes ) > -1 ) {\\r\\n\\t\\t\\t\\ts.converters[ \"text script\" ] = function() {};\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Convert no matter what (that way responseXXX fields are always set)\\r\\n\\t\\t\\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\\r\\n\\r\\n\\t\\t\\t// If successful, handle type chaining\\r\\n\\t\\t\\tif ( isSuccess ) {\\r\\n\\r\\n\\t\\t\\t\\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\r\\n\\t\\t\\t\\tif ( s.ifModified ) {\\r\\n\\t\\t\\t\\t\\tmodified = jqXHR.getResponseHeader( \"Last-Modified\" );\\r\\n\\t\\t\\t\\t\\tif ( modified ) {\\r\\n\\t\\t\\t\\t\\t\\tjQuery.lastModified[ cacheURL ] = modified;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tmodified = jqXHR.getResponseHeader( \"etag\" );\\r\\n\\t\\t\\t\\t\\tif ( modified ) {\\r\\n\\t\\t\\t\\t\\t\\tjQuery.etag[ cacheURL ] = modified;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// if no content\\r\\n\\t\\t\\t\\tif ( status === 204 || s.type === \"HEAD\" ) {\\r\\n\\t\\t\\t\\t\\tstatusText = \"nocontent\";\\r\\n\\r\\n\\t\\t\\t\\t// if not modified\\r\\n\\t\\t\\t\\t} else if ( status === 304 ) {\\r\\n\\t\\t\\t\\t\\tstatusText = \"notmodified\";\\r\\n\\r\\n\\t\\t\\t\\t// If we have data, let\\'s convert it\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tstatusText = response.state;\\r\\n\\t\\t\\t\\t\\tsuccess = response.data;\\r\\n\\t\\t\\t\\t\\terror = response.error;\\r\\n\\t\\t\\t\\t\\tisSuccess = !error;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// Extract error from statusText and normalize for non-aborts\\r\\n\\t\\t\\t\\terror = statusText;\\r\\n\\t\\t\\t\\tif ( status || !statusText ) {\\r\\n\\t\\t\\t\\t\\tstatusText = \"error\";\\r\\n\\t\\t\\t\\t\\tif ( status < 0 ) {\\r\\n\\t\\t\\t\\t\\t\\tstatus = 0;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Set data for the fake xhr object\\r\\n\\t\\t\\tjqXHR.status = status;\\r\\n\\t\\t\\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\\r\\n\\r\\n\\t\\t\\t// Success/Error\\r\\n\\t\\t\\tif ( isSuccess ) {\\r\\n\\t\\t\\t\\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Status-dependent callbacks\\r\\n\\t\\t\\tjqXHR.statusCode( statusCode );\\r\\n\\t\\t\\tstatusCode = undefined;\\r\\n\\r\\n\\t\\t\\tif ( fireGlobals ) {\\r\\n\\t\\t\\t\\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\\r\\n\\t\\t\\t\\t\\t[ jqXHR, s, isSuccess ? success : error ] );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Complete\\r\\n\\t\\t\\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\\r\\n\\r\\n\\t\\t\\tif ( fireGlobals ) {\\r\\n\\t\\t\\t\\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\\r\\n\\r\\n\\t\\t\\t\\t// Handle the global AJAX counter\\r\\n\\t\\t\\t\\tif ( !( --jQuery.active ) ) {\\r\\n\\t\\t\\t\\t\\tjQuery.event.trigger( \"ajaxStop\" );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn jqXHR;\\r\\n\\t},\\r\\n\\r\\n\\tgetJSON: function( url, data, callback ) {\\r\\n\\t\\treturn jQuery.get( url, data, callback, \"json\" );\\r\\n\\t},\\r\\n\\r\\n\\tgetScript: function( url, callback ) {\\r\\n\\t\\treturn jQuery.get( url, undefined, callback, \"script\" );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.each( [ \"get\", \"post\" ], function( _i, method ) {\\r\\n\\tjQuery[ method ] = function( url, data, callback, type ) {\\r\\n\\r\\n\\t\\t// Shift arguments if data argument was omitted\\r\\n\\t\\tif ( isFunction( data ) ) {\\r\\n\\t\\t\\ttype = type || callback;\\r\\n\\t\\t\\tcallback = data;\\r\\n\\t\\t\\tdata = undefined;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// The url can be an options object (which then must have .url)\\r\\n\\t\\treturn jQuery.ajax( jQuery.extend( {\\r\\n\\t\\t\\turl: url,\\r\\n\\t\\t\\ttype: method,\\r\\n\\t\\t\\tdataType: type,\\r\\n\\t\\t\\tdata: data,\\r\\n\\t\\t\\tsuccess: callback\\r\\n\\t\\t}, jQuery.isPlainObject( url ) && url ) );\\r\\n\\t};\\r\\n} );\\r\\n\\r\\njQuery.ajaxPrefilter( function( s ) {\\r\\n\\tvar i;\\r\\n\\tfor ( i in s.headers ) {\\r\\n\\t\\tif ( i.toLowerCase() === \"content-type\" ) {\\r\\n\\t\\t\\ts.contentType = s.headers[ i ] || \"\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\njQuery._evalUrl = function( url, options, doc ) {\\r\\n\\treturn jQuery.ajax( {\\r\\n\\t\\turl: url,\\r\\n\\r\\n\\t\\t// Make this explicit, since user can override this through ajaxSetup (#11264)\\r\\n\\t\\ttype: \"GET\",\\r\\n\\t\\tdataType: \"script\",\\r\\n\\t\\tcache: true,\\r\\n\\t\\tasync: false,\\r\\n\\t\\tglobal: false,\\r\\n\\r\\n\\t\\t// Only evaluate the response if it is successful (gh-4126)\\r\\n\\t\\t// dataFilter is not invoked for failure responses, so using it instead\\r\\n\\t\\t// of the default converter is kludgy but it works.\\r\\n\\t\\tconverters: {\\r\\n\\t\\t\\t\"text script\": function() {}\\r\\n\\t\\t},\\r\\n\\t\\tdataFilter: function( response ) {\\r\\n\\t\\t\\tjQuery.globalEval( response, options, doc );\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n};\\r\\n\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\twrapAll: function( html ) {\\r\\n\\t\\tvar wrap;\\r\\n\\r\\n\\t\\tif ( this[ 0 ] ) {\\r\\n\\t\\t\\tif ( isFunction( html ) ) {\\r\\n\\t\\t\\t\\thtml = html.call( this[ 0 ] );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// The elements to wrap the target around\\r\\n\\t\\t\\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\\r\\n\\r\\n\\t\\t\\tif ( this[ 0 ].parentNode ) {\\r\\n\\t\\t\\t\\twrap.insertBefore( this[ 0 ] );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\twrap.map( function() {\\r\\n\\t\\t\\t\\tvar elem = this;\\r\\n\\r\\n\\t\\t\\t\\twhile ( elem.firstElementChild ) {\\r\\n\\t\\t\\t\\t\\telem = elem.firstElementChild;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn elem;\\r\\n\\t\\t\\t} ).append( this );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this;\\r\\n\\t},\\r\\n\\r\\n\\twrapInner: function( html ) {\\r\\n\\t\\tif ( isFunction( html ) ) {\\r\\n\\t\\t\\treturn this.each( function( i ) {\\r\\n\\t\\t\\t\\tjQuery( this ).wrapInner( html.call( this, i ) );\\r\\n\\t\\t\\t} );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn this.each( function() {\\r\\n\\t\\t\\tvar self = jQuery( this ),\\r\\n\\t\\t\\t\\tcontents = self.contents();\\r\\n\\r\\n\\t\\t\\tif ( contents.length ) {\\r\\n\\t\\t\\t\\tcontents.wrapAll( html );\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tself.append( html );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\twrap: function( html ) {\\r\\n\\t\\tvar htmlIsFunction = isFunction( html );\\r\\n\\r\\n\\t\\treturn this.each( function( i ) {\\r\\n\\t\\t\\tjQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );\\r\\n\\t\\t} );\\r\\n\\t},\\r\\n\\r\\n\\tunwrap: function( selector ) {\\r\\n\\t\\tthis.parent( selector ).not( \"body\" ).each( function() {\\r\\n\\t\\t\\tjQuery( this ).replaceWith( this.childNodes );\\r\\n\\t\\t} );\\r\\n\\t\\treturn this;\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\njQuery.expr.pseudos.hidden = function( elem ) {\\r\\n\\treturn !jQuery.expr.pseudos.visible( elem );\\r\\n};\\r\\njQuery.expr.pseudos.visible = function( elem ) {\\r\\n\\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\njQuery.ajaxSettings.xhr = function() {\\r\\n\\ttry {\\r\\n\\t\\treturn new window.XMLHttpRequest();\\r\\n\\t} catch ( e ) {}\\r\\n};\\r\\n\\r\\nvar xhrSuccessStatus = {\\r\\n\\r\\n\\t\\t// File protocol always yields status code 0, assume 200\\r\\n\\t\\t0: 200,\\r\\n\\r\\n\\t\\t// Support: IE <=9 only\\r\\n\\t\\t// #1450: sometimes IE returns 1223 when it should be 204\\r\\n\\t\\t1223: 204\\r\\n\\t},\\r\\n\\txhrSupported = jQuery.ajaxSettings.xhr();\\r\\n\\r\\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\\r\\nsupport.ajax = xhrSupported = !!xhrSupported;\\r\\n\\r\\njQuery.ajaxTransport( function( options ) {\\r\\n\\tvar callback, errorCallback;\\r\\n\\r\\n\\t// Cross domain only allowed if supported through XMLHttpRequest\\r\\n\\tif ( support.cors || xhrSupported && !options.crossDomain ) {\\r\\n\\t\\treturn {\\r\\n\\t\\t\\tsend: function( headers, complete ) {\\r\\n\\t\\t\\t\\tvar i,\\r\\n\\t\\t\\t\\t\\txhr = options.xhr();\\r\\n\\r\\n\\t\\t\\t\\txhr.open(\\r\\n\\t\\t\\t\\t\\toptions.type,\\r\\n\\t\\t\\t\\t\\toptions.url,\\r\\n\\t\\t\\t\\t\\toptions.async,\\r\\n\\t\\t\\t\\t\\toptions.username,\\r\\n\\t\\t\\t\\t\\toptions.password\\r\\n\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t\\t// Apply custom fields if provided\\r\\n\\t\\t\\t\\tif ( options.xhrFields ) {\\r\\n\\t\\t\\t\\t\\tfor ( i in options.xhrFields ) {\\r\\n\\t\\t\\t\\t\\t\\txhr[ i ] = options.xhrFields[ i ];\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Override mime type if needed\\r\\n\\t\\t\\t\\tif ( options.mimeType && xhr.overrideMimeType ) {\\r\\n\\t\\t\\t\\t\\txhr.overrideMimeType( options.mimeType );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// X-Requested-With header\\r\\n\\t\\t\\t\\t// For cross-domain requests, seeing as conditions for a preflight are\\r\\n\\t\\t\\t\\t// akin to a jigsaw puzzle, we simply never set it to be sure.\\r\\n\\t\\t\\t\\t// (it can always be set on a per-request basis or even using ajaxSetup)\\r\\n\\t\\t\\t\\t// For same-domain requests, won\\'t change header if already provided.\\r\\n\\t\\t\\t\\tif ( !options.crossDomain && !headers[ \"X-Requested-With\" ] ) {\\r\\n\\t\\t\\t\\t\\theaders[ \"X-Requested-With\" ] = \"XMLHttpRequest\";\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Set headers\\r\\n\\t\\t\\t\\tfor ( i in headers ) {\\r\\n\\t\\t\\t\\t\\txhr.setRequestHeader( i, headers[ i ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Callback\\r\\n\\t\\t\\t\\tcallback = function( type ) {\\r\\n\\t\\t\\t\\t\\treturn function() {\\r\\n\\t\\t\\t\\t\\t\\tif ( callback ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tcallback = errorCallback = xhr.onload =\\r\\n\\t\\t\\t\\t\\t\\t\\t\\txhr.onerror = xhr.onabort = xhr.ontimeout =\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.onreadystatechange = null;\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( type === \"abort\" ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\txhr.abort();\\r\\n\\t\\t\\t\\t\\t\\t\\t} else if ( type === \"error\" ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <=9 only\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// On a manual native abort, IE9 throws\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t// errors on any property access that is not readyState\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( typeof xhr.status !== \"number\" ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcomplete( 0, \"error\" );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tcomplete(\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// File: protocol always yields status 0; see #8605, #14207\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.status,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.statusText\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tcomplete(\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhrSuccessStatus[ xhr.status ] || xhr.status,\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.statusText,\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <=9 only\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// IE9 has no XHR2 but throws on binary (trac-11426)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// For XHR2 non-text, let the caller handle it (gh-2498)\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t( xhr.responseType || \"text\" ) !== \"text\"  ||\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\ttypeof xhr.responseText !== \"string\" ?\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ binary: xhr.response } :\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t{ text: xhr.responseText },\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\txhr.getAllResponseHeaders()\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\t};\\r\\n\\r\\n\\t\\t\\t\\t// Listen to events\\r\\n\\t\\t\\t\\txhr.onload = callback();\\r\\n\\t\\t\\t\\terrorCallback = xhr.onerror = xhr.ontimeout = callback( \"error\" );\\r\\n\\r\\n\\t\\t\\t\\t// Support: IE 9 only\\r\\n\\t\\t\\t\\t// Use onreadystatechange to replace onabort\\r\\n\\t\\t\\t\\t// to handle uncaught aborts\\r\\n\\t\\t\\t\\tif ( xhr.onabort !== undefined ) {\\r\\n\\t\\t\\t\\t\\txhr.onabort = errorCallback;\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\txhr.onreadystatechange = function() {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Check readyState before timeout as it changes\\r\\n\\t\\t\\t\\t\\t\\tif ( xhr.readyState === 4 ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// Allow onerror to be called first,\\r\\n\\t\\t\\t\\t\\t\\t\\t// but that will not handle a native abort\\r\\n\\t\\t\\t\\t\\t\\t\\t// Also, save errorCallback to a variable\\r\\n\\t\\t\\t\\t\\t\\t\\t// as xhr.onerror cannot be accessed\\r\\n\\t\\t\\t\\t\\t\\t\\twindow.setTimeout( function() {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( callback ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\terrorCallback();\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Create the abort callback\\r\\n\\t\\t\\t\\tcallback = callback( \"abort\" );\\r\\n\\r\\n\\t\\t\\t\\ttry {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Do send the request (this may raise an exception)\\r\\n\\t\\t\\t\\t\\txhr.send( options.hasContent && options.data || null );\\r\\n\\t\\t\\t\\t} catch ( e ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// #14683: Only rethrow if this hasn\\'t been notified as an error yet\\r\\n\\t\\t\\t\\t\\tif ( callback ) {\\r\\n\\t\\t\\t\\t\\t\\tthrow e;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t},\\r\\n\\r\\n\\t\\t\\tabort: function() {\\r\\n\\t\\t\\t\\tif ( callback ) {\\r\\n\\t\\t\\t\\t\\tcallback();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)\\r\\njQuery.ajaxPrefilter( function( s ) {\\r\\n\\tif ( s.crossDomain ) {\\r\\n\\t\\ts.contents.script = false;\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// Install script dataType\\r\\njQuery.ajaxSetup( {\\r\\n\\taccepts: {\\r\\n\\t\\tscript: \"text/javascript, application/javascript, \" +\\r\\n\\t\\t\\t\"application/ecmascript, application/x-ecmascript\"\\r\\n\\t},\\r\\n\\tcontents: {\\r\\n\\t\\tscript: /\\\\b(?:java|ecma)script\\\\b/\\r\\n\\t},\\r\\n\\tconverters: {\\r\\n\\t\\t\"text script\": function( text ) {\\r\\n\\t\\t\\tjQuery.globalEval( text );\\r\\n\\t\\t\\treturn text;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// Handle cache\\'s special case and crossDomain\\r\\njQuery.ajaxPrefilter( \"script\", function( s ) {\\r\\n\\tif ( s.cache === undefined ) {\\r\\n\\t\\ts.cache = false;\\r\\n\\t}\\r\\n\\tif ( s.crossDomain ) {\\r\\n\\t\\ts.type = \"GET\";\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// Bind script tag hack transport\\r\\njQuery.ajaxTransport( \"script\", function( s ) {\\r\\n\\r\\n\\t// This transport only deals with cross domain or forced-by-attrs requests\\r\\n\\tif ( s.crossDomain || s.scriptAttrs ) {\\r\\n\\t\\tvar script, callback;\\r\\n\\t\\treturn {\\r\\n\\t\\t\\tsend: function( _, complete ) {\\r\\n\\t\\t\\t\\tscript = jQuery( \"<script>\" )\\r\\n\\t\\t\\t\\t\\t.attr( s.scriptAttrs || {} )\\r\\n\\t\\t\\t\\t\\t.prop( { charset: s.scriptCharset, src: s.url } )\\r\\n\\t\\t\\t\\t\\t.on( \"load error\", callback = function( evt ) {\\r\\n\\t\\t\\t\\t\\t\\tscript.remove();\\r\\n\\t\\t\\t\\t\\t\\tcallback = null;\\r\\n\\t\\t\\t\\t\\t\\tif ( evt ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t\\t// Use native DOM manipulation to avoid our domManip AJAX trickery\\r\\n\\t\\t\\t\\tdocument.head.appendChild( script[ 0 ] );\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\tabort: function() {\\r\\n\\t\\t\\t\\tif ( callback ) {\\r\\n\\t\\t\\t\\t\\tcallback();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t};\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nvar oldCallbacks = [],\\r\\n\\trjsonp = /(=)\\\\?(?=&|$)|\\\\?\\\\?/;\\r\\n\\r\\n// Default jsonp settings\\r\\njQuery.ajaxSetup( {\\r\\n\\tjsonp: \"callback\",\\r\\n\\tjsonpCallback: function() {\\r\\n\\t\\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce.guid++ ) );\\r\\n\\t\\tthis[ callback ] = true;\\r\\n\\t\\treturn callback;\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// Detect, normalize options and install callbacks for jsonp requests\\r\\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\\r\\n\\r\\n\\tvar callbackName, overwritten, responseContainer,\\r\\n\\t\\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\\r\\n\\t\\t\\t\"url\" :\\r\\n\\t\\t\\ttypeof s.data === \"string\" &&\\r\\n\\t\\t\\t\\t( s.contentType || \"\" )\\r\\n\\t\\t\\t\\t\\t.indexOf( \"application/x-www-form-urlencoded\" ) === 0 &&\\r\\n\\t\\t\\t\\trjsonp.test( s.data ) && \"data\"\\r\\n\\t\\t);\\r\\n\\r\\n\\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\\r\\n\\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\\r\\n\\r\\n\\t\\t// Get callback name, remembering preexisting value associated with it\\r\\n\\t\\tcallbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?\\r\\n\\t\\t\\ts.jsonpCallback() :\\r\\n\\t\\t\\ts.jsonpCallback;\\r\\n\\r\\n\\t\\t// Insert callback into url or form data\\r\\n\\t\\tif ( jsonProp ) {\\r\\n\\t\\t\\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\\r\\n\\t\\t} else if ( s.jsonp !== false ) {\\r\\n\\t\\t\\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Use data converter to retrieve json after script execution\\r\\n\\t\\ts.converters[ \"script json\" ] = function() {\\r\\n\\t\\t\\tif ( !responseContainer ) {\\r\\n\\t\\t\\t\\tjQuery.error( callbackName + \" was not called\" );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn responseContainer[ 0 ];\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// Force json dataType\\r\\n\\t\\ts.dataTypes[ 0 ] = \"json\";\\r\\n\\r\\n\\t\\t// Install callback\\r\\n\\t\\toverwritten = window[ callbackName ];\\r\\n\\t\\twindow[ callbackName ] = function() {\\r\\n\\t\\t\\tresponseContainer = arguments;\\r\\n\\t\\t};\\r\\n\\r\\n\\t\\t// Clean-up function (fires after converters)\\r\\n\\t\\tjqXHR.always( function() {\\r\\n\\r\\n\\t\\t\\t// If previous value didn\\'t exist - remove it\\r\\n\\t\\t\\tif ( overwritten === undefined ) {\\r\\n\\t\\t\\t\\tjQuery( window ).removeProp( callbackName );\\r\\n\\r\\n\\t\\t\\t// Otherwise restore preexisting value\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\twindow[ callbackName ] = overwritten;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Save back as free\\r\\n\\t\\t\\tif ( s[ callbackName ] ) {\\r\\n\\r\\n\\t\\t\\t\\t// Make sure that re-using the options doesn\\'t screw things around\\r\\n\\t\\t\\t\\ts.jsonpCallback = originalSettings.jsonpCallback;\\r\\n\\r\\n\\t\\t\\t\\t// Save the callback name for future use\\r\\n\\t\\t\\t\\toldCallbacks.push( callbackName );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Call if it was a function and we have a response\\r\\n\\t\\t\\tif ( responseContainer && isFunction( overwritten ) ) {\\r\\n\\t\\t\\t\\toverwritten( responseContainer[ 0 ] );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tresponseContainer = overwritten = undefined;\\r\\n\\t\\t} );\\r\\n\\r\\n\\t\\t// Delegate to script\\r\\n\\t\\treturn \"script\";\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// Support: Safari 8 only\\r\\n// In Safari 8 documents created via document.implementation.createHTMLDocument\\r\\n// collapse sibling forms: the second one becomes a child of the first one.\\r\\n// Because of that, this security measure has to be disabled in Safari 8.\\r\\n// https://bugs.webkit.org/show_bug.cgi?id=137337\\r\\nsupport.createHTMLDocument = ( function() {\\r\\n\\tvar body = document.implementation.createHTMLDocument( \"\" ).body;\\r\\n\\tbody.innerHTML = \"<form></form><form></form>\";\\r\\n\\treturn body.childNodes.length === 2;\\r\\n} )();\\r\\n\\r\\n\\r\\n// Argument \"data\" should be string of html\\r\\n// context (optional): If specified, the fragment will be created in this context,\\r\\n// defaults to document\\r\\n// keepScripts (optional): If true, will include scripts passed in the html string\\r\\njQuery.parseHTML = function( data, context, keepScripts ) {\\r\\n\\tif ( typeof data !== \"string\" ) {\\r\\n\\t\\treturn [];\\r\\n\\t}\\r\\n\\tif ( typeof context === \"boolean\" ) {\\r\\n\\t\\tkeepScripts = context;\\r\\n\\t\\tcontext = false;\\r\\n\\t}\\r\\n\\r\\n\\tvar base, parsed, scripts;\\r\\n\\r\\n\\tif ( !context ) {\\r\\n\\r\\n\\t\\t// Stop scripts or inline event handlers from being executed immediately\\r\\n\\t\\t// by using document.implementation\\r\\n\\t\\tif ( support.createHTMLDocument ) {\\r\\n\\t\\t\\tcontext = document.implementation.createHTMLDocument( \"\" );\\r\\n\\r\\n\\t\\t\\t// Set the base href for the created document\\r\\n\\t\\t\\t// so any parsed elements with URLs\\r\\n\\t\\t\\t// are based on the document\\'s URL (gh-2965)\\r\\n\\t\\t\\tbase = context.createElement( \"base\" );\\r\\n\\t\\t\\tbase.href = document.location.href;\\r\\n\\t\\t\\tcontext.head.appendChild( base );\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tcontext = document;\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n\\tparsed = rsingleTag.exec( data );\\r\\n\\tscripts = !keepScripts && [];\\r\\n\\r\\n\\t// Single tag\\r\\n\\tif ( parsed ) {\\r\\n\\t\\treturn [ context.createElement( parsed[ 1 ] ) ];\\r\\n\\t}\\r\\n\\r\\n\\tparsed = buildFragment( [ data ], context, scripts );\\r\\n\\r\\n\\tif ( scripts && scripts.length ) {\\r\\n\\t\\tjQuery( scripts ).remove();\\r\\n\\t}\\r\\n\\r\\n\\treturn jQuery.merge( [], parsed.childNodes );\\r\\n};\\r\\n\\r\\n\\r\\n/**\\r\\n * Load a url into a page\\r\\n */\\r\\njQuery.fn.load = function( url, params, callback ) {\\r\\n\\tvar selector, type, response,\\r\\n\\t\\tself = this,\\r\\n\\t\\toff = url.indexOf( \" \" );\\r\\n\\r\\n\\tif ( off > -1 ) {\\r\\n\\t\\tselector = stripAndCollapse( url.slice( off ) );\\r\\n\\t\\turl = url.slice( 0, off );\\r\\n\\t}\\r\\n\\r\\n\\t// If it\\'s a function\\r\\n\\tif ( isFunction( params ) ) {\\r\\n\\r\\n\\t\\t// We assume that it\\'s the callback\\r\\n\\t\\tcallback = params;\\r\\n\\t\\tparams = undefined;\\r\\n\\r\\n\\t// Otherwise, build a param string\\r\\n\\t} else if ( params && typeof params === \"object\" ) {\\r\\n\\t\\ttype = \"POST\";\\r\\n\\t}\\r\\n\\r\\n\\t// If we have elements to modify, make the request\\r\\n\\tif ( self.length > 0 ) {\\r\\n\\t\\tjQuery.ajax( {\\r\\n\\t\\t\\turl: url,\\r\\n\\r\\n\\t\\t\\t// If \"type\" variable is undefined, then \"GET\" method will be used.\\r\\n\\t\\t\\t// Make value of this field explicit since\\r\\n\\t\\t\\t// user can override it through ajaxSetup method\\r\\n\\t\\t\\ttype: type || \"GET\",\\r\\n\\t\\t\\tdataType: \"html\",\\r\\n\\t\\t\\tdata: params\\r\\n\\t\\t} ).done( function( responseText ) {\\r\\n\\r\\n\\t\\t\\t// Save response for use in complete callback\\r\\n\\t\\t\\tresponse = arguments;\\r\\n\\r\\n\\t\\t\\tself.html( selector ?\\r\\n\\r\\n\\t\\t\\t\\t// If a selector was specified, locate the right elements in a dummy div\\r\\n\\t\\t\\t\\t// Exclude scripts to avoid IE \\'Permission Denied\\' errors\\r\\n\\t\\t\\t\\tjQuery( \"<div>\" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :\\r\\n\\r\\n\\t\\t\\t\\t// Otherwise use the full result\\r\\n\\t\\t\\t\\tresponseText );\\r\\n\\r\\n\\t\\t// If the request succeeds, this function gets \"data\", \"status\", \"jqXHR\"\\r\\n\\t\\t// but they are ignored because response was set above.\\r\\n\\t\\t// If it fails, this function gets \"jqXHR\", \"status\", \"error\"\\r\\n\\t\\t} ).always( callback && function( jqXHR, status ) {\\r\\n\\t\\t\\tself.each( function() {\\r\\n\\t\\t\\t\\tcallback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );\\r\\n\\t\\t\\t} );\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n\\r\\n\\treturn this;\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\njQuery.expr.pseudos.animated = function( elem ) {\\r\\n\\treturn jQuery.grep( jQuery.timers, function( fn ) {\\r\\n\\t\\treturn elem === fn.elem;\\r\\n\\t} ).length;\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n\\r\\njQuery.offset = {\\r\\n\\tsetOffset: function( elem, options, i ) {\\r\\n\\t\\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\\r\\n\\t\\t\\tposition = jQuery.css( elem, \"position\" ),\\r\\n\\t\\t\\tcurElem = jQuery( elem ),\\r\\n\\t\\t\\tprops = {};\\r\\n\\r\\n\\t\\t// Set position first, in-case top/left are set even on static elem\\r\\n\\t\\tif ( position === \"static\" ) {\\r\\n\\t\\t\\telem.style.position = \"relative\";\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tcurOffset = curElem.offset();\\r\\n\\t\\tcurCSSTop = jQuery.css( elem, \"top\" );\\r\\n\\t\\tcurCSSLeft = jQuery.css( elem, \"left\" );\\r\\n\\t\\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\\r\\n\\t\\t\\t( curCSSTop + curCSSLeft ).indexOf( \"auto\" ) > -1;\\r\\n\\r\\n\\t\\t// Need to be able to calculate position if either\\r\\n\\t\\t// top or left is auto and position is either absolute or fixed\\r\\n\\t\\tif ( calculatePosition ) {\\r\\n\\t\\t\\tcurPosition = curElem.position();\\r\\n\\t\\t\\tcurTop = curPosition.top;\\r\\n\\t\\t\\tcurLeft = curPosition.left;\\r\\n\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tcurTop = parseFloat( curCSSTop ) || 0;\\r\\n\\t\\t\\tcurLeft = parseFloat( curCSSLeft ) || 0;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( isFunction( options ) ) {\\r\\n\\r\\n\\t\\t\\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\\r\\n\\t\\t\\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( options.top != null ) {\\r\\n\\t\\t\\tprops.top = ( options.top - curOffset.top ) + curTop;\\r\\n\\t\\t}\\r\\n\\t\\tif ( options.left != null ) {\\r\\n\\t\\t\\tprops.left = ( options.left - curOffset.left ) + curLeft;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( \"using\" in options ) {\\r\\n\\t\\t\\toptions.using.call( elem, props );\\r\\n\\r\\n\\t\\t} else {\\r\\n\\t\\t\\tif ( typeof props.top === \"number\" ) {\\r\\n\\t\\t\\t\\tprops.top += \"px\";\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( typeof props.left === \"number\" ) {\\r\\n\\t\\t\\t\\tprops.left += \"px\";\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tcurElem.css( props );\\r\\n\\t\\t}\\r\\n\\t}\\r\\n};\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\r\\n\\t// offset() relates an element\\'s border box to the document origin\\r\\n\\toffset: function( options ) {\\r\\n\\r\\n\\t\\t// Preserve chaining for setter\\r\\n\\t\\tif ( arguments.length ) {\\r\\n\\t\\t\\treturn options === undefined ?\\r\\n\\t\\t\\t\\tthis :\\r\\n\\t\\t\\t\\tthis.each( function( i ) {\\r\\n\\t\\t\\t\\t\\tjQuery.offset.setOffset( this, options, i );\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar rect, win,\\r\\n\\t\\t\\telem = this[ 0 ];\\r\\n\\r\\n\\t\\tif ( !elem ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\\r\\n\\t\\t// Support: IE <=11 only\\r\\n\\t\\t// Running getBoundingClientRect on a\\r\\n\\t\\t// disconnected node in IE throws an error\\r\\n\\t\\tif ( !elem.getClientRects().length ) {\\r\\n\\t\\t\\treturn { top: 0, left: 0 };\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Get document-relative position by adding viewport scroll to viewport-relative gBCR\\r\\n\\t\\trect = elem.getBoundingClientRect();\\r\\n\\t\\twin = elem.ownerDocument.defaultView;\\r\\n\\t\\treturn {\\r\\n\\t\\t\\ttop: rect.top + win.pageYOffset,\\r\\n\\t\\t\\tleft: rect.left + win.pageXOffset\\r\\n\\t\\t};\\r\\n\\t},\\r\\n\\r\\n\\t// position() relates an element\\'s margin box to its offset parent\\'s padding box\\r\\n\\t// This corresponds to the behavior of CSS absolute positioning\\r\\n\\tposition: function() {\\r\\n\\t\\tif ( !this[ 0 ] ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tvar offsetParent, offset, doc,\\r\\n\\t\\t\\telem = this[ 0 ],\\r\\n\\t\\t\\tparentOffset = { top: 0, left: 0 };\\r\\n\\r\\n\\t\\t// position:fixed elements are offset from the viewport, which itself always has zero offset\\r\\n\\t\\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\\r\\n\\r\\n\\t\\t\\t// Assume position:fixed implies availability of getBoundingClientRect\\r\\n\\t\\t\\toffset = elem.getBoundingClientRect();\\r\\n\\r\\n\\t\\t} else {\\r\\n\\t\\t\\toffset = this.offset();\\r\\n\\r\\n\\t\\t\\t// Account for the *real* offset parent, which can be the document or its root element\\r\\n\\t\\t\\t// when a statically positioned element is identified\\r\\n\\t\\t\\tdoc = elem.ownerDocument;\\r\\n\\t\\t\\toffsetParent = elem.offsetParent || doc.documentElement;\\r\\n\\t\\t\\twhile ( offsetParent &&\\r\\n\\t\\t\\t\\t( offsetParent === doc.body || offsetParent === doc.documentElement ) &&\\r\\n\\t\\t\\t\\tjQuery.css( offsetParent, \"position\" ) === \"static\" ) {\\r\\n\\r\\n\\t\\t\\t\\toffsetParent = offsetParent.parentNode;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {\\r\\n\\r\\n\\t\\t\\t\\t// Incorporate borders into its offset, since they are outside its content origin\\r\\n\\t\\t\\t\\tparentOffset = jQuery( offsetParent ).offset();\\r\\n\\t\\t\\t\\tparentOffset.top += jQuery.css( offsetParent, \"borderTopWidth\", true );\\r\\n\\t\\t\\t\\tparentOffset.left += jQuery.css( offsetParent, \"borderLeftWidth\", true );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Subtract parent offsets and element margins\\r\\n\\t\\treturn {\\r\\n\\t\\t\\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\\r\\n\\t\\t\\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\\r\\n\\t\\t};\\r\\n\\t},\\r\\n\\r\\n\\t// This method will return documentElement in the following cases:\\r\\n\\t// 1) For the element inside the iframe without offsetParent, this method will return\\r\\n\\t//    documentElement of the parent window\\r\\n\\t// 2) For the hidden or detached element\\r\\n\\t// 3) For body or html element, i.e. in case of the html node - it will return itself\\r\\n\\t//\\r\\n\\t// but those exceptions were never presented as a real life use-cases\\r\\n\\t// and might be considered as more preferable results.\\r\\n\\t//\\r\\n\\t// This logic, however, is not guaranteed and can change at any point in the future\\r\\n\\toffsetParent: function() {\\r\\n\\t\\treturn this.map( function() {\\r\\n\\t\\t\\tvar offsetParent = this.offsetParent;\\r\\n\\r\\n\\t\\t\\twhile ( offsetParent && jQuery.css( offsetParent, \"position\" ) === \"static\" ) {\\r\\n\\t\\t\\t\\toffsetParent = offsetParent.offsetParent;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn offsetParent || documentElement;\\r\\n\\t\\t} );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// Create scrollLeft and scrollTop methods\\r\\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\\r\\n\\tvar top = \"pageYOffset\" === prop;\\r\\n\\r\\n\\tjQuery.fn[ method ] = function( val ) {\\r\\n\\t\\treturn access( this, function( elem, method, val ) {\\r\\n\\r\\n\\t\\t\\t// Coalesce documents and windows\\r\\n\\t\\t\\tvar win;\\r\\n\\t\\t\\tif ( isWindow( elem ) ) {\\r\\n\\t\\t\\t\\twin = elem;\\r\\n\\t\\t\\t} else if ( elem.nodeType === 9 ) {\\r\\n\\t\\t\\t\\twin = elem.defaultView;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( val === undefined ) {\\r\\n\\t\\t\\t\\treturn win ? win[ prop ] : elem[ method ];\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( win ) {\\r\\n\\t\\t\\t\\twin.scrollTo(\\r\\n\\t\\t\\t\\t\\t!top ? val : win.pageXOffset,\\r\\n\\t\\t\\t\\t\\ttop ? val : win.pageYOffset\\r\\n\\t\\t\\t\\t);\\r\\n\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\telem[ method ] = val;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}, method, val, arguments.length );\\r\\n\\t};\\r\\n} );\\r\\n\\r\\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\\r\\n// Add the top/left cssHooks using jQuery.fn.position\\r\\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\\r\\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\\r\\n// getComputedStyle returns percent when specified for top/left/bottom/right;\\r\\n// rather than make the css module depend on the offset module, just check for it here\\r\\njQuery.each( [ \"top\", \"left\" ], function( _i, prop ) {\\r\\n\\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\\r\\n\\t\\tfunction( elem, computed ) {\\r\\n\\t\\t\\tif ( computed ) {\\r\\n\\t\\t\\t\\tcomputed = curCSS( elem, prop );\\r\\n\\r\\n\\t\\t\\t\\t// If curCSS returns percentage, fallback to offset\\r\\n\\t\\t\\t\\treturn rnumnonpx.test( computed ) ?\\r\\n\\t\\t\\t\\t\\tjQuery( elem ).position()[ prop ] + \"px\" :\\r\\n\\t\\t\\t\\t\\tcomputed;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t);\\r\\n} );\\r\\n\\r\\n\\r\\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\\r\\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\\r\\n\\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name },\\r\\n\\t\\tfunction( defaultExtra, funcName ) {\\r\\n\\r\\n\\t\\t// Margin is only for outerHeight, outerWidth\\r\\n\\t\\tjQuery.fn[ funcName ] = function( margin, value ) {\\r\\n\\t\\t\\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\\r\\n\\t\\t\\t\\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\\r\\n\\r\\n\\t\\t\\treturn access( this, function( elem, type, value ) {\\r\\n\\t\\t\\t\\tvar doc;\\r\\n\\r\\n\\t\\t\\t\\tif ( isWindow( elem ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\\r\\n\\t\\t\\t\\t\\treturn funcName.indexOf( \"outer\" ) === 0 ?\\r\\n\\t\\t\\t\\t\\t\\telem[ \"inner\" + name ] :\\r\\n\\t\\t\\t\\t\\t\\telem.document.documentElement[ \"client\" + name ];\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Get document width or height\\r\\n\\t\\t\\t\\tif ( elem.nodeType === 9 ) {\\r\\n\\t\\t\\t\\t\\tdoc = elem.documentElement;\\r\\n\\r\\n\\t\\t\\t\\t\\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\\r\\n\\t\\t\\t\\t\\t// whichever is greatest\\r\\n\\t\\t\\t\\t\\treturn Math.max(\\r\\n\\t\\t\\t\\t\\t\\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\\r\\n\\t\\t\\t\\t\\t\\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\\r\\n\\t\\t\\t\\t\\t\\tdoc[ \"client\" + name ]\\r\\n\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn value === undefined ?\\r\\n\\r\\n\\t\\t\\t\\t\\t// Get width or height on the element, requesting but not forcing parseFloat\\r\\n\\t\\t\\t\\t\\tjQuery.css( elem, type, extra ) :\\r\\n\\r\\n\\t\\t\\t\\t\\t// Set width or height on the element\\r\\n\\t\\t\\t\\t\\tjQuery.style( elem, type, value, extra );\\r\\n\\t\\t\\t}, type, chainable ? margin : undefined, chainable );\\r\\n\\t\\t};\\r\\n\\t} );\\r\\n} );\\r\\n\\r\\n\\r\\njQuery.each( [\\r\\n\\t\"ajaxStart\",\\r\\n\\t\"ajaxStop\",\\r\\n\\t\"ajaxComplete\",\\r\\n\\t\"ajaxError\",\\r\\n\\t\"ajaxSuccess\",\\r\\n\\t\"ajaxSend\"\\r\\n], function( _i, type ) {\\r\\n\\tjQuery.fn[ type ] = function( fn ) {\\r\\n\\t\\treturn this.on( type, fn );\\r\\n\\t};\\r\\n} );\\r\\n\\r\\n\\r\\n\\r\\n\\r\\njQuery.fn.extend( {\\r\\n\\r\\n\\tbind: function( types, data, fn ) {\\r\\n\\t\\treturn this.on( types, null, data, fn );\\r\\n\\t},\\r\\n\\tunbind: function( types, fn ) {\\r\\n\\t\\treturn this.off( types, null, fn );\\r\\n\\t},\\r\\n\\r\\n\\tdelegate: function( selector, types, data, fn ) {\\r\\n\\t\\treturn this.on( types, selector, data, fn );\\r\\n\\t},\\r\\n\\tundelegate: function( selector, types, fn ) {\\r\\n\\r\\n\\t\\t// ( namespace ) or ( selector, types [, fn] )\\r\\n\\t\\treturn arguments.length === 1 ?\\r\\n\\t\\t\\tthis.off( selector, \"**\" ) :\\r\\n\\t\\t\\tthis.off( types, selector || \"**\", fn );\\r\\n\\t},\\r\\n\\r\\n\\thover: function( fnOver, fnOut ) {\\r\\n\\t\\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\njQuery.each( ( \"blur focus focusin focusout resize scroll click dblclick \" +\\r\\n\\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\\r\\n\\t\"change select submit keydown keypress keyup contextmenu\" ).split( \" \" ),\\r\\n\\tfunction( _i, name ) {\\r\\n\\r\\n\\t\\t// Handle event binding\\r\\n\\t\\tjQuery.fn[ name ] = function( data, fn ) {\\r\\n\\t\\t\\treturn arguments.length > 0 ?\\r\\n\\t\\t\\t\\tthis.on( name, null, data, fn ) :\\r\\n\\t\\t\\t\\tthis.trigger( name );\\r\\n\\t\\t};\\r\\n\\t} );\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n// Support: Android <=4.0 only\\r\\n// Make sure we trim BOM and NBSP\\r\\nvar rtrim = /^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g;\\r\\n\\r\\n// Bind a function to a context, optionally partially applying any\\r\\n// arguments.\\r\\n// jQuery.proxy is deprecated to promote standards (specifically Function#bind)\\r\\n// However, it is not slated for removal any time soon\\r\\njQuery.proxy = function( fn, context ) {\\r\\n\\tvar tmp, args, proxy;\\r\\n\\r\\n\\tif ( typeof context === \"string\" ) {\\r\\n\\t\\ttmp = fn[ context ];\\r\\n\\t\\tcontext = fn;\\r\\n\\t\\tfn = tmp;\\r\\n\\t}\\r\\n\\r\\n\\t// Quick check to determine if target is callable, in the spec\\r\\n\\t// this throws a TypeError, but we will just return undefined.\\r\\n\\tif ( !isFunction( fn ) ) {\\r\\n\\t\\treturn undefined;\\r\\n\\t}\\r\\n\\r\\n\\t// Simulated bind\\r\\n\\targs = slice.call( arguments, 2 );\\r\\n\\tproxy = function() {\\r\\n\\t\\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\\r\\n\\t};\\r\\n\\r\\n\\t// Set the guid of unique handler to the same of original handler, so it can be removed\\r\\n\\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\\r\\n\\r\\n\\treturn proxy;\\r\\n};\\r\\n\\r\\njQuery.holdReady = function( hold ) {\\r\\n\\tif ( hold ) {\\r\\n\\t\\tjQuery.readyWait++;\\r\\n\\t} else {\\r\\n\\t\\tjQuery.ready( true );\\r\\n\\t}\\r\\n};\\r\\njQuery.isArray = Array.isArray;\\r\\njQuery.parseJSON = JSON.parse;\\r\\njQuery.nodeName = nodeName;\\r\\njQuery.isFunction = isFunction;\\r\\njQuery.isWindow = isWindow;\\r\\njQuery.camelCase = camelCase;\\r\\njQuery.type = toType;\\r\\n\\r\\njQuery.now = Date.now;\\r\\n\\r\\njQuery.isNumeric = function( obj ) {\\r\\n\\r\\n\\t// As of jQuery 3.0, isNumeric is limited to\\r\\n\\t// strings and numbers (primitives or objects)\\r\\n\\t// that can be coerced to finite numbers (gh-2662)\\r\\n\\tvar type = jQuery.type( obj );\\r\\n\\treturn ( type === \"number\" || type === \"string\" ) &&\\r\\n\\r\\n\\t\\t// parseFloat NaNs numeric-cast false positives (\"\")\\r\\n\\t\\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\\r\\n\\t\\t// subtraction forces infinities to NaN\\r\\n\\t\\t!isNaN( obj - parseFloat( obj ) );\\r\\n};\\r\\n\\r\\njQuery.trim = function( text ) {\\r\\n\\treturn text == null ?\\r\\n\\t\\t\"\" :\\r\\n\\t\\t( text + \"\" ).replace( rtrim, \"\" );\\r\\n};\\r\\n\\r\\n\\r\\n\\r\\n// Register as a named AMD module, since jQuery can be concatenated with other\\r\\n// files that may use define, but not via a proper concatenation script that\\r\\n// understands anonymous AMD modules. A named AMD is safest and most robust\\r\\n// way to register. Lowercase jquery is used because AMD module names are\\r\\n// derived from file names, and jQuery is normally delivered in a lowercase\\r\\n// file name. Do this after creating the global so that if an AMD module wants\\r\\n// to call noConflict to hide this version of jQuery, it will work.\\r\\n\\r\\n// Note that for maximum portability, libraries that are not jQuery should\\r\\n// declare themselves as anonymous modules, and avoid setting a global if an\\r\\n// AMD loader is present. jQuery is a special case. For more information, see\\r\\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\\r\\n\\r\\nif ( true ) {\\r\\n\\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {\\r\\n\\t\\treturn jQuery;\\r\\n\\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nvar\\r\\n\\r\\n\\t// Map over jQuery in case of overwrite\\r\\n\\t_jQuery = window.jQuery,\\r\\n\\r\\n\\t// Map over the $ in case of overwrite\\r\\n\\t_$ = window.$;\\r\\n\\r\\njQuery.noConflict = function( deep ) {\\r\\n\\tif ( window.$ === jQuery ) {\\r\\n\\t\\twindow.$ = _$;\\r\\n\\t}\\r\\n\\r\\n\\tif ( deep && window.jQuery === jQuery ) {\\r\\n\\t\\twindow.jQuery = _jQuery;\\r\\n\\t}\\r\\n\\r\\n\\treturn jQuery;\\r\\n};\\r\\n\\r\\n// Expose jQuery and $ identifiers, even in AMD\\r\\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\\r\\n// and CommonJS for browser emulators (#13566)\\r\\nif ( typeof noGlobal === \"undefined\" ) {\\r\\n\\twindow.jQuery = window.$ = jQuery;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\nreturn jQuery;\\r\\n} );\\r\\n\\n\\n//# sourceURL=webpack:///./node_modules/jquery/dist/jquery.js?')},SYky:function(module,exports,__webpack_require__){eval(\"/*!\\r\\n  * Bootstrap v4.5.2 (https://getbootstrap.com/)\\r\\n  * Copyright 2011-2020 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\\r\\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\\r\\n  */\\r\\n(function (global, factory) {\\r\\n   true ? factory(exports, __webpack_require__(/*! jquery */ \\\"EVdn\\\"), __webpack_require__(/*! popper.js */ \\\"8L3F\\\")) :\\r\\n  undefined;\\r\\n}(this, (function (exports, $, Popper) { 'use strict';\\r\\n\\r\\n  $ = $ && Object.prototype.hasOwnProperty.call($, 'default') ? $['default'] : $;\\r\\n  Popper = Popper && Object.prototype.hasOwnProperty.call(Popper, 'default') ? Popper['default'] : Popper;\\r\\n\\r\\n  function _defineProperties(target, props) {\\r\\n    for (var i = 0; i < props.length; i++) {\\r\\n      var descriptor = props[i];\\r\\n      descriptor.enumerable = descriptor.enumerable || false;\\r\\n      descriptor.configurable = true;\\r\\n      if (\\\"value\\\" in descriptor) descriptor.writable = true;\\r\\n      Object.defineProperty(target, descriptor.key, descriptor);\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function _createClass(Constructor, protoProps, staticProps) {\\r\\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\\r\\n    if (staticProps) _defineProperties(Constructor, staticProps);\\r\\n    return Constructor;\\r\\n  }\\r\\n\\r\\n  function _extends() {\\r\\n    _extends = Object.assign || function (target) {\\r\\n      for (var i = 1; i < arguments.length; i++) {\\r\\n        var source = arguments[i];\\r\\n\\r\\n        for (var key in source) {\\r\\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\\r\\n            target[key] = source[key];\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n\\r\\n      return target;\\r\\n    };\\r\\n\\r\\n    return _extends.apply(this, arguments);\\r\\n  }\\r\\n\\r\\n  function _inheritsLoose(subClass, superClass) {\\r\\n    subClass.prototype = Object.create(superClass.prototype);\\r\\n    subClass.prototype.constructor = subClass;\\r\\n    subClass.__proto__ = superClass;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * --------------------------------------------------------------------------\\r\\n   * Bootstrap (v4.5.2): util.js\\r\\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\\r\\n   * --------------------------------------------------------------------------\\r\\n   */\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Private TransitionEnd Helpers\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var TRANSITION_END = 'transitionend';\\r\\n  var MAX_UID = 1000000;\\r\\n  var MILLISECONDS_MULTIPLIER = 1000; // Shoutout AngusCroll (https://goo.gl/pxwQGp)\\r\\n\\r\\n  function toType(obj) {\\r\\n    if (obj === null || typeof obj === 'undefined') {\\r\\n      return \\\"\\\" + obj;\\r\\n    }\\r\\n\\r\\n    return {}.toString.call(obj).match(/\\\\s([a-z]+)/i)[1].toLowerCase();\\r\\n  }\\r\\n\\r\\n  function getSpecialTransitionEndEvent() {\\r\\n    return {\\r\\n      bindType: TRANSITION_END,\\r\\n      delegateType: TRANSITION_END,\\r\\n      handle: function handle(event) {\\r\\n        if ($(event.target).is(this)) {\\r\\n          return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\\r\\n        }\\r\\n\\r\\n        return undefined;\\r\\n      }\\r\\n    };\\r\\n  }\\r\\n\\r\\n  function transitionEndEmulator(duration) {\\r\\n    var _this = this;\\r\\n\\r\\n    var called = false;\\r\\n    $(this).one(Util.TRANSITION_END, function () {\\r\\n      called = true;\\r\\n    });\\r\\n    setTimeout(function () {\\r\\n      if (!called) {\\r\\n        Util.triggerTransitionEnd(_this);\\r\\n      }\\r\\n    }, duration);\\r\\n    return this;\\r\\n  }\\r\\n\\r\\n  function setTransitionEndSupport() {\\r\\n    $.fn.emulateTransitionEnd = transitionEndEmulator;\\r\\n    $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\\r\\n  }\\r\\n  /**\\r\\n   * --------------------------------------------------------------------------\\r\\n   * Public Util Api\\r\\n   * --------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  var Util = {\\r\\n    TRANSITION_END: 'bsTransitionEnd',\\r\\n    getUID: function getUID(prefix) {\\r\\n      do {\\r\\n        // eslint-disable-next-line no-bitwise\\r\\n        prefix += ~~(Math.random() * MAX_UID); // \\\"~~\\\" acts like a faster Math.floor() here\\r\\n      } while (document.getElementById(prefix));\\r\\n\\r\\n      return prefix;\\r\\n    },\\r\\n    getSelectorFromElement: function getSelectorFromElement(element) {\\r\\n      var selector = element.getAttribute('data-target');\\r\\n\\r\\n      if (!selector || selector === '#') {\\r\\n        var hrefAttr = element.getAttribute('href');\\r\\n        selector = hrefAttr && hrefAttr !== '#' ? hrefAttr.trim() : '';\\r\\n      }\\r\\n\\r\\n      try {\\r\\n        return document.querySelector(selector) ? selector : null;\\r\\n      } catch (err) {\\r\\n        return null;\\r\\n      }\\r\\n    },\\r\\n    getTransitionDurationFromElement: function getTransitionDurationFromElement(element) {\\r\\n      if (!element) {\\r\\n        return 0;\\r\\n      } // Get transition-duration of the element\\r\\n\\r\\n\\r\\n      var transitionDuration = $(element).css('transition-duration');\\r\\n      var transitionDelay = $(element).css('transition-delay');\\r\\n      var floatTransitionDuration = parseFloat(transitionDuration);\\r\\n      var floatTransitionDelay = parseFloat(transitionDelay); // Return 0 if element or transition duration is not found\\r\\n\\r\\n      if (!floatTransitionDuration && !floatTransitionDelay) {\\r\\n        return 0;\\r\\n      } // If multiple durations are defined, take the first\\r\\n\\r\\n\\r\\n      transitionDuration = transitionDuration.split(',')[0];\\r\\n      transitionDelay = transitionDelay.split(',')[0];\\r\\n      return (parseFloat(transitionDuration) + parseFloat(transitionDelay)) * MILLISECONDS_MULTIPLIER;\\r\\n    },\\r\\n    reflow: function reflow(element) {\\r\\n      return element.offsetHeight;\\r\\n    },\\r\\n    triggerTransitionEnd: function triggerTransitionEnd(element) {\\r\\n      $(element).trigger(TRANSITION_END);\\r\\n    },\\r\\n    // TODO: Remove in v5\\r\\n    supportsTransitionEnd: function supportsTransitionEnd() {\\r\\n      return Boolean(TRANSITION_END);\\r\\n    },\\r\\n    isElement: function isElement(obj) {\\r\\n      return (obj[0] || obj).nodeType;\\r\\n    },\\r\\n    typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\\r\\n      for (var property in configTypes) {\\r\\n        if (Object.prototype.hasOwnProperty.call(configTypes, property)) {\\r\\n          var expectedTypes = configTypes[property];\\r\\n          var value = config[property];\\r\\n          var valueType = value && Util.isElement(value) ? 'element' : toType(value);\\r\\n\\r\\n          if (!new RegExp(expectedTypes).test(valueType)) {\\r\\n            throw new Error(componentName.toUpperCase() + \\\": \\\" + (\\\"Option \\\\\\\"\\\" + property + \\\"\\\\\\\" provided type \\\\\\\"\\\" + valueType + \\\"\\\\\\\" \\\") + (\\\"but expected type \\\\\\\"\\\" + expectedTypes + \\\"\\\\\\\".\\\"));\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n    },\\r\\n    findShadowRoot: function findShadowRoot(element) {\\r\\n      if (!document.documentElement.attachShadow) {\\r\\n        return null;\\r\\n      } // Can find the shadow root otherwise it'll return the document\\r\\n\\r\\n\\r\\n      if (typeof element.getRootNode === 'function') {\\r\\n        var root = element.getRootNode();\\r\\n        return root instanceof ShadowRoot ? root : null;\\r\\n      }\\r\\n\\r\\n      if (element instanceof ShadowRoot) {\\r\\n        return element;\\r\\n      } // when we don't find a shadow root\\r\\n\\r\\n\\r\\n      if (!element.parentNode) {\\r\\n        return null;\\r\\n      }\\r\\n\\r\\n      return Util.findShadowRoot(element.parentNode);\\r\\n    },\\r\\n    jQueryDetection: function jQueryDetection() {\\r\\n      if (typeof $ === 'undefined') {\\r\\n        throw new TypeError('Bootstrap\\\\'s JavaScript requires jQuery. jQuery must be included before Bootstrap\\\\'s JavaScript.');\\r\\n      }\\r\\n\\r\\n      var version = $.fn.jquery.split(' ')[0].split('.');\\r\\n      var minMajor = 1;\\r\\n      var ltMajor = 2;\\r\\n      var minMinor = 9;\\r\\n      var minPatch = 1;\\r\\n      var maxMajor = 4;\\r\\n\\r\\n      if (version[0] < ltMajor && version[1] < minMinor || version[0] === minMajor && version[1] === minMinor && version[2] < minPatch || version[0] >= maxMajor) {\\r\\n        throw new Error('Bootstrap\\\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0');\\r\\n      }\\r\\n    }\\r\\n  };\\r\\n  Util.jQueryDetection();\\r\\n  setTransitionEndSupport();\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME = 'alert';\\r\\n  var VERSION = '4.5.2';\\r\\n  var DATA_KEY = 'bs.alert';\\r\\n  var EVENT_KEY = \\\".\\\" + DATA_KEY;\\r\\n  var DATA_API_KEY = '.data-api';\\r\\n  var JQUERY_NO_CONFLICT = $.fn[NAME];\\r\\n  var SELECTOR_DISMISS = '[data-dismiss=\\\"alert\\\"]';\\r\\n  var EVENT_CLOSE = \\\"close\\\" + EVENT_KEY;\\r\\n  var EVENT_CLOSED = \\\"closed\\\" + EVENT_KEY;\\r\\n  var EVENT_CLICK_DATA_API = \\\"click\\\" + EVENT_KEY + DATA_API_KEY;\\r\\n  var CLASS_NAME_ALERT = 'alert';\\r\\n  var CLASS_NAME_FADE = 'fade';\\r\\n  var CLASS_NAME_SHOW = 'show';\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Alert = /*#__PURE__*/function () {\\r\\n    function Alert(element) {\\r\\n      this._element = element;\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = Alert.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.close = function close(element) {\\r\\n      var rootElement = this._element;\\r\\n\\r\\n      if (element) {\\r\\n        rootElement = this._getRootElement(element);\\r\\n      }\\r\\n\\r\\n      var customEvent = this._triggerCloseEvent(rootElement);\\r\\n\\r\\n      if (customEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      this._removeElement(rootElement);\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      $.removeData(this._element, DATA_KEY);\\r\\n      this._element = null;\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._getRootElement = function _getRootElement(element) {\\r\\n      var selector = Util.getSelectorFromElement(element);\\r\\n      var parent = false;\\r\\n\\r\\n      if (selector) {\\r\\n        parent = document.querySelector(selector);\\r\\n      }\\r\\n\\r\\n      if (!parent) {\\r\\n        parent = $(element).closest(\\\".\\\" + CLASS_NAME_ALERT)[0];\\r\\n      }\\r\\n\\r\\n      return parent;\\r\\n    };\\r\\n\\r\\n    _proto._triggerCloseEvent = function _triggerCloseEvent(element) {\\r\\n      var closeEvent = $.Event(EVENT_CLOSE);\\r\\n      $(element).trigger(closeEvent);\\r\\n      return closeEvent;\\r\\n    };\\r\\n\\r\\n    _proto._removeElement = function _removeElement(element) {\\r\\n      var _this = this;\\r\\n\\r\\n      $(element).removeClass(CLASS_NAME_SHOW);\\r\\n\\r\\n      if (!$(element).hasClass(CLASS_NAME_FADE)) {\\r\\n        this._destroyElement(element);\\r\\n\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var transitionDuration = Util.getTransitionDurationFromElement(element);\\r\\n      $(element).one(Util.TRANSITION_END, function (event) {\\r\\n        return _this._destroyElement(element, event);\\r\\n      }).emulateTransitionEnd(transitionDuration);\\r\\n    };\\r\\n\\r\\n    _proto._destroyElement = function _destroyElement(element) {\\r\\n      $(element).detach().trigger(EVENT_CLOSED).remove();\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Alert._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var $element = $(this);\\r\\n        var data = $element.data(DATA_KEY);\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Alert(this);\\r\\n          $element.data(DATA_KEY, data);\\r\\n        }\\r\\n\\r\\n        if (config === 'close') {\\r\\n          data[config](this);\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    Alert._handleDismiss = function _handleDismiss(alertInstance) {\\r\\n      return function (event) {\\r\\n        if (event) {\\r\\n          event.preventDefault();\\r\\n        }\\r\\n\\r\\n        alertInstance.close(this);\\r\\n      };\\r\\n    };\\r\\n\\r\\n    _createClass(Alert, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Alert;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Data Api implementation\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $(document).on(EVENT_CLICK_DATA_API, SELECTOR_DISMISS, Alert._handleDismiss(new Alert()));\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  $.fn[NAME] = Alert._jQueryInterface;\\r\\n  $.fn[NAME].Constructor = Alert;\\r\\n\\r\\n  $.fn[NAME].noConflict = function () {\\r\\n    $.fn[NAME] = JQUERY_NO_CONFLICT;\\r\\n    return Alert._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$1 = 'button';\\r\\n  var VERSION$1 = '4.5.2';\\r\\n  var DATA_KEY$1 = 'bs.button';\\r\\n  var EVENT_KEY$1 = \\\".\\\" + DATA_KEY$1;\\r\\n  var DATA_API_KEY$1 = '.data-api';\\r\\n  var JQUERY_NO_CONFLICT$1 = $.fn[NAME$1];\\r\\n  var CLASS_NAME_ACTIVE = 'active';\\r\\n  var CLASS_NAME_BUTTON = 'btn';\\r\\n  var CLASS_NAME_FOCUS = 'focus';\\r\\n  var SELECTOR_DATA_TOGGLE_CARROT = '[data-toggle^=\\\"button\\\"]';\\r\\n  var SELECTOR_DATA_TOGGLES = '[data-toggle=\\\"buttons\\\"]';\\r\\n  var SELECTOR_DATA_TOGGLE = '[data-toggle=\\\"button\\\"]';\\r\\n  var SELECTOR_DATA_TOGGLES_BUTTONS = '[data-toggle=\\\"buttons\\\"] .btn';\\r\\n  var SELECTOR_INPUT = 'input:not([type=\\\"hidden\\\"])';\\r\\n  var SELECTOR_ACTIVE = '.active';\\r\\n  var SELECTOR_BUTTON = '.btn';\\r\\n  var EVENT_CLICK_DATA_API$1 = \\\"click\\\" + EVENT_KEY$1 + DATA_API_KEY$1;\\r\\n  var EVENT_FOCUS_BLUR_DATA_API = \\\"focus\\\" + EVENT_KEY$1 + DATA_API_KEY$1 + \\\" \\\" + (\\\"blur\\\" + EVENT_KEY$1 + DATA_API_KEY$1);\\r\\n  var EVENT_LOAD_DATA_API = \\\"load\\\" + EVENT_KEY$1 + DATA_API_KEY$1;\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Button = /*#__PURE__*/function () {\\r\\n    function Button(element) {\\r\\n      this._element = element;\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = Button.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.toggle = function toggle() {\\r\\n      var triggerChangeEvent = true;\\r\\n      var addAriaPressed = true;\\r\\n      var rootElement = $(this._element).closest(SELECTOR_DATA_TOGGLES)[0];\\r\\n\\r\\n      if (rootElement) {\\r\\n        var input = this._element.querySelector(SELECTOR_INPUT);\\r\\n\\r\\n        if (input) {\\r\\n          if (input.type === 'radio') {\\r\\n            if (input.checked && this._element.classList.contains(CLASS_NAME_ACTIVE)) {\\r\\n              triggerChangeEvent = false;\\r\\n            } else {\\r\\n              var activeElement = rootElement.querySelector(SELECTOR_ACTIVE);\\r\\n\\r\\n              if (activeElement) {\\r\\n                $(activeElement).removeClass(CLASS_NAME_ACTIVE);\\r\\n              }\\r\\n            }\\r\\n          }\\r\\n\\r\\n          if (triggerChangeEvent) {\\r\\n            // if it's not a radio button or checkbox don't add a pointless/invalid checked property to the input\\r\\n            if (input.type === 'checkbox' || input.type === 'radio') {\\r\\n              input.checked = !this._element.classList.contains(CLASS_NAME_ACTIVE);\\r\\n            }\\r\\n\\r\\n            $(input).trigger('change');\\r\\n          }\\r\\n\\r\\n          input.focus();\\r\\n          addAriaPressed = false;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (!(this._element.hasAttribute('disabled') || this._element.classList.contains('disabled'))) {\\r\\n        if (addAriaPressed) {\\r\\n          this._element.setAttribute('aria-pressed', !this._element.classList.contains(CLASS_NAME_ACTIVE));\\r\\n        }\\r\\n\\r\\n        if (triggerChangeEvent) {\\r\\n          $(this._element).toggleClass(CLASS_NAME_ACTIVE);\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      $.removeData(this._element, DATA_KEY$1);\\r\\n      this._element = null;\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Button._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var data = $(this).data(DATA_KEY$1);\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Button(this);\\r\\n          $(this).data(DATA_KEY$1, data);\\r\\n        }\\r\\n\\r\\n        if (config === 'toggle') {\\r\\n          data[config]();\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _createClass(Button, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION$1;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Button;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Data Api implementation\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $(document).on(EVENT_CLICK_DATA_API$1, SELECTOR_DATA_TOGGLE_CARROT, function (event) {\\r\\n    var button = event.target;\\r\\n    var initialButton = button;\\r\\n\\r\\n    if (!$(button).hasClass(CLASS_NAME_BUTTON)) {\\r\\n      button = $(button).closest(SELECTOR_BUTTON)[0];\\r\\n    }\\r\\n\\r\\n    if (!button || button.hasAttribute('disabled') || button.classList.contains('disabled')) {\\r\\n      event.preventDefault(); // work around Firefox bug #1540995\\r\\n    } else {\\r\\n      var inputBtn = button.querySelector(SELECTOR_INPUT);\\r\\n\\r\\n      if (inputBtn && (inputBtn.hasAttribute('disabled') || inputBtn.classList.contains('disabled'))) {\\r\\n        event.preventDefault(); // work around Firefox bug #1540995\\r\\n\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (initialButton.tagName !== 'LABEL' || inputBtn && inputBtn.type !== 'checkbox') {\\r\\n        Button._jQueryInterface.call($(button), 'toggle');\\r\\n      }\\r\\n    }\\r\\n  }).on(EVENT_FOCUS_BLUR_DATA_API, SELECTOR_DATA_TOGGLE_CARROT, function (event) {\\r\\n    var button = $(event.target).closest(SELECTOR_BUTTON)[0];\\r\\n    $(button).toggleClass(CLASS_NAME_FOCUS, /^focus(in)?$/.test(event.type));\\r\\n  });\\r\\n  $(window).on(EVENT_LOAD_DATA_API, function () {\\r\\n    // ensure correct active class is set to match the controls' actual values/states\\r\\n    // find all checkboxes/readio buttons inside data-toggle groups\\r\\n    var buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLES_BUTTONS));\\r\\n\\r\\n    for (var i = 0, len = buttons.length; i < len; i++) {\\r\\n      var button = buttons[i];\\r\\n      var input = button.querySelector(SELECTOR_INPUT);\\r\\n\\r\\n      if (input.checked || input.hasAttribute('checked')) {\\r\\n        button.classList.add(CLASS_NAME_ACTIVE);\\r\\n      } else {\\r\\n        button.classList.remove(CLASS_NAME_ACTIVE);\\r\\n      }\\r\\n    } // find all button toggles\\r\\n\\r\\n\\r\\n    buttons = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE));\\r\\n\\r\\n    for (var _i = 0, _len = buttons.length; _i < _len; _i++) {\\r\\n      var _button = buttons[_i];\\r\\n\\r\\n      if (_button.getAttribute('aria-pressed') === 'true') {\\r\\n        _button.classList.add(CLASS_NAME_ACTIVE);\\r\\n      } else {\\r\\n        _button.classList.remove(CLASS_NAME_ACTIVE);\\r\\n      }\\r\\n    }\\r\\n  });\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  $.fn[NAME$1] = Button._jQueryInterface;\\r\\n  $.fn[NAME$1].Constructor = Button;\\r\\n\\r\\n  $.fn[NAME$1].noConflict = function () {\\r\\n    $.fn[NAME$1] = JQUERY_NO_CONFLICT$1;\\r\\n    return Button._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$2 = 'carousel';\\r\\n  var VERSION$2 = '4.5.2';\\r\\n  var DATA_KEY$2 = 'bs.carousel';\\r\\n  var EVENT_KEY$2 = \\\".\\\" + DATA_KEY$2;\\r\\n  var DATA_API_KEY$2 = '.data-api';\\r\\n  var JQUERY_NO_CONFLICT$2 = $.fn[NAME$2];\\r\\n  var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\\r\\n\\r\\n  var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\\r\\n\\r\\n  var TOUCHEVENT_COMPAT_WAIT = 500; // Time for mouse compat events to fire after touch\\r\\n\\r\\n  var SWIPE_THRESHOLD = 40;\\r\\n  var Default = {\\r\\n    interval: 5000,\\r\\n    keyboard: true,\\r\\n    slide: false,\\r\\n    pause: 'hover',\\r\\n    wrap: true,\\r\\n    touch: true\\r\\n  };\\r\\n  var DefaultType = {\\r\\n    interval: '(number|boolean)',\\r\\n    keyboard: 'boolean',\\r\\n    slide: '(boolean|string)',\\r\\n    pause: '(string|boolean)',\\r\\n    wrap: 'boolean',\\r\\n    touch: 'boolean'\\r\\n  };\\r\\n  var DIRECTION_NEXT = 'next';\\r\\n  var DIRECTION_PREV = 'prev';\\r\\n  var DIRECTION_LEFT = 'left';\\r\\n  var DIRECTION_RIGHT = 'right';\\r\\n  var EVENT_SLIDE = \\\"slide\\\" + EVENT_KEY$2;\\r\\n  var EVENT_SLID = \\\"slid\\\" + EVENT_KEY$2;\\r\\n  var EVENT_KEYDOWN = \\\"keydown\\\" + EVENT_KEY$2;\\r\\n  var EVENT_MOUSEENTER = \\\"mouseenter\\\" + EVENT_KEY$2;\\r\\n  var EVENT_MOUSELEAVE = \\\"mouseleave\\\" + EVENT_KEY$2;\\r\\n  var EVENT_TOUCHSTART = \\\"touchstart\\\" + EVENT_KEY$2;\\r\\n  var EVENT_TOUCHMOVE = \\\"touchmove\\\" + EVENT_KEY$2;\\r\\n  var EVENT_TOUCHEND = \\\"touchend\\\" + EVENT_KEY$2;\\r\\n  var EVENT_POINTERDOWN = \\\"pointerdown\\\" + EVENT_KEY$2;\\r\\n  var EVENT_POINTERUP = \\\"pointerup\\\" + EVENT_KEY$2;\\r\\n  var EVENT_DRAG_START = \\\"dragstart\\\" + EVENT_KEY$2;\\r\\n  var EVENT_LOAD_DATA_API$1 = \\\"load\\\" + EVENT_KEY$2 + DATA_API_KEY$2;\\r\\n  var EVENT_CLICK_DATA_API$2 = \\\"click\\\" + EVENT_KEY$2 + DATA_API_KEY$2;\\r\\n  var CLASS_NAME_CAROUSEL = 'carousel';\\r\\n  var CLASS_NAME_ACTIVE$1 = 'active';\\r\\n  var CLASS_NAME_SLIDE = 'slide';\\r\\n  var CLASS_NAME_RIGHT = 'carousel-item-right';\\r\\n  var CLASS_NAME_LEFT = 'carousel-item-left';\\r\\n  var CLASS_NAME_NEXT = 'carousel-item-next';\\r\\n  var CLASS_NAME_PREV = 'carousel-item-prev';\\r\\n  var CLASS_NAME_POINTER_EVENT = 'pointer-event';\\r\\n  var SELECTOR_ACTIVE$1 = '.active';\\r\\n  var SELECTOR_ACTIVE_ITEM = '.active.carousel-item';\\r\\n  var SELECTOR_ITEM = '.carousel-item';\\r\\n  var SELECTOR_ITEM_IMG = '.carousel-item img';\\r\\n  var SELECTOR_NEXT_PREV = '.carousel-item-next, .carousel-item-prev';\\r\\n  var SELECTOR_INDICATORS = '.carousel-indicators';\\r\\n  var SELECTOR_DATA_SLIDE = '[data-slide], [data-slide-to]';\\r\\n  var SELECTOR_DATA_RIDE = '[data-ride=\\\"carousel\\\"]';\\r\\n  var PointerType = {\\r\\n    TOUCH: 'touch',\\r\\n    PEN: 'pen'\\r\\n  };\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Carousel = /*#__PURE__*/function () {\\r\\n    function Carousel(element, config) {\\r\\n      this._items = null;\\r\\n      this._interval = null;\\r\\n      this._activeElement = null;\\r\\n      this._isPaused = false;\\r\\n      this._isSliding = false;\\r\\n      this.touchTimeout = null;\\r\\n      this.touchStartX = 0;\\r\\n      this.touchDeltaX = 0;\\r\\n      this._config = this._getConfig(config);\\r\\n      this._element = element;\\r\\n      this._indicatorsElement = this._element.querySelector(SELECTOR_INDICATORS);\\r\\n      this._touchSupported = 'ontouchstart' in document.documentElement || navigator.maxTouchPoints > 0;\\r\\n      this._pointerEvent = Boolean(window.PointerEvent || window.MSPointerEvent);\\r\\n\\r\\n      this._addEventListeners();\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = Carousel.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.next = function next() {\\r\\n      if (!this._isSliding) {\\r\\n        this._slide(DIRECTION_NEXT);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.nextWhenVisible = function nextWhenVisible() {\\r\\n      // Don't call next when the page isn't visible\\r\\n      // or the carousel or its parent isn't visible\\r\\n      if (!document.hidden && $(this._element).is(':visible') && $(this._element).css('visibility') !== 'hidden') {\\r\\n        this.next();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.prev = function prev() {\\r\\n      if (!this._isSliding) {\\r\\n        this._slide(DIRECTION_PREV);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.pause = function pause(event) {\\r\\n      if (!event) {\\r\\n        this._isPaused = true;\\r\\n      }\\r\\n\\r\\n      if (this._element.querySelector(SELECTOR_NEXT_PREV)) {\\r\\n        Util.triggerTransitionEnd(this._element);\\r\\n        this.cycle(true);\\r\\n      }\\r\\n\\r\\n      clearInterval(this._interval);\\r\\n      this._interval = null;\\r\\n    };\\r\\n\\r\\n    _proto.cycle = function cycle(event) {\\r\\n      if (!event) {\\r\\n        this._isPaused = false;\\r\\n      }\\r\\n\\r\\n      if (this._interval) {\\r\\n        clearInterval(this._interval);\\r\\n        this._interval = null;\\r\\n      }\\r\\n\\r\\n      if (this._config.interval && !this._isPaused) {\\r\\n        this._interval = setInterval((document.visibilityState ? this.nextWhenVisible : this.next).bind(this), this._config.interval);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.to = function to(index) {\\r\\n      var _this = this;\\r\\n\\r\\n      this._activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);\\r\\n\\r\\n      var activeIndex = this._getItemIndex(this._activeElement);\\r\\n\\r\\n      if (index > this._items.length - 1 || index < 0) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (this._isSliding) {\\r\\n        $(this._element).one(EVENT_SLID, function () {\\r\\n          return _this.to(index);\\r\\n        });\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (activeIndex === index) {\\r\\n        this.pause();\\r\\n        this.cycle();\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var direction = index > activeIndex ? DIRECTION_NEXT : DIRECTION_PREV;\\r\\n\\r\\n      this._slide(direction, this._items[index]);\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      $(this._element).off(EVENT_KEY$2);\\r\\n      $.removeData(this._element, DATA_KEY$2);\\r\\n      this._items = null;\\r\\n      this._config = null;\\r\\n      this._element = null;\\r\\n      this._interval = null;\\r\\n      this._isPaused = null;\\r\\n      this._isSliding = null;\\r\\n      this._activeElement = null;\\r\\n      this._indicatorsElement = null;\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._getConfig = function _getConfig(config) {\\r\\n      config = _extends({}, Default, config);\\r\\n      Util.typeCheckConfig(NAME$2, config, DefaultType);\\r\\n      return config;\\r\\n    };\\r\\n\\r\\n    _proto._handleSwipe = function _handleSwipe() {\\r\\n      var absDeltax = Math.abs(this.touchDeltaX);\\r\\n\\r\\n      if (absDeltax <= SWIPE_THRESHOLD) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var direction = absDeltax / this.touchDeltaX;\\r\\n      this.touchDeltaX = 0; // swipe left\\r\\n\\r\\n      if (direction > 0) {\\r\\n        this.prev();\\r\\n      } // swipe right\\r\\n\\r\\n\\r\\n      if (direction < 0) {\\r\\n        this.next();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._addEventListeners = function _addEventListeners() {\\r\\n      var _this2 = this;\\r\\n\\r\\n      if (this._config.keyboard) {\\r\\n        $(this._element).on(EVENT_KEYDOWN, function (event) {\\r\\n          return _this2._keydown(event);\\r\\n        });\\r\\n      }\\r\\n\\r\\n      if (this._config.pause === 'hover') {\\r\\n        $(this._element).on(EVENT_MOUSEENTER, function (event) {\\r\\n          return _this2.pause(event);\\r\\n        }).on(EVENT_MOUSELEAVE, function (event) {\\r\\n          return _this2.cycle(event);\\r\\n        });\\r\\n      }\\r\\n\\r\\n      if (this._config.touch) {\\r\\n        this._addTouchEventListeners();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._addTouchEventListeners = function _addTouchEventListeners() {\\r\\n      var _this3 = this;\\r\\n\\r\\n      if (!this._touchSupported) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var start = function start(event) {\\r\\n        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\\r\\n          _this3.touchStartX = event.originalEvent.clientX;\\r\\n        } else if (!_this3._pointerEvent) {\\r\\n          _this3.touchStartX = event.originalEvent.touches[0].clientX;\\r\\n        }\\r\\n      };\\r\\n\\r\\n      var move = function move(event) {\\r\\n        // ensure swiping with one touch and not pinching\\r\\n        if (event.originalEvent.touches && event.originalEvent.touches.length > 1) {\\r\\n          _this3.touchDeltaX = 0;\\r\\n        } else {\\r\\n          _this3.touchDeltaX = event.originalEvent.touches[0].clientX - _this3.touchStartX;\\r\\n        }\\r\\n      };\\r\\n\\r\\n      var end = function end(event) {\\r\\n        if (_this3._pointerEvent && PointerType[event.originalEvent.pointerType.toUpperCase()]) {\\r\\n          _this3.touchDeltaX = event.originalEvent.clientX - _this3.touchStartX;\\r\\n        }\\r\\n\\r\\n        _this3._handleSwipe();\\r\\n\\r\\n        if (_this3._config.pause === 'hover') {\\r\\n          // If it's a touch-enabled device, mouseenter/leave are fired as\\r\\n          // part of the mouse compatibility events on first tap - the carousel\\r\\n          // would stop cycling until user tapped out of it;\\r\\n          // here, we listen for touchend, explicitly pause the carousel\\r\\n          // (as if it's the second time we tap on it, mouseenter compat event\\r\\n          // is NOT fired) and after a timeout (to allow for mouse compatibility\\r\\n          // events to fire) we explicitly restart cycling\\r\\n          _this3.pause();\\r\\n\\r\\n          if (_this3.touchTimeout) {\\r\\n            clearTimeout(_this3.touchTimeout);\\r\\n          }\\r\\n\\r\\n          _this3.touchTimeout = setTimeout(function (event) {\\r\\n            return _this3.cycle(event);\\r\\n          }, TOUCHEVENT_COMPAT_WAIT + _this3._config.interval);\\r\\n        }\\r\\n      };\\r\\n\\r\\n      $(this._element.querySelectorAll(SELECTOR_ITEM_IMG)).on(EVENT_DRAG_START, function (e) {\\r\\n        return e.preventDefault();\\r\\n      });\\r\\n\\r\\n      if (this._pointerEvent) {\\r\\n        $(this._element).on(EVENT_POINTERDOWN, function (event) {\\r\\n          return start(event);\\r\\n        });\\r\\n        $(this._element).on(EVENT_POINTERUP, function (event) {\\r\\n          return end(event);\\r\\n        });\\r\\n\\r\\n        this._element.classList.add(CLASS_NAME_POINTER_EVENT);\\r\\n      } else {\\r\\n        $(this._element).on(EVENT_TOUCHSTART, function (event) {\\r\\n          return start(event);\\r\\n        });\\r\\n        $(this._element).on(EVENT_TOUCHMOVE, function (event) {\\r\\n          return move(event);\\r\\n        });\\r\\n        $(this._element).on(EVENT_TOUCHEND, function (event) {\\r\\n          return end(event);\\r\\n        });\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._keydown = function _keydown(event) {\\r\\n      if (/input|textarea/i.test(event.target.tagName)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      switch (event.which) {\\r\\n        case ARROW_LEFT_KEYCODE:\\r\\n          event.preventDefault();\\r\\n          this.prev();\\r\\n          break;\\r\\n\\r\\n        case ARROW_RIGHT_KEYCODE:\\r\\n          event.preventDefault();\\r\\n          this.next();\\r\\n          break;\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._getItemIndex = function _getItemIndex(element) {\\r\\n      this._items = element && element.parentNode ? [].slice.call(element.parentNode.querySelectorAll(SELECTOR_ITEM)) : [];\\r\\n      return this._items.indexOf(element);\\r\\n    };\\r\\n\\r\\n    _proto._getItemByDirection = function _getItemByDirection(direction, activeElement) {\\r\\n      var isNextDirection = direction === DIRECTION_NEXT;\\r\\n      var isPrevDirection = direction === DIRECTION_PREV;\\r\\n\\r\\n      var activeIndex = this._getItemIndex(activeElement);\\r\\n\\r\\n      var lastItemIndex = this._items.length - 1;\\r\\n      var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\\r\\n\\r\\n      if (isGoingToWrap && !this._config.wrap) {\\r\\n        return activeElement;\\r\\n      }\\r\\n\\r\\n      var delta = direction === DIRECTION_PREV ? -1 : 1;\\r\\n      var itemIndex = (activeIndex + delta) % this._items.length;\\r\\n      return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\\r\\n    };\\r\\n\\r\\n    _proto._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, eventDirectionName) {\\r\\n      var targetIndex = this._getItemIndex(relatedTarget);\\r\\n\\r\\n      var fromIndex = this._getItemIndex(this._element.querySelector(SELECTOR_ACTIVE_ITEM));\\r\\n\\r\\n      var slideEvent = $.Event(EVENT_SLIDE, {\\r\\n        relatedTarget: relatedTarget,\\r\\n        direction: eventDirectionName,\\r\\n        from: fromIndex,\\r\\n        to: targetIndex\\r\\n      });\\r\\n      $(this._element).trigger(slideEvent);\\r\\n      return slideEvent;\\r\\n    };\\r\\n\\r\\n    _proto._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {\\r\\n      if (this._indicatorsElement) {\\r\\n        var indicators = [].slice.call(this._indicatorsElement.querySelectorAll(SELECTOR_ACTIVE$1));\\r\\n        $(indicators).removeClass(CLASS_NAME_ACTIVE$1);\\r\\n\\r\\n        var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\\r\\n\\r\\n        if (nextIndicator) {\\r\\n          $(nextIndicator).addClass(CLASS_NAME_ACTIVE$1);\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._slide = function _slide(direction, element) {\\r\\n      var _this4 = this;\\r\\n\\r\\n      var activeElement = this._element.querySelector(SELECTOR_ACTIVE_ITEM);\\r\\n\\r\\n      var activeElementIndex = this._getItemIndex(activeElement);\\r\\n\\r\\n      var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\\r\\n\\r\\n      var nextElementIndex = this._getItemIndex(nextElement);\\r\\n\\r\\n      var isCycling = Boolean(this._interval);\\r\\n      var directionalClassName;\\r\\n      var orderClassName;\\r\\n      var eventDirectionName;\\r\\n\\r\\n      if (direction === DIRECTION_NEXT) {\\r\\n        directionalClassName = CLASS_NAME_LEFT;\\r\\n        orderClassName = CLASS_NAME_NEXT;\\r\\n        eventDirectionName = DIRECTION_LEFT;\\r\\n      } else {\\r\\n        directionalClassName = CLASS_NAME_RIGHT;\\r\\n        orderClassName = CLASS_NAME_PREV;\\r\\n        eventDirectionName = DIRECTION_RIGHT;\\r\\n      }\\r\\n\\r\\n      if (nextElement && $(nextElement).hasClass(CLASS_NAME_ACTIVE$1)) {\\r\\n        this._isSliding = false;\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var slideEvent = this._triggerSlideEvent(nextElement, eventDirectionName);\\r\\n\\r\\n      if (slideEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (!activeElement || !nextElement) {\\r\\n        // Some weirdness is happening, so we bail\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      this._isSliding = true;\\r\\n\\r\\n      if (isCycling) {\\r\\n        this.pause();\\r\\n      }\\r\\n\\r\\n      this._setActiveIndicatorElement(nextElement);\\r\\n\\r\\n      var slidEvent = $.Event(EVENT_SLID, {\\r\\n        relatedTarget: nextElement,\\r\\n        direction: eventDirectionName,\\r\\n        from: activeElementIndex,\\r\\n        to: nextElementIndex\\r\\n      });\\r\\n\\r\\n      if ($(this._element).hasClass(CLASS_NAME_SLIDE)) {\\r\\n        $(nextElement).addClass(orderClassName);\\r\\n        Util.reflow(nextElement);\\r\\n        $(activeElement).addClass(directionalClassName);\\r\\n        $(nextElement).addClass(directionalClassName);\\r\\n        var nextElementInterval = parseInt(nextElement.getAttribute('data-interval'), 10);\\r\\n\\r\\n        if (nextElementInterval) {\\r\\n          this._config.defaultInterval = this._config.defaultInterval || this._config.interval;\\r\\n          this._config.interval = nextElementInterval;\\r\\n        } else {\\r\\n          this._config.interval = this._config.defaultInterval || this._config.interval;\\r\\n        }\\r\\n\\r\\n        var transitionDuration = Util.getTransitionDurationFromElement(activeElement);\\r\\n        $(activeElement).one(Util.TRANSITION_END, function () {\\r\\n          $(nextElement).removeClass(directionalClassName + \\\" \\\" + orderClassName).addClass(CLASS_NAME_ACTIVE$1);\\r\\n          $(activeElement).removeClass(CLASS_NAME_ACTIVE$1 + \\\" \\\" + orderClassName + \\\" \\\" + directionalClassName);\\r\\n          _this4._isSliding = false;\\r\\n          setTimeout(function () {\\r\\n            return $(_this4._element).trigger(slidEvent);\\r\\n          }, 0);\\r\\n        }).emulateTransitionEnd(transitionDuration);\\r\\n      } else {\\r\\n        $(activeElement).removeClass(CLASS_NAME_ACTIVE$1);\\r\\n        $(nextElement).addClass(CLASS_NAME_ACTIVE$1);\\r\\n        this._isSliding = false;\\r\\n        $(this._element).trigger(slidEvent);\\r\\n      }\\r\\n\\r\\n      if (isCycling) {\\r\\n        this.cycle();\\r\\n      }\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Carousel._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var data = $(this).data(DATA_KEY$2);\\r\\n\\r\\n        var _config = _extends({}, Default, $(this).data());\\r\\n\\r\\n        if (typeof config === 'object') {\\r\\n          _config = _extends({}, _config, config);\\r\\n        }\\r\\n\\r\\n        var action = typeof config === 'string' ? config : _config.slide;\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Carousel(this, _config);\\r\\n          $(this).data(DATA_KEY$2, data);\\r\\n        }\\r\\n\\r\\n        if (typeof config === 'number') {\\r\\n          data.to(config);\\r\\n        } else if (typeof action === 'string') {\\r\\n          if (typeof data[action] === 'undefined') {\\r\\n            throw new TypeError(\\\"No method named \\\\\\\"\\\" + action + \\\"\\\\\\\"\\\");\\r\\n          }\\r\\n\\r\\n          data[action]();\\r\\n        } else if (_config.interval && _config.ride) {\\r\\n          data.pause();\\r\\n          data.cycle();\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {\\r\\n      var selector = Util.getSelectorFromElement(this);\\r\\n\\r\\n      if (!selector) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var target = $(selector)[0];\\r\\n\\r\\n      if (!target || !$(target).hasClass(CLASS_NAME_CAROUSEL)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var config = _extends({}, $(target).data(), $(this).data());\\r\\n\\r\\n      var slideIndex = this.getAttribute('data-slide-to');\\r\\n\\r\\n      if (slideIndex) {\\r\\n        config.interval = false;\\r\\n      }\\r\\n\\r\\n      Carousel._jQueryInterface.call($(target), config);\\r\\n\\r\\n      if (slideIndex) {\\r\\n        $(target).data(DATA_KEY$2).to(slideIndex);\\r\\n      }\\r\\n\\r\\n      event.preventDefault();\\r\\n    };\\r\\n\\r\\n    _createClass(Carousel, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION$2;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Default\\\",\\r\\n      get: function get() {\\r\\n        return Default;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Carousel;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Data Api implementation\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $(document).on(EVENT_CLICK_DATA_API$2, SELECTOR_DATA_SLIDE, Carousel._dataApiClickHandler);\\r\\n  $(window).on(EVENT_LOAD_DATA_API$1, function () {\\r\\n    var carousels = [].slice.call(document.querySelectorAll(SELECTOR_DATA_RIDE));\\r\\n\\r\\n    for (var i = 0, len = carousels.length; i < len; i++) {\\r\\n      var $carousel = $(carousels[i]);\\r\\n\\r\\n      Carousel._jQueryInterface.call($carousel, $carousel.data());\\r\\n    }\\r\\n  });\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  $.fn[NAME$2] = Carousel._jQueryInterface;\\r\\n  $.fn[NAME$2].Constructor = Carousel;\\r\\n\\r\\n  $.fn[NAME$2].noConflict = function () {\\r\\n    $.fn[NAME$2] = JQUERY_NO_CONFLICT$2;\\r\\n    return Carousel._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$3 = 'collapse';\\r\\n  var VERSION$3 = '4.5.2';\\r\\n  var DATA_KEY$3 = 'bs.collapse';\\r\\n  var EVENT_KEY$3 = \\\".\\\" + DATA_KEY$3;\\r\\n  var DATA_API_KEY$3 = '.data-api';\\r\\n  var JQUERY_NO_CONFLICT$3 = $.fn[NAME$3];\\r\\n  var Default$1 = {\\r\\n    toggle: true,\\r\\n    parent: ''\\r\\n  };\\r\\n  var DefaultType$1 = {\\r\\n    toggle: 'boolean',\\r\\n    parent: '(string|element)'\\r\\n  };\\r\\n  var EVENT_SHOW = \\\"show\\\" + EVENT_KEY$3;\\r\\n  var EVENT_SHOWN = \\\"shown\\\" + EVENT_KEY$3;\\r\\n  var EVENT_HIDE = \\\"hide\\\" + EVENT_KEY$3;\\r\\n  var EVENT_HIDDEN = \\\"hidden\\\" + EVENT_KEY$3;\\r\\n  var EVENT_CLICK_DATA_API$3 = \\\"click\\\" + EVENT_KEY$3 + DATA_API_KEY$3;\\r\\n  var CLASS_NAME_SHOW$1 = 'show';\\r\\n  var CLASS_NAME_COLLAPSE = 'collapse';\\r\\n  var CLASS_NAME_COLLAPSING = 'collapsing';\\r\\n  var CLASS_NAME_COLLAPSED = 'collapsed';\\r\\n  var DIMENSION_WIDTH = 'width';\\r\\n  var DIMENSION_HEIGHT = 'height';\\r\\n  var SELECTOR_ACTIVES = '.show, .collapsing';\\r\\n  var SELECTOR_DATA_TOGGLE$1 = '[data-toggle=\\\"collapse\\\"]';\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Collapse = /*#__PURE__*/function () {\\r\\n    function Collapse(element, config) {\\r\\n      this._isTransitioning = false;\\r\\n      this._element = element;\\r\\n      this._config = this._getConfig(config);\\r\\n      this._triggerArray = [].slice.call(document.querySelectorAll(\\\"[data-toggle=\\\\\\\"collapse\\\\\\\"][href=\\\\\\\"#\\\" + element.id + \\\"\\\\\\\"],\\\" + (\\\"[data-toggle=\\\\\\\"collapse\\\\\\\"][data-target=\\\\\\\"#\\\" + element.id + \\\"\\\\\\\"]\\\")));\\r\\n      var toggleList = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$1));\\r\\n\\r\\n      for (var i = 0, len = toggleList.length; i < len; i++) {\\r\\n        var elem = toggleList[i];\\r\\n        var selector = Util.getSelectorFromElement(elem);\\r\\n        var filterElement = [].slice.call(document.querySelectorAll(selector)).filter(function (foundElem) {\\r\\n          return foundElem === element;\\r\\n        });\\r\\n\\r\\n        if (selector !== null && filterElement.length > 0) {\\r\\n          this._selector = selector;\\r\\n\\r\\n          this._triggerArray.push(elem);\\r\\n        }\\r\\n      }\\r\\n\\r\\n      this._parent = this._config.parent ? this._getParent() : null;\\r\\n\\r\\n      if (!this._config.parent) {\\r\\n        this._addAriaAndCollapsedClass(this._element, this._triggerArray);\\r\\n      }\\r\\n\\r\\n      if (this._config.toggle) {\\r\\n        this.toggle();\\r\\n      }\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = Collapse.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.toggle = function toggle() {\\r\\n      if ($(this._element).hasClass(CLASS_NAME_SHOW$1)) {\\r\\n        this.hide();\\r\\n      } else {\\r\\n        this.show();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.show = function show() {\\r\\n      var _this = this;\\r\\n\\r\\n      if (this._isTransitioning || $(this._element).hasClass(CLASS_NAME_SHOW$1)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var actives;\\r\\n      var activesData;\\r\\n\\r\\n      if (this._parent) {\\r\\n        actives = [].slice.call(this._parent.querySelectorAll(SELECTOR_ACTIVES)).filter(function (elem) {\\r\\n          if (typeof _this._config.parent === 'string') {\\r\\n            return elem.getAttribute('data-parent') === _this._config.parent;\\r\\n          }\\r\\n\\r\\n          return elem.classList.contains(CLASS_NAME_COLLAPSE);\\r\\n        });\\r\\n\\r\\n        if (actives.length === 0) {\\r\\n          actives = null;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      if (actives) {\\r\\n        activesData = $(actives).not(this._selector).data(DATA_KEY$3);\\r\\n\\r\\n        if (activesData && activesData._isTransitioning) {\\r\\n          return;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      var startEvent = $.Event(EVENT_SHOW);\\r\\n      $(this._element).trigger(startEvent);\\r\\n\\r\\n      if (startEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (actives) {\\r\\n        Collapse._jQueryInterface.call($(actives).not(this._selector), 'hide');\\r\\n\\r\\n        if (!activesData) {\\r\\n          $(actives).data(DATA_KEY$3, null);\\r\\n        }\\r\\n      }\\r\\n\\r\\n      var dimension = this._getDimension();\\r\\n\\r\\n      $(this._element).removeClass(CLASS_NAME_COLLAPSE).addClass(CLASS_NAME_COLLAPSING);\\r\\n      this._element.style[dimension] = 0;\\r\\n\\r\\n      if (this._triggerArray.length) {\\r\\n        $(this._triggerArray).removeClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', true);\\r\\n      }\\r\\n\\r\\n      this.setTransitioning(true);\\r\\n\\r\\n      var complete = function complete() {\\r\\n        $(_this._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE + \\\" \\\" + CLASS_NAME_SHOW$1);\\r\\n        _this._element.style[dimension] = '';\\r\\n\\r\\n        _this.setTransitioning(false);\\r\\n\\r\\n        $(_this._element).trigger(EVENT_SHOWN);\\r\\n      };\\r\\n\\r\\n      var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\\r\\n      var scrollSize = \\\"scroll\\\" + capitalizedDimension;\\r\\n      var transitionDuration = Util.getTransitionDurationFromElement(this._element);\\r\\n      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\\r\\n      this._element.style[dimension] = this._element[scrollSize] + \\\"px\\\";\\r\\n    };\\r\\n\\r\\n    _proto.hide = function hide() {\\r\\n      var _this2 = this;\\r\\n\\r\\n      if (this._isTransitioning || !$(this._element).hasClass(CLASS_NAME_SHOW$1)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var startEvent = $.Event(EVENT_HIDE);\\r\\n      $(this._element).trigger(startEvent);\\r\\n\\r\\n      if (startEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var dimension = this._getDimension();\\r\\n\\r\\n      this._element.style[dimension] = this._element.getBoundingClientRect()[dimension] + \\\"px\\\";\\r\\n      Util.reflow(this._element);\\r\\n      $(this._element).addClass(CLASS_NAME_COLLAPSING).removeClass(CLASS_NAME_COLLAPSE + \\\" \\\" + CLASS_NAME_SHOW$1);\\r\\n      var triggerArrayLength = this._triggerArray.length;\\r\\n\\r\\n      if (triggerArrayLength > 0) {\\r\\n        for (var i = 0; i < triggerArrayLength; i++) {\\r\\n          var trigger = this._triggerArray[i];\\r\\n          var selector = Util.getSelectorFromElement(trigger);\\r\\n\\r\\n          if (selector !== null) {\\r\\n            var $elem = $([].slice.call(document.querySelectorAll(selector)));\\r\\n\\r\\n            if (!$elem.hasClass(CLASS_NAME_SHOW$1)) {\\r\\n              $(trigger).addClass(CLASS_NAME_COLLAPSED).attr('aria-expanded', false);\\r\\n            }\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n\\r\\n      this.setTransitioning(true);\\r\\n\\r\\n      var complete = function complete() {\\r\\n        _this2.setTransitioning(false);\\r\\n\\r\\n        $(_this2._element).removeClass(CLASS_NAME_COLLAPSING).addClass(CLASS_NAME_COLLAPSE).trigger(EVENT_HIDDEN);\\r\\n      };\\r\\n\\r\\n      this._element.style[dimension] = '';\\r\\n      var transitionDuration = Util.getTransitionDurationFromElement(this._element);\\r\\n      $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\\r\\n    };\\r\\n\\r\\n    _proto.setTransitioning = function setTransitioning(isTransitioning) {\\r\\n      this._isTransitioning = isTransitioning;\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      $.removeData(this._element, DATA_KEY$3);\\r\\n      this._config = null;\\r\\n      this._parent = null;\\r\\n      this._element = null;\\r\\n      this._triggerArray = null;\\r\\n      this._isTransitioning = null;\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._getConfig = function _getConfig(config) {\\r\\n      config = _extends({}, Default$1, config);\\r\\n      config.toggle = Boolean(config.toggle); // Coerce string values\\r\\n\\r\\n      Util.typeCheckConfig(NAME$3, config, DefaultType$1);\\r\\n      return config;\\r\\n    };\\r\\n\\r\\n    _proto._getDimension = function _getDimension() {\\r\\n      var hasWidth = $(this._element).hasClass(DIMENSION_WIDTH);\\r\\n      return hasWidth ? DIMENSION_WIDTH : DIMENSION_HEIGHT;\\r\\n    };\\r\\n\\r\\n    _proto._getParent = function _getParent() {\\r\\n      var _this3 = this;\\r\\n\\r\\n      var parent;\\r\\n\\r\\n      if (Util.isElement(this._config.parent)) {\\r\\n        parent = this._config.parent; // It's a jQuery object\\r\\n\\r\\n        if (typeof this._config.parent.jquery !== 'undefined') {\\r\\n          parent = this._config.parent[0];\\r\\n        }\\r\\n      } else {\\r\\n        parent = document.querySelector(this._config.parent);\\r\\n      }\\r\\n\\r\\n      var selector = \\\"[data-toggle=\\\\\\\"collapse\\\\\\\"][data-parent=\\\\\\\"\\\" + this._config.parent + \\\"\\\\\\\"]\\\";\\r\\n      var children = [].slice.call(parent.querySelectorAll(selector));\\r\\n      $(children).each(function (i, element) {\\r\\n        _this3._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\\r\\n      });\\r\\n      return parent;\\r\\n    };\\r\\n\\r\\n    _proto._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {\\r\\n      var isOpen = $(element).hasClass(CLASS_NAME_SHOW$1);\\r\\n\\r\\n      if (triggerArray.length) {\\r\\n        $(triggerArray).toggleClass(CLASS_NAME_COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\\r\\n      }\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Collapse._getTargetFromElement = function _getTargetFromElement(element) {\\r\\n      var selector = Util.getSelectorFromElement(element);\\r\\n      return selector ? document.querySelector(selector) : null;\\r\\n    };\\r\\n\\r\\n    Collapse._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var $this = $(this);\\r\\n        var data = $this.data(DATA_KEY$3);\\r\\n\\r\\n        var _config = _extends({}, Default$1, $this.data(), typeof config === 'object' && config ? config : {});\\r\\n\\r\\n        if (!data && _config.toggle && typeof config === 'string' && /show|hide/.test(config)) {\\r\\n          _config.toggle = false;\\r\\n        }\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Collapse(this, _config);\\r\\n          $this.data(DATA_KEY$3, data);\\r\\n        }\\r\\n\\r\\n        if (typeof config === 'string') {\\r\\n          if (typeof data[config] === 'undefined') {\\r\\n            throw new TypeError(\\\"No method named \\\\\\\"\\\" + config + \\\"\\\\\\\"\\\");\\r\\n          }\\r\\n\\r\\n          data[config]();\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _createClass(Collapse, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION$3;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Default\\\",\\r\\n      get: function get() {\\r\\n        return Default$1;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Collapse;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Data Api implementation\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $(document).on(EVENT_CLICK_DATA_API$3, SELECTOR_DATA_TOGGLE$1, function (event) {\\r\\n    // preventDefault only for <a> elements (which change the URL) not inside the collapsible element\\r\\n    if (event.currentTarget.tagName === 'A') {\\r\\n      event.preventDefault();\\r\\n    }\\r\\n\\r\\n    var $trigger = $(this);\\r\\n    var selector = Util.getSelectorFromElement(this);\\r\\n    var selectors = [].slice.call(document.querySelectorAll(selector));\\r\\n    $(selectors).each(function () {\\r\\n      var $target = $(this);\\r\\n      var data = $target.data(DATA_KEY$3);\\r\\n      var config = data ? 'toggle' : $trigger.data();\\r\\n\\r\\n      Collapse._jQueryInterface.call($target, config);\\r\\n    });\\r\\n  });\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  $.fn[NAME$3] = Collapse._jQueryInterface;\\r\\n  $.fn[NAME$3].Constructor = Collapse;\\r\\n\\r\\n  $.fn[NAME$3].noConflict = function () {\\r\\n    $.fn[NAME$3] = JQUERY_NO_CONFLICT$3;\\r\\n    return Collapse._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$4 = 'dropdown';\\r\\n  var VERSION$4 = '4.5.2';\\r\\n  var DATA_KEY$4 = 'bs.dropdown';\\r\\n  var EVENT_KEY$4 = \\\".\\\" + DATA_KEY$4;\\r\\n  var DATA_API_KEY$4 = '.data-api';\\r\\n  var JQUERY_NO_CONFLICT$4 = $.fn[NAME$4];\\r\\n  var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\\r\\n\\r\\n  var SPACE_KEYCODE = 32; // KeyboardEvent.which value for space key\\r\\n\\r\\n  var TAB_KEYCODE = 9; // KeyboardEvent.which value for tab key\\r\\n\\r\\n  var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key\\r\\n\\r\\n  var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key\\r\\n\\r\\n  var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)\\r\\n\\r\\n  var REGEXP_KEYDOWN = new RegExp(ARROW_UP_KEYCODE + \\\"|\\\" + ARROW_DOWN_KEYCODE + \\\"|\\\" + ESCAPE_KEYCODE);\\r\\n  var EVENT_HIDE$1 = \\\"hide\\\" + EVENT_KEY$4;\\r\\n  var EVENT_HIDDEN$1 = \\\"hidden\\\" + EVENT_KEY$4;\\r\\n  var EVENT_SHOW$1 = \\\"show\\\" + EVENT_KEY$4;\\r\\n  var EVENT_SHOWN$1 = \\\"shown\\\" + EVENT_KEY$4;\\r\\n  var EVENT_CLICK = \\\"click\\\" + EVENT_KEY$4;\\r\\n  var EVENT_CLICK_DATA_API$4 = \\\"click\\\" + EVENT_KEY$4 + DATA_API_KEY$4;\\r\\n  var EVENT_KEYDOWN_DATA_API = \\\"keydown\\\" + EVENT_KEY$4 + DATA_API_KEY$4;\\r\\n  var EVENT_KEYUP_DATA_API = \\\"keyup\\\" + EVENT_KEY$4 + DATA_API_KEY$4;\\r\\n  var CLASS_NAME_DISABLED = 'disabled';\\r\\n  var CLASS_NAME_SHOW$2 = 'show';\\r\\n  var CLASS_NAME_DROPUP = 'dropup';\\r\\n  var CLASS_NAME_DROPRIGHT = 'dropright';\\r\\n  var CLASS_NAME_DROPLEFT = 'dropleft';\\r\\n  var CLASS_NAME_MENURIGHT = 'dropdown-menu-right';\\r\\n  var CLASS_NAME_POSITION_STATIC = 'position-static';\\r\\n  var SELECTOR_DATA_TOGGLE$2 = '[data-toggle=\\\"dropdown\\\"]';\\r\\n  var SELECTOR_FORM_CHILD = '.dropdown form';\\r\\n  var SELECTOR_MENU = '.dropdown-menu';\\r\\n  var SELECTOR_NAVBAR_NAV = '.navbar-nav';\\r\\n  var SELECTOR_VISIBLE_ITEMS = '.dropdown-menu .dropdown-item:not(.disabled):not(:disabled)';\\r\\n  var PLACEMENT_TOP = 'top-start';\\r\\n  var PLACEMENT_TOPEND = 'top-end';\\r\\n  var PLACEMENT_BOTTOM = 'bottom-start';\\r\\n  var PLACEMENT_BOTTOMEND = 'bottom-end';\\r\\n  var PLACEMENT_RIGHT = 'right-start';\\r\\n  var PLACEMENT_LEFT = 'left-start';\\r\\n  var Default$2 = {\\r\\n    offset: 0,\\r\\n    flip: true,\\r\\n    boundary: 'scrollParent',\\r\\n    reference: 'toggle',\\r\\n    display: 'dynamic',\\r\\n    popperConfig: null\\r\\n  };\\r\\n  var DefaultType$2 = {\\r\\n    offset: '(number|string|function)',\\r\\n    flip: 'boolean',\\r\\n    boundary: '(string|element)',\\r\\n    reference: '(string|element)',\\r\\n    display: 'string',\\r\\n    popperConfig: '(null|object)'\\r\\n  };\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Dropdown = /*#__PURE__*/function () {\\r\\n    function Dropdown(element, config) {\\r\\n      this._element = element;\\r\\n      this._popper = null;\\r\\n      this._config = this._getConfig(config);\\r\\n      this._menu = this._getMenuElement();\\r\\n      this._inNavbar = this._detectNavbar();\\r\\n\\r\\n      this._addEventListeners();\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = Dropdown.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.toggle = function toggle() {\\r\\n      if (this._element.disabled || $(this._element).hasClass(CLASS_NAME_DISABLED)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var isActive = $(this._menu).hasClass(CLASS_NAME_SHOW$2);\\r\\n\\r\\n      Dropdown._clearMenus();\\r\\n\\r\\n      if (isActive) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      this.show(true);\\r\\n    };\\r\\n\\r\\n    _proto.show = function show(usePopper) {\\r\\n      if (usePopper === void 0) {\\r\\n        usePopper = false;\\r\\n      }\\r\\n\\r\\n      if (this._element.disabled || $(this._element).hasClass(CLASS_NAME_DISABLED) || $(this._menu).hasClass(CLASS_NAME_SHOW$2)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var relatedTarget = {\\r\\n        relatedTarget: this._element\\r\\n      };\\r\\n      var showEvent = $.Event(EVENT_SHOW$1, relatedTarget);\\r\\n\\r\\n      var parent = Dropdown._getParentFromElement(this._element);\\r\\n\\r\\n      $(parent).trigger(showEvent);\\r\\n\\r\\n      if (showEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      } // Disable totally Popper.js for Dropdown in Navbar\\r\\n\\r\\n\\r\\n      if (!this._inNavbar && usePopper) {\\r\\n        /**\\r\\n         * Check for Popper dependency\\r\\n         * Popper - https://popper.js.org\\r\\n         */\\r\\n        if (typeof Popper === 'undefined') {\\r\\n          throw new TypeError('Bootstrap\\\\'s dropdowns require Popper.js (https://popper.js.org/)');\\r\\n        }\\r\\n\\r\\n        var referenceElement = this._element;\\r\\n\\r\\n        if (this._config.reference === 'parent') {\\r\\n          referenceElement = parent;\\r\\n        } else if (Util.isElement(this._config.reference)) {\\r\\n          referenceElement = this._config.reference; // Check if it's jQuery element\\r\\n\\r\\n          if (typeof this._config.reference.jquery !== 'undefined') {\\r\\n            referenceElement = this._config.reference[0];\\r\\n          }\\r\\n        } // If boundary is not `scrollParent`, then set position to `static`\\r\\n        // to allow the menu to \\\"escape\\\" the scroll parent's boundaries\\r\\n        // https://github.com/twbs/bootstrap/issues/24251\\r\\n\\r\\n\\r\\n        if (this._config.boundary !== 'scrollParent') {\\r\\n          $(parent).addClass(CLASS_NAME_POSITION_STATIC);\\r\\n        }\\r\\n\\r\\n        this._popper = new Popper(referenceElement, this._menu, this._getPopperConfig());\\r\\n      } // If this is a touch-enabled device we add extra\\r\\n      // empty mouseover listeners to the body's immediate children;\\r\\n      // only needed because of broken event delegation on iOS\\r\\n      // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\\r\\n\\r\\n\\r\\n      if ('ontouchstart' in document.documentElement && $(parent).closest(SELECTOR_NAVBAR_NAV).length === 0) {\\r\\n        $(document.body).children().on('mouseover', null, $.noop);\\r\\n      }\\r\\n\\r\\n      this._element.focus();\\r\\n\\r\\n      this._element.setAttribute('aria-expanded', true);\\r\\n\\r\\n      $(this._menu).toggleClass(CLASS_NAME_SHOW$2);\\r\\n      $(parent).toggleClass(CLASS_NAME_SHOW$2).trigger($.Event(EVENT_SHOWN$1, relatedTarget));\\r\\n    };\\r\\n\\r\\n    _proto.hide = function hide() {\\r\\n      if (this._element.disabled || $(this._element).hasClass(CLASS_NAME_DISABLED) || !$(this._menu).hasClass(CLASS_NAME_SHOW$2)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var relatedTarget = {\\r\\n        relatedTarget: this._element\\r\\n      };\\r\\n      var hideEvent = $.Event(EVENT_HIDE$1, relatedTarget);\\r\\n\\r\\n      var parent = Dropdown._getParentFromElement(this._element);\\r\\n\\r\\n      $(parent).trigger(hideEvent);\\r\\n\\r\\n      if (hideEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (this._popper) {\\r\\n        this._popper.destroy();\\r\\n      }\\r\\n\\r\\n      $(this._menu).toggleClass(CLASS_NAME_SHOW$2);\\r\\n      $(parent).toggleClass(CLASS_NAME_SHOW$2).trigger($.Event(EVENT_HIDDEN$1, relatedTarget));\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      $.removeData(this._element, DATA_KEY$4);\\r\\n      $(this._element).off(EVENT_KEY$4);\\r\\n      this._element = null;\\r\\n      this._menu = null;\\r\\n\\r\\n      if (this._popper !== null) {\\r\\n        this._popper.destroy();\\r\\n\\r\\n        this._popper = null;\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.update = function update() {\\r\\n      this._inNavbar = this._detectNavbar();\\r\\n\\r\\n      if (this._popper !== null) {\\r\\n        this._popper.scheduleUpdate();\\r\\n      }\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._addEventListeners = function _addEventListeners() {\\r\\n      var _this = this;\\r\\n\\r\\n      $(this._element).on(EVENT_CLICK, function (event) {\\r\\n        event.preventDefault();\\r\\n        event.stopPropagation();\\r\\n\\r\\n        _this.toggle();\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _proto._getConfig = function _getConfig(config) {\\r\\n      config = _extends({}, this.constructor.Default, $(this._element).data(), config);\\r\\n      Util.typeCheckConfig(NAME$4, config, this.constructor.DefaultType);\\r\\n      return config;\\r\\n    };\\r\\n\\r\\n    _proto._getMenuElement = function _getMenuElement() {\\r\\n      if (!this._menu) {\\r\\n        var parent = Dropdown._getParentFromElement(this._element);\\r\\n\\r\\n        if (parent) {\\r\\n          this._menu = parent.querySelector(SELECTOR_MENU);\\r\\n        }\\r\\n      }\\r\\n\\r\\n      return this._menu;\\r\\n    };\\r\\n\\r\\n    _proto._getPlacement = function _getPlacement() {\\r\\n      var $parentDropdown = $(this._element.parentNode);\\r\\n      var placement = PLACEMENT_BOTTOM; // Handle dropup\\r\\n\\r\\n      if ($parentDropdown.hasClass(CLASS_NAME_DROPUP)) {\\r\\n        placement = $(this._menu).hasClass(CLASS_NAME_MENURIGHT) ? PLACEMENT_TOPEND : PLACEMENT_TOP;\\r\\n      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPRIGHT)) {\\r\\n        placement = PLACEMENT_RIGHT;\\r\\n      } else if ($parentDropdown.hasClass(CLASS_NAME_DROPLEFT)) {\\r\\n        placement = PLACEMENT_LEFT;\\r\\n      } else if ($(this._menu).hasClass(CLASS_NAME_MENURIGHT)) {\\r\\n        placement = PLACEMENT_BOTTOMEND;\\r\\n      }\\r\\n\\r\\n      return placement;\\r\\n    };\\r\\n\\r\\n    _proto._detectNavbar = function _detectNavbar() {\\r\\n      return $(this._element).closest('.navbar').length > 0;\\r\\n    };\\r\\n\\r\\n    _proto._getOffset = function _getOffset() {\\r\\n      var _this2 = this;\\r\\n\\r\\n      var offset = {};\\r\\n\\r\\n      if (typeof this._config.offset === 'function') {\\r\\n        offset.fn = function (data) {\\r\\n          data.offsets = _extends({}, data.offsets, _this2._config.offset(data.offsets, _this2._element) || {});\\r\\n          return data;\\r\\n        };\\r\\n      } else {\\r\\n        offset.offset = this._config.offset;\\r\\n      }\\r\\n\\r\\n      return offset;\\r\\n    };\\r\\n\\r\\n    _proto._getPopperConfig = function _getPopperConfig() {\\r\\n      var popperConfig = {\\r\\n        placement: this._getPlacement(),\\r\\n        modifiers: {\\r\\n          offset: this._getOffset(),\\r\\n          flip: {\\r\\n            enabled: this._config.flip\\r\\n          },\\r\\n          preventOverflow: {\\r\\n            boundariesElement: this._config.boundary\\r\\n          }\\r\\n        }\\r\\n      }; // Disable Popper.js if we have a static display\\r\\n\\r\\n      if (this._config.display === 'static') {\\r\\n        popperConfig.modifiers.applyStyle = {\\r\\n          enabled: false\\r\\n        };\\r\\n      }\\r\\n\\r\\n      return _extends({}, popperConfig, this._config.popperConfig);\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Dropdown._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var data = $(this).data(DATA_KEY$4);\\r\\n\\r\\n        var _config = typeof config === 'object' ? config : null;\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Dropdown(this, _config);\\r\\n          $(this).data(DATA_KEY$4, data);\\r\\n        }\\r\\n\\r\\n        if (typeof config === 'string') {\\r\\n          if (typeof data[config] === 'undefined') {\\r\\n            throw new TypeError(\\\"No method named \\\\\\\"\\\" + config + \\\"\\\\\\\"\\\");\\r\\n          }\\r\\n\\r\\n          data[config]();\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    Dropdown._clearMenus = function _clearMenus(event) {\\r\\n      if (event && (event.which === RIGHT_MOUSE_BUTTON_WHICH || event.type === 'keyup' && event.which !== TAB_KEYCODE)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var toggles = [].slice.call(document.querySelectorAll(SELECTOR_DATA_TOGGLE$2));\\r\\n\\r\\n      for (var i = 0, len = toggles.length; i < len; i++) {\\r\\n        var parent = Dropdown._getParentFromElement(toggles[i]);\\r\\n\\r\\n        var context = $(toggles[i]).data(DATA_KEY$4);\\r\\n        var relatedTarget = {\\r\\n          relatedTarget: toggles[i]\\r\\n        };\\r\\n\\r\\n        if (event && event.type === 'click') {\\r\\n          relatedTarget.clickEvent = event;\\r\\n        }\\r\\n\\r\\n        if (!context) {\\r\\n          continue;\\r\\n        }\\r\\n\\r\\n        var dropdownMenu = context._menu;\\r\\n\\r\\n        if (!$(parent).hasClass(CLASS_NAME_SHOW$2)) {\\r\\n          continue;\\r\\n        }\\r\\n\\r\\n        if (event && (event.type === 'click' && /input|textarea/i.test(event.target.tagName) || event.type === 'keyup' && event.which === TAB_KEYCODE) && $.contains(parent, event.target)) {\\r\\n          continue;\\r\\n        }\\r\\n\\r\\n        var hideEvent = $.Event(EVENT_HIDE$1, relatedTarget);\\r\\n        $(parent).trigger(hideEvent);\\r\\n\\r\\n        if (hideEvent.isDefaultPrevented()) {\\r\\n          continue;\\r\\n        } // If this is a touch-enabled device we remove the extra\\r\\n        // empty mouseover listeners we added for iOS support\\r\\n\\r\\n\\r\\n        if ('ontouchstart' in document.documentElement) {\\r\\n          $(document.body).children().off('mouseover', null, $.noop);\\r\\n        }\\r\\n\\r\\n        toggles[i].setAttribute('aria-expanded', 'false');\\r\\n\\r\\n        if (context._popper) {\\r\\n          context._popper.destroy();\\r\\n        }\\r\\n\\r\\n        $(dropdownMenu).removeClass(CLASS_NAME_SHOW$2);\\r\\n        $(parent).removeClass(CLASS_NAME_SHOW$2).trigger($.Event(EVENT_HIDDEN$1, relatedTarget));\\r\\n      }\\r\\n    };\\r\\n\\r\\n    Dropdown._getParentFromElement = function _getParentFromElement(element) {\\r\\n      var parent;\\r\\n      var selector = Util.getSelectorFromElement(element);\\r\\n\\r\\n      if (selector) {\\r\\n        parent = document.querySelector(selector);\\r\\n      }\\r\\n\\r\\n      return parent || element.parentNode;\\r\\n    } // eslint-disable-next-line complexity\\r\\n    ;\\r\\n\\r\\n    Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {\\r\\n      // If not input/textarea:\\r\\n      //  - And not a key in REGEXP_KEYDOWN => not a dropdown command\\r\\n      // If input/textarea:\\r\\n      //  - If space key => not a dropdown command\\r\\n      //  - If key is other than escape\\r\\n      //    - If key is not up or down => not a dropdown command\\r\\n      //    - If trigger inside the menu => not a dropdown command\\r\\n      if (/input|textarea/i.test(event.target.tagName) ? event.which === SPACE_KEYCODE || event.which !== ESCAPE_KEYCODE && (event.which !== ARROW_DOWN_KEYCODE && event.which !== ARROW_UP_KEYCODE || $(event.target).closest(SELECTOR_MENU).length) : !REGEXP_KEYDOWN.test(event.which)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (this.disabled || $(this).hasClass(CLASS_NAME_DISABLED)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var parent = Dropdown._getParentFromElement(this);\\r\\n\\r\\n      var isActive = $(parent).hasClass(CLASS_NAME_SHOW$2);\\r\\n\\r\\n      if (!isActive && event.which === ESCAPE_KEYCODE) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      event.preventDefault();\\r\\n      event.stopPropagation();\\r\\n\\r\\n      if (!isActive || isActive && (event.which === ESCAPE_KEYCODE || event.which === SPACE_KEYCODE)) {\\r\\n        if (event.which === ESCAPE_KEYCODE) {\\r\\n          $(parent.querySelector(SELECTOR_DATA_TOGGLE$2)).trigger('focus');\\r\\n        }\\r\\n\\r\\n        $(this).trigger('click');\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var items = [].slice.call(parent.querySelectorAll(SELECTOR_VISIBLE_ITEMS)).filter(function (item) {\\r\\n        return $(item).is(':visible');\\r\\n      });\\r\\n\\r\\n      if (items.length === 0) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var index = items.indexOf(event.target);\\r\\n\\r\\n      if (event.which === ARROW_UP_KEYCODE && index > 0) {\\r\\n        // Up\\r\\n        index--;\\r\\n      }\\r\\n\\r\\n      if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\\r\\n        // Down\\r\\n        index++;\\r\\n      }\\r\\n\\r\\n      if (index < 0) {\\r\\n        index = 0;\\r\\n      }\\r\\n\\r\\n      items[index].focus();\\r\\n    };\\r\\n\\r\\n    _createClass(Dropdown, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION$4;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Default\\\",\\r\\n      get: function get() {\\r\\n        return Default$2;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"DefaultType\\\",\\r\\n      get: function get() {\\r\\n        return DefaultType$2;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Dropdown;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Data Api implementation\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $(document).on(EVENT_KEYDOWN_DATA_API, SELECTOR_DATA_TOGGLE$2, Dropdown._dataApiKeydownHandler).on(EVENT_KEYDOWN_DATA_API, SELECTOR_MENU, Dropdown._dataApiKeydownHandler).on(EVENT_CLICK_DATA_API$4 + \\\" \\\" + EVENT_KEYUP_DATA_API, Dropdown._clearMenus).on(EVENT_CLICK_DATA_API$4, SELECTOR_DATA_TOGGLE$2, function (event) {\\r\\n    event.preventDefault();\\r\\n    event.stopPropagation();\\r\\n\\r\\n    Dropdown._jQueryInterface.call($(this), 'toggle');\\r\\n  }).on(EVENT_CLICK_DATA_API$4, SELECTOR_FORM_CHILD, function (e) {\\r\\n    e.stopPropagation();\\r\\n  });\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  $.fn[NAME$4] = Dropdown._jQueryInterface;\\r\\n  $.fn[NAME$4].Constructor = Dropdown;\\r\\n\\r\\n  $.fn[NAME$4].noConflict = function () {\\r\\n    $.fn[NAME$4] = JQUERY_NO_CONFLICT$4;\\r\\n    return Dropdown._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$5 = 'modal';\\r\\n  var VERSION$5 = '4.5.2';\\r\\n  var DATA_KEY$5 = 'bs.modal';\\r\\n  var EVENT_KEY$5 = \\\".\\\" + DATA_KEY$5;\\r\\n  var DATA_API_KEY$5 = '.data-api';\\r\\n  var JQUERY_NO_CONFLICT$5 = $.fn[NAME$5];\\r\\n  var ESCAPE_KEYCODE$1 = 27; // KeyboardEvent.which value for Escape (Esc) key\\r\\n\\r\\n  var Default$3 = {\\r\\n    backdrop: true,\\r\\n    keyboard: true,\\r\\n    focus: true,\\r\\n    show: true\\r\\n  };\\r\\n  var DefaultType$3 = {\\r\\n    backdrop: '(boolean|string)',\\r\\n    keyboard: 'boolean',\\r\\n    focus: 'boolean',\\r\\n    show: 'boolean'\\r\\n  };\\r\\n  var EVENT_HIDE$2 = \\\"hide\\\" + EVENT_KEY$5;\\r\\n  var EVENT_HIDE_PREVENTED = \\\"hidePrevented\\\" + EVENT_KEY$5;\\r\\n  var EVENT_HIDDEN$2 = \\\"hidden\\\" + EVENT_KEY$5;\\r\\n  var EVENT_SHOW$2 = \\\"show\\\" + EVENT_KEY$5;\\r\\n  var EVENT_SHOWN$2 = \\\"shown\\\" + EVENT_KEY$5;\\r\\n  var EVENT_FOCUSIN = \\\"focusin\\\" + EVENT_KEY$5;\\r\\n  var EVENT_RESIZE = \\\"resize\\\" + EVENT_KEY$5;\\r\\n  var EVENT_CLICK_DISMISS = \\\"click.dismiss\\\" + EVENT_KEY$5;\\r\\n  var EVENT_KEYDOWN_DISMISS = \\\"keydown.dismiss\\\" + EVENT_KEY$5;\\r\\n  var EVENT_MOUSEUP_DISMISS = \\\"mouseup.dismiss\\\" + EVENT_KEY$5;\\r\\n  var EVENT_MOUSEDOWN_DISMISS = \\\"mousedown.dismiss\\\" + EVENT_KEY$5;\\r\\n  var EVENT_CLICK_DATA_API$5 = \\\"click\\\" + EVENT_KEY$5 + DATA_API_KEY$5;\\r\\n  var CLASS_NAME_SCROLLABLE = 'modal-dialog-scrollable';\\r\\n  var CLASS_NAME_SCROLLBAR_MEASURER = 'modal-scrollbar-measure';\\r\\n  var CLASS_NAME_BACKDROP = 'modal-backdrop';\\r\\n  var CLASS_NAME_OPEN = 'modal-open';\\r\\n  var CLASS_NAME_FADE$1 = 'fade';\\r\\n  var CLASS_NAME_SHOW$3 = 'show';\\r\\n  var CLASS_NAME_STATIC = 'modal-static';\\r\\n  var SELECTOR_DIALOG = '.modal-dialog';\\r\\n  var SELECTOR_MODAL_BODY = '.modal-body';\\r\\n  var SELECTOR_DATA_TOGGLE$3 = '[data-toggle=\\\"modal\\\"]';\\r\\n  var SELECTOR_DATA_DISMISS = '[data-dismiss=\\\"modal\\\"]';\\r\\n  var SELECTOR_FIXED_CONTENT = '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top';\\r\\n  var SELECTOR_STICKY_CONTENT = '.sticky-top';\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Modal = /*#__PURE__*/function () {\\r\\n    function Modal(element, config) {\\r\\n      this._config = this._getConfig(config);\\r\\n      this._element = element;\\r\\n      this._dialog = element.querySelector(SELECTOR_DIALOG);\\r\\n      this._backdrop = null;\\r\\n      this._isShown = false;\\r\\n      this._isBodyOverflowing = false;\\r\\n      this._ignoreBackdropClick = false;\\r\\n      this._isTransitioning = false;\\r\\n      this._scrollbarWidth = 0;\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = Modal.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.toggle = function toggle(relatedTarget) {\\r\\n      return this._isShown ? this.hide() : this.show(relatedTarget);\\r\\n    };\\r\\n\\r\\n    _proto.show = function show(relatedTarget) {\\r\\n      var _this = this;\\r\\n\\r\\n      if (this._isShown || this._isTransitioning) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if ($(this._element).hasClass(CLASS_NAME_FADE$1)) {\\r\\n        this._isTransitioning = true;\\r\\n      }\\r\\n\\r\\n      var showEvent = $.Event(EVENT_SHOW$2, {\\r\\n        relatedTarget: relatedTarget\\r\\n      });\\r\\n      $(this._element).trigger(showEvent);\\r\\n\\r\\n      if (this._isShown || showEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      this._isShown = true;\\r\\n\\r\\n      this._checkScrollbar();\\r\\n\\r\\n      this._setScrollbar();\\r\\n\\r\\n      this._adjustDialog();\\r\\n\\r\\n      this._setEscapeEvent();\\r\\n\\r\\n      this._setResizeEvent();\\r\\n\\r\\n      $(this._element).on(EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, function (event) {\\r\\n        return _this.hide(event);\\r\\n      });\\r\\n      $(this._dialog).on(EVENT_MOUSEDOWN_DISMISS, function () {\\r\\n        $(_this._element).one(EVENT_MOUSEUP_DISMISS, function (event) {\\r\\n          if ($(event.target).is(_this._element)) {\\r\\n            _this._ignoreBackdropClick = true;\\r\\n          }\\r\\n        });\\r\\n      });\\r\\n\\r\\n      this._showBackdrop(function () {\\r\\n        return _this._showElement(relatedTarget);\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _proto.hide = function hide(event) {\\r\\n      var _this2 = this;\\r\\n\\r\\n      if (event) {\\r\\n        event.preventDefault();\\r\\n      }\\r\\n\\r\\n      if (!this._isShown || this._isTransitioning) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var hideEvent = $.Event(EVENT_HIDE$2);\\r\\n      $(this._element).trigger(hideEvent);\\r\\n\\r\\n      if (!this._isShown || hideEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      this._isShown = false;\\r\\n      var transition = $(this._element).hasClass(CLASS_NAME_FADE$1);\\r\\n\\r\\n      if (transition) {\\r\\n        this._isTransitioning = true;\\r\\n      }\\r\\n\\r\\n      this._setEscapeEvent();\\r\\n\\r\\n      this._setResizeEvent();\\r\\n\\r\\n      $(document).off(EVENT_FOCUSIN);\\r\\n      $(this._element).removeClass(CLASS_NAME_SHOW$3);\\r\\n      $(this._element).off(EVENT_CLICK_DISMISS);\\r\\n      $(this._dialog).off(EVENT_MOUSEDOWN_DISMISS);\\r\\n\\r\\n      if (transition) {\\r\\n        var transitionDuration = Util.getTransitionDurationFromElement(this._element);\\r\\n        $(this._element).one(Util.TRANSITION_END, function (event) {\\r\\n          return _this2._hideModal(event);\\r\\n        }).emulateTransitionEnd(transitionDuration);\\r\\n      } else {\\r\\n        this._hideModal();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      [window, this._element, this._dialog].forEach(function (htmlElement) {\\r\\n        return $(htmlElement).off(EVENT_KEY$5);\\r\\n      });\\r\\n      /**\\r\\n       * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`\\r\\n       * Do not move `document` in `htmlElements` array\\r\\n       * It will remove `EVENT_CLICK_DATA_API` event that should remain\\r\\n       */\\r\\n\\r\\n      $(document).off(EVENT_FOCUSIN);\\r\\n      $.removeData(this._element, DATA_KEY$5);\\r\\n      this._config = null;\\r\\n      this._element = null;\\r\\n      this._dialog = null;\\r\\n      this._backdrop = null;\\r\\n      this._isShown = null;\\r\\n      this._isBodyOverflowing = null;\\r\\n      this._ignoreBackdropClick = null;\\r\\n      this._isTransitioning = null;\\r\\n      this._scrollbarWidth = null;\\r\\n    };\\r\\n\\r\\n    _proto.handleUpdate = function handleUpdate() {\\r\\n      this._adjustDialog();\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._getConfig = function _getConfig(config) {\\r\\n      config = _extends({}, Default$3, config);\\r\\n      Util.typeCheckConfig(NAME$5, config, DefaultType$3);\\r\\n      return config;\\r\\n    };\\r\\n\\r\\n    _proto._triggerBackdropTransition = function _triggerBackdropTransition() {\\r\\n      var _this3 = this;\\r\\n\\r\\n      if (this._config.backdrop === 'static') {\\r\\n        var hideEventPrevented = $.Event(EVENT_HIDE_PREVENTED);\\r\\n        $(this._element).trigger(hideEventPrevented);\\r\\n\\r\\n        if (hideEventPrevented.defaultPrevented) {\\r\\n          return;\\r\\n        }\\r\\n\\r\\n        var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\\r\\n\\r\\n        if (!isModalOverflowing) {\\r\\n          this._element.style.overflowY = 'hidden';\\r\\n        }\\r\\n\\r\\n        this._element.classList.add(CLASS_NAME_STATIC);\\r\\n\\r\\n        var modalTransitionDuration = Util.getTransitionDurationFromElement(this._dialog);\\r\\n        $(this._element).off(Util.TRANSITION_END);\\r\\n        $(this._element).one(Util.TRANSITION_END, function () {\\r\\n          _this3._element.classList.remove(CLASS_NAME_STATIC);\\r\\n\\r\\n          if (!isModalOverflowing) {\\r\\n            $(_this3._element).one(Util.TRANSITION_END, function () {\\r\\n              _this3._element.style.overflowY = '';\\r\\n            }).emulateTransitionEnd(_this3._element, modalTransitionDuration);\\r\\n          }\\r\\n        }).emulateTransitionEnd(modalTransitionDuration);\\r\\n\\r\\n        this._element.focus();\\r\\n      } else {\\r\\n        this.hide();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._showElement = function _showElement(relatedTarget) {\\r\\n      var _this4 = this;\\r\\n\\r\\n      var transition = $(this._element).hasClass(CLASS_NAME_FADE$1);\\r\\n      var modalBody = this._dialog ? this._dialog.querySelector(SELECTOR_MODAL_BODY) : null;\\r\\n\\r\\n      if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\\r\\n        // Don't move modal's DOM position\\r\\n        document.body.appendChild(this._element);\\r\\n      }\\r\\n\\r\\n      this._element.style.display = 'block';\\r\\n\\r\\n      this._element.removeAttribute('aria-hidden');\\r\\n\\r\\n      this._element.setAttribute('aria-modal', true);\\r\\n\\r\\n      this._element.setAttribute('role', 'dialog');\\r\\n\\r\\n      if ($(this._dialog).hasClass(CLASS_NAME_SCROLLABLE) && modalBody) {\\r\\n        modalBody.scrollTop = 0;\\r\\n      } else {\\r\\n        this._element.scrollTop = 0;\\r\\n      }\\r\\n\\r\\n      if (transition) {\\r\\n        Util.reflow(this._element);\\r\\n      }\\r\\n\\r\\n      $(this._element).addClass(CLASS_NAME_SHOW$3);\\r\\n\\r\\n      if (this._config.focus) {\\r\\n        this._enforceFocus();\\r\\n      }\\r\\n\\r\\n      var shownEvent = $.Event(EVENT_SHOWN$2, {\\r\\n        relatedTarget: relatedTarget\\r\\n      });\\r\\n\\r\\n      var transitionComplete = function transitionComplete() {\\r\\n        if (_this4._config.focus) {\\r\\n          _this4._element.focus();\\r\\n        }\\r\\n\\r\\n        _this4._isTransitioning = false;\\r\\n        $(_this4._element).trigger(shownEvent);\\r\\n      };\\r\\n\\r\\n      if (transition) {\\r\\n        var transitionDuration = Util.getTransitionDurationFromElement(this._dialog);\\r\\n        $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(transitionDuration);\\r\\n      } else {\\r\\n        transitionComplete();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._enforceFocus = function _enforceFocus() {\\r\\n      var _this5 = this;\\r\\n\\r\\n      $(document).off(EVENT_FOCUSIN) // Guard against infinite focus loop\\r\\n      .on(EVENT_FOCUSIN, function (event) {\\r\\n        if (document !== event.target && _this5._element !== event.target && $(_this5._element).has(event.target).length === 0) {\\r\\n          _this5._element.focus();\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _proto._setEscapeEvent = function _setEscapeEvent() {\\r\\n      var _this6 = this;\\r\\n\\r\\n      if (this._isShown) {\\r\\n        $(this._element).on(EVENT_KEYDOWN_DISMISS, function (event) {\\r\\n          if (_this6._config.keyboard && event.which === ESCAPE_KEYCODE$1) {\\r\\n            event.preventDefault();\\r\\n\\r\\n            _this6.hide();\\r\\n          } else if (!_this6._config.keyboard && event.which === ESCAPE_KEYCODE$1) {\\r\\n            _this6._triggerBackdropTransition();\\r\\n          }\\r\\n        });\\r\\n      } else if (!this._isShown) {\\r\\n        $(this._element).off(EVENT_KEYDOWN_DISMISS);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._setResizeEvent = function _setResizeEvent() {\\r\\n      var _this7 = this;\\r\\n\\r\\n      if (this._isShown) {\\r\\n        $(window).on(EVENT_RESIZE, function (event) {\\r\\n          return _this7.handleUpdate(event);\\r\\n        });\\r\\n      } else {\\r\\n        $(window).off(EVENT_RESIZE);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._hideModal = function _hideModal() {\\r\\n      var _this8 = this;\\r\\n\\r\\n      this._element.style.display = 'none';\\r\\n\\r\\n      this._element.setAttribute('aria-hidden', true);\\r\\n\\r\\n      this._element.removeAttribute('aria-modal');\\r\\n\\r\\n      this._element.removeAttribute('role');\\r\\n\\r\\n      this._isTransitioning = false;\\r\\n\\r\\n      this._showBackdrop(function () {\\r\\n        $(document.body).removeClass(CLASS_NAME_OPEN);\\r\\n\\r\\n        _this8._resetAdjustments();\\r\\n\\r\\n        _this8._resetScrollbar();\\r\\n\\r\\n        $(_this8._element).trigger(EVENT_HIDDEN$2);\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _proto._removeBackdrop = function _removeBackdrop() {\\r\\n      if (this._backdrop) {\\r\\n        $(this._backdrop).remove();\\r\\n        this._backdrop = null;\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._showBackdrop = function _showBackdrop(callback) {\\r\\n      var _this9 = this;\\r\\n\\r\\n      var animate = $(this._element).hasClass(CLASS_NAME_FADE$1) ? CLASS_NAME_FADE$1 : '';\\r\\n\\r\\n      if (this._isShown && this._config.backdrop) {\\r\\n        this._backdrop = document.createElement('div');\\r\\n        this._backdrop.className = CLASS_NAME_BACKDROP;\\r\\n\\r\\n        if (animate) {\\r\\n          this._backdrop.classList.add(animate);\\r\\n        }\\r\\n\\r\\n        $(this._backdrop).appendTo(document.body);\\r\\n        $(this._element).on(EVENT_CLICK_DISMISS, function (event) {\\r\\n          if (_this9._ignoreBackdropClick) {\\r\\n            _this9._ignoreBackdropClick = false;\\r\\n            return;\\r\\n          }\\r\\n\\r\\n          if (event.target !== event.currentTarget) {\\r\\n            return;\\r\\n          }\\r\\n\\r\\n          _this9._triggerBackdropTransition();\\r\\n        });\\r\\n\\r\\n        if (animate) {\\r\\n          Util.reflow(this._backdrop);\\r\\n        }\\r\\n\\r\\n        $(this._backdrop).addClass(CLASS_NAME_SHOW$3);\\r\\n\\r\\n        if (!callback) {\\r\\n          return;\\r\\n        }\\r\\n\\r\\n        if (!animate) {\\r\\n          callback();\\r\\n          return;\\r\\n        }\\r\\n\\r\\n        var backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);\\r\\n        $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(backdropTransitionDuration);\\r\\n      } else if (!this._isShown && this._backdrop) {\\r\\n        $(this._backdrop).removeClass(CLASS_NAME_SHOW$3);\\r\\n\\r\\n        var callbackRemove = function callbackRemove() {\\r\\n          _this9._removeBackdrop();\\r\\n\\r\\n          if (callback) {\\r\\n            callback();\\r\\n          }\\r\\n        };\\r\\n\\r\\n        if ($(this._element).hasClass(CLASS_NAME_FADE$1)) {\\r\\n          var _backdropTransitionDuration = Util.getTransitionDurationFromElement(this._backdrop);\\r\\n\\r\\n          $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(_backdropTransitionDuration);\\r\\n        } else {\\r\\n          callbackRemove();\\r\\n        }\\r\\n      } else if (callback) {\\r\\n        callback();\\r\\n      }\\r\\n    } // ----------------------------------------------------------------------\\r\\n    // the following methods are used to handle overflowing modals\\r\\n    // todo (fat): these should probably be refactored out of modal.js\\r\\n    // ----------------------------------------------------------------------\\r\\n    ;\\r\\n\\r\\n    _proto._adjustDialog = function _adjustDialog() {\\r\\n      var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\\r\\n\\r\\n      if (!this._isBodyOverflowing && isModalOverflowing) {\\r\\n        this._element.style.paddingLeft = this._scrollbarWidth + \\\"px\\\";\\r\\n      }\\r\\n\\r\\n      if (this._isBodyOverflowing && !isModalOverflowing) {\\r\\n        this._element.style.paddingRight = this._scrollbarWidth + \\\"px\\\";\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._resetAdjustments = function _resetAdjustments() {\\r\\n      this._element.style.paddingLeft = '';\\r\\n      this._element.style.paddingRight = '';\\r\\n    };\\r\\n\\r\\n    _proto._checkScrollbar = function _checkScrollbar() {\\r\\n      var rect = document.body.getBoundingClientRect();\\r\\n      this._isBodyOverflowing = Math.round(rect.left + rect.right) < window.innerWidth;\\r\\n      this._scrollbarWidth = this._getScrollbarWidth();\\r\\n    };\\r\\n\\r\\n    _proto._setScrollbar = function _setScrollbar() {\\r\\n      var _this10 = this;\\r\\n\\r\\n      if (this._isBodyOverflowing) {\\r\\n        // Note: DOMNode.style.paddingRight returns the actual value or '' if not set\\r\\n        //   while $(DOMNode).css('padding-right') returns the calculated value or 0 if not set\\r\\n        var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));\\r\\n        var stickyContent = [].slice.call(document.querySelectorAll(SELECTOR_STICKY_CONTENT)); // Adjust fixed content padding\\r\\n\\r\\n        $(fixedContent).each(function (index, element) {\\r\\n          var actualPadding = element.style.paddingRight;\\r\\n          var calculatedPadding = $(element).css('padding-right');\\r\\n          $(element).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + _this10._scrollbarWidth + \\\"px\\\");\\r\\n        }); // Adjust sticky content margin\\r\\n\\r\\n        $(stickyContent).each(function (index, element) {\\r\\n          var actualMargin = element.style.marginRight;\\r\\n          var calculatedMargin = $(element).css('margin-right');\\r\\n          $(element).data('margin-right', actualMargin).css('margin-right', parseFloat(calculatedMargin) - _this10._scrollbarWidth + \\\"px\\\");\\r\\n        }); // Adjust body padding\\r\\n\\r\\n        var actualPadding = document.body.style.paddingRight;\\r\\n        var calculatedPadding = $(document.body).css('padding-right');\\r\\n        $(document.body).data('padding-right', actualPadding).css('padding-right', parseFloat(calculatedPadding) + this._scrollbarWidth + \\\"px\\\");\\r\\n      }\\r\\n\\r\\n      $(document.body).addClass(CLASS_NAME_OPEN);\\r\\n    };\\r\\n\\r\\n    _proto._resetScrollbar = function _resetScrollbar() {\\r\\n      // Restore fixed content padding\\r\\n      var fixedContent = [].slice.call(document.querySelectorAll(SELECTOR_FIXED_CONTENT));\\r\\n      $(fixedContent).each(function (index, element) {\\r\\n        var padding = $(element).data('padding-right');\\r\\n        $(element).removeData('padding-right');\\r\\n        element.style.paddingRight = padding ? padding : '';\\r\\n      }); // Restore sticky content\\r\\n\\r\\n      var elements = [].slice.call(document.querySelectorAll(\\\"\\\" + SELECTOR_STICKY_CONTENT));\\r\\n      $(elements).each(function (index, element) {\\r\\n        var margin = $(element).data('margin-right');\\r\\n\\r\\n        if (typeof margin !== 'undefined') {\\r\\n          $(element).css('margin-right', margin).removeData('margin-right');\\r\\n        }\\r\\n      }); // Restore body padding\\r\\n\\r\\n      var padding = $(document.body).data('padding-right');\\r\\n      $(document.body).removeData('padding-right');\\r\\n      document.body.style.paddingRight = padding ? padding : '';\\r\\n    };\\r\\n\\r\\n    _proto._getScrollbarWidth = function _getScrollbarWidth() {\\r\\n      // thx d.walsh\\r\\n      var scrollDiv = document.createElement('div');\\r\\n      scrollDiv.className = CLASS_NAME_SCROLLBAR_MEASURER;\\r\\n      document.body.appendChild(scrollDiv);\\r\\n      var scrollbarWidth = scrollDiv.getBoundingClientRect().width - scrollDiv.clientWidth;\\r\\n      document.body.removeChild(scrollDiv);\\r\\n      return scrollbarWidth;\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {\\r\\n      return this.each(function () {\\r\\n        var data = $(this).data(DATA_KEY$5);\\r\\n\\r\\n        var _config = _extends({}, Default$3, $(this).data(), typeof config === 'object' && config ? config : {});\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Modal(this, _config);\\r\\n          $(this).data(DATA_KEY$5, data);\\r\\n        }\\r\\n\\r\\n        if (typeof config === 'string') {\\r\\n          if (typeof data[config] === 'undefined') {\\r\\n            throw new TypeError(\\\"No method named \\\\\\\"\\\" + config + \\\"\\\\\\\"\\\");\\r\\n          }\\r\\n\\r\\n          data[config](relatedTarget);\\r\\n        } else if (_config.show) {\\r\\n          data.show(relatedTarget);\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _createClass(Modal, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION$5;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Default\\\",\\r\\n      get: function get() {\\r\\n        return Default$3;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Modal;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Data Api implementation\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $(document).on(EVENT_CLICK_DATA_API$5, SELECTOR_DATA_TOGGLE$3, function (event) {\\r\\n    var _this11 = this;\\r\\n\\r\\n    var target;\\r\\n    var selector = Util.getSelectorFromElement(this);\\r\\n\\r\\n    if (selector) {\\r\\n      target = document.querySelector(selector);\\r\\n    }\\r\\n\\r\\n    var config = $(target).data(DATA_KEY$5) ? 'toggle' : _extends({}, $(target).data(), $(this).data());\\r\\n\\r\\n    if (this.tagName === 'A' || this.tagName === 'AREA') {\\r\\n      event.preventDefault();\\r\\n    }\\r\\n\\r\\n    var $target = $(target).one(EVENT_SHOW$2, function (showEvent) {\\r\\n      if (showEvent.isDefaultPrevented()) {\\r\\n        // Only register focus restorer if modal will actually get shown\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      $target.one(EVENT_HIDDEN$2, function () {\\r\\n        if ($(_this11).is(':visible')) {\\r\\n          _this11.focus();\\r\\n        }\\r\\n      });\\r\\n    });\\r\\n\\r\\n    Modal._jQueryInterface.call($(target), config, this);\\r\\n  });\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  $.fn[NAME$5] = Modal._jQueryInterface;\\r\\n  $.fn[NAME$5].Constructor = Modal;\\r\\n\\r\\n  $.fn[NAME$5].noConflict = function () {\\r\\n    $.fn[NAME$5] = JQUERY_NO_CONFLICT$5;\\r\\n    return Modal._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * --------------------------------------------------------------------------\\r\\n   * Bootstrap (v4.5.2): tools/sanitizer.js\\r\\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\\r\\n   * --------------------------------------------------------------------------\\r\\n   */\\r\\n  var uriAttrs = ['background', 'cite', 'href', 'itemtype', 'longdesc', 'poster', 'src', 'xlink:href'];\\r\\n  var ARIA_ATTRIBUTE_PATTERN = /^aria-[\\\\w-]*$/i;\\r\\n  var DefaultWhitelist = {\\r\\n    // Global attributes allowed on any supplied element below.\\r\\n    '*': ['class', 'dir', 'id', 'lang', 'role', ARIA_ATTRIBUTE_PATTERN],\\r\\n    a: ['target', 'href', 'title', 'rel'],\\r\\n    area: [],\\r\\n    b: [],\\r\\n    br: [],\\r\\n    col: [],\\r\\n    code: [],\\r\\n    div: [],\\r\\n    em: [],\\r\\n    hr: [],\\r\\n    h1: [],\\r\\n    h2: [],\\r\\n    h3: [],\\r\\n    h4: [],\\r\\n    h5: [],\\r\\n    h6: [],\\r\\n    i: [],\\r\\n    img: ['src', 'srcset', 'alt', 'title', 'width', 'height'],\\r\\n    li: [],\\r\\n    ol: [],\\r\\n    p: [],\\r\\n    pre: [],\\r\\n    s: [],\\r\\n    small: [],\\r\\n    span: [],\\r\\n    sub: [],\\r\\n    sup: [],\\r\\n    strong: [],\\r\\n    u: [],\\r\\n    ul: []\\r\\n  };\\r\\n  /**\\r\\n   * A pattern that recognizes a commonly useful subset of URLs that are safe.\\r\\n   *\\r\\n   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\\r\\n   */\\r\\n\\r\\n  var SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^#&/:?]*(?:[#/?]|$))/gi;\\r\\n  /**\\r\\n   * A pattern that matches safe data URLs. Only matches image, video and audio types.\\r\\n   *\\r\\n   * Shoutout to Angular 7 https://github.com/angular/angular/blob/7.2.4/packages/core/src/sanitization/url_sanitizer.ts\\r\\n   */\\r\\n\\r\\n  var DATA_URL_PATTERN = /^data:(?:image\\\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\\\/(?:mpeg|mp4|ogg|webm)|audio\\\\/(?:mp3|oga|ogg|opus));base64,[\\\\d+/a-z]+=*$/i;\\r\\n\\r\\n  function allowedAttribute(attr, allowedAttributeList) {\\r\\n    var attrName = attr.nodeName.toLowerCase();\\r\\n\\r\\n    if (allowedAttributeList.indexOf(attrName) !== -1) {\\r\\n      if (uriAttrs.indexOf(attrName) !== -1) {\\r\\n        return Boolean(attr.nodeValue.match(SAFE_URL_PATTERN) || attr.nodeValue.match(DATA_URL_PATTERN));\\r\\n      }\\r\\n\\r\\n      return true;\\r\\n    }\\r\\n\\r\\n    var regExp = allowedAttributeList.filter(function (attrRegex) {\\r\\n      return attrRegex instanceof RegExp;\\r\\n    }); // Check if a regular expression validates the attribute.\\r\\n\\r\\n    for (var i = 0, len = regExp.length; i < len; i++) {\\r\\n      if (attrName.match(regExp[i])) {\\r\\n        return true;\\r\\n      }\\r\\n    }\\r\\n\\r\\n    return false;\\r\\n  }\\r\\n\\r\\n  function sanitizeHtml(unsafeHtml, whiteList, sanitizeFn) {\\r\\n    if (unsafeHtml.length === 0) {\\r\\n      return unsafeHtml;\\r\\n    }\\r\\n\\r\\n    if (sanitizeFn && typeof sanitizeFn === 'function') {\\r\\n      return sanitizeFn(unsafeHtml);\\r\\n    }\\r\\n\\r\\n    var domParser = new window.DOMParser();\\r\\n    var createdDocument = domParser.parseFromString(unsafeHtml, 'text/html');\\r\\n    var whitelistKeys = Object.keys(whiteList);\\r\\n    var elements = [].slice.call(createdDocument.body.querySelectorAll('*'));\\r\\n\\r\\n    var _loop = function _loop(i, len) {\\r\\n      var el = elements[i];\\r\\n      var elName = el.nodeName.toLowerCase();\\r\\n\\r\\n      if (whitelistKeys.indexOf(el.nodeName.toLowerCase()) === -1) {\\r\\n        el.parentNode.removeChild(el);\\r\\n        return \\\"continue\\\";\\r\\n      }\\r\\n\\r\\n      var attributeList = [].slice.call(el.attributes);\\r\\n      var whitelistedAttributes = [].concat(whiteList['*'] || [], whiteList[elName] || []);\\r\\n      attributeList.forEach(function (attr) {\\r\\n        if (!allowedAttribute(attr, whitelistedAttributes)) {\\r\\n          el.removeAttribute(attr.nodeName);\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    for (var i = 0, len = elements.length; i < len; i++) {\\r\\n      var _ret = _loop(i);\\r\\n\\r\\n      if (_ret === \\\"continue\\\") continue;\\r\\n    }\\r\\n\\r\\n    return createdDocument.body.innerHTML;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$6 = 'tooltip';\\r\\n  var VERSION$6 = '4.5.2';\\r\\n  var DATA_KEY$6 = 'bs.tooltip';\\r\\n  var EVENT_KEY$6 = \\\".\\\" + DATA_KEY$6;\\r\\n  var JQUERY_NO_CONFLICT$6 = $.fn[NAME$6];\\r\\n  var CLASS_PREFIX = 'bs-tooltip';\\r\\n  var BSCLS_PREFIX_REGEX = new RegExp(\\\"(^|\\\\\\\\s)\\\" + CLASS_PREFIX + \\\"\\\\\\\\S+\\\", 'g');\\r\\n  var DISALLOWED_ATTRIBUTES = ['sanitize', 'whiteList', 'sanitizeFn'];\\r\\n  var DefaultType$4 = {\\r\\n    animation: 'boolean',\\r\\n    template: 'string',\\r\\n    title: '(string|element|function)',\\r\\n    trigger: 'string',\\r\\n    delay: '(number|object)',\\r\\n    html: 'boolean',\\r\\n    selector: '(string|boolean)',\\r\\n    placement: '(string|function)',\\r\\n    offset: '(number|string|function)',\\r\\n    container: '(string|element|boolean)',\\r\\n    fallbackPlacement: '(string|array)',\\r\\n    boundary: '(string|element)',\\r\\n    sanitize: 'boolean',\\r\\n    sanitizeFn: '(null|function)',\\r\\n    whiteList: 'object',\\r\\n    popperConfig: '(null|object)'\\r\\n  };\\r\\n  var AttachmentMap = {\\r\\n    AUTO: 'auto',\\r\\n    TOP: 'top',\\r\\n    RIGHT: 'right',\\r\\n    BOTTOM: 'bottom',\\r\\n    LEFT: 'left'\\r\\n  };\\r\\n  var Default$4 = {\\r\\n    animation: true,\\r\\n    template: '<div class=\\\"tooltip\\\" role=\\\"tooltip\\\">' + '<div class=\\\"arrow\\\"></div>' + '<div class=\\\"tooltip-inner\\\"></div></div>',\\r\\n    trigger: 'hover focus',\\r\\n    title: '',\\r\\n    delay: 0,\\r\\n    html: false,\\r\\n    selector: false,\\r\\n    placement: 'top',\\r\\n    offset: 0,\\r\\n    container: false,\\r\\n    fallbackPlacement: 'flip',\\r\\n    boundary: 'scrollParent',\\r\\n    sanitize: true,\\r\\n    sanitizeFn: null,\\r\\n    whiteList: DefaultWhitelist,\\r\\n    popperConfig: null\\r\\n  };\\r\\n  var HOVER_STATE_SHOW = 'show';\\r\\n  var HOVER_STATE_OUT = 'out';\\r\\n  var Event = {\\r\\n    HIDE: \\\"hide\\\" + EVENT_KEY$6,\\r\\n    HIDDEN: \\\"hidden\\\" + EVENT_KEY$6,\\r\\n    SHOW: \\\"show\\\" + EVENT_KEY$6,\\r\\n    SHOWN: \\\"shown\\\" + EVENT_KEY$6,\\r\\n    INSERTED: \\\"inserted\\\" + EVENT_KEY$6,\\r\\n    CLICK: \\\"click\\\" + EVENT_KEY$6,\\r\\n    FOCUSIN: \\\"focusin\\\" + EVENT_KEY$6,\\r\\n    FOCUSOUT: \\\"focusout\\\" + EVENT_KEY$6,\\r\\n    MOUSEENTER: \\\"mouseenter\\\" + EVENT_KEY$6,\\r\\n    MOUSELEAVE: \\\"mouseleave\\\" + EVENT_KEY$6\\r\\n  };\\r\\n  var CLASS_NAME_FADE$2 = 'fade';\\r\\n  var CLASS_NAME_SHOW$4 = 'show';\\r\\n  var SELECTOR_TOOLTIP_INNER = '.tooltip-inner';\\r\\n  var SELECTOR_ARROW = '.arrow';\\r\\n  var TRIGGER_HOVER = 'hover';\\r\\n  var TRIGGER_FOCUS = 'focus';\\r\\n  var TRIGGER_CLICK = 'click';\\r\\n  var TRIGGER_MANUAL = 'manual';\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Tooltip = /*#__PURE__*/function () {\\r\\n    function Tooltip(element, config) {\\r\\n      if (typeof Popper === 'undefined') {\\r\\n        throw new TypeError('Bootstrap\\\\'s tooltips require Popper.js (https://popper.js.org/)');\\r\\n      } // private\\r\\n\\r\\n\\r\\n      this._isEnabled = true;\\r\\n      this._timeout = 0;\\r\\n      this._hoverState = '';\\r\\n      this._activeTrigger = {};\\r\\n      this._popper = null; // Protected\\r\\n\\r\\n      this.element = element;\\r\\n      this.config = this._getConfig(config);\\r\\n      this.tip = null;\\r\\n\\r\\n      this._setListeners();\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = Tooltip.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.enable = function enable() {\\r\\n      this._isEnabled = true;\\r\\n    };\\r\\n\\r\\n    _proto.disable = function disable() {\\r\\n      this._isEnabled = false;\\r\\n    };\\r\\n\\r\\n    _proto.toggleEnabled = function toggleEnabled() {\\r\\n      this._isEnabled = !this._isEnabled;\\r\\n    };\\r\\n\\r\\n    _proto.toggle = function toggle(event) {\\r\\n      if (!this._isEnabled) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (event) {\\r\\n        var dataKey = this.constructor.DATA_KEY;\\r\\n        var context = $(event.currentTarget).data(dataKey);\\r\\n\\r\\n        if (!context) {\\r\\n          context = new this.constructor(event.currentTarget, this._getDelegateConfig());\\r\\n          $(event.currentTarget).data(dataKey, context);\\r\\n        }\\r\\n\\r\\n        context._activeTrigger.click = !context._activeTrigger.click;\\r\\n\\r\\n        if (context._isWithActiveTrigger()) {\\r\\n          context._enter(null, context);\\r\\n        } else {\\r\\n          context._leave(null, context);\\r\\n        }\\r\\n      } else {\\r\\n        if ($(this.getTipElement()).hasClass(CLASS_NAME_SHOW$4)) {\\r\\n          this._leave(null, this);\\r\\n\\r\\n          return;\\r\\n        }\\r\\n\\r\\n        this._enter(null, this);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      clearTimeout(this._timeout);\\r\\n      $.removeData(this.element, this.constructor.DATA_KEY);\\r\\n      $(this.element).off(this.constructor.EVENT_KEY);\\r\\n      $(this.element).closest('.modal').off('hide.bs.modal', this._hideModalHandler);\\r\\n\\r\\n      if (this.tip) {\\r\\n        $(this.tip).remove();\\r\\n      }\\r\\n\\r\\n      this._isEnabled = null;\\r\\n      this._timeout = null;\\r\\n      this._hoverState = null;\\r\\n      this._activeTrigger = null;\\r\\n\\r\\n      if (this._popper) {\\r\\n        this._popper.destroy();\\r\\n      }\\r\\n\\r\\n      this._popper = null;\\r\\n      this.element = null;\\r\\n      this.config = null;\\r\\n      this.tip = null;\\r\\n    };\\r\\n\\r\\n    _proto.show = function show() {\\r\\n      var _this = this;\\r\\n\\r\\n      if ($(this.element).css('display') === 'none') {\\r\\n        throw new Error('Please use show on visible elements');\\r\\n      }\\r\\n\\r\\n      var showEvent = $.Event(this.constructor.Event.SHOW);\\r\\n\\r\\n      if (this.isWithContent() && this._isEnabled) {\\r\\n        $(this.element).trigger(showEvent);\\r\\n        var shadowRoot = Util.findShadowRoot(this.element);\\r\\n        var isInTheDom = $.contains(shadowRoot !== null ? shadowRoot : this.element.ownerDocument.documentElement, this.element);\\r\\n\\r\\n        if (showEvent.isDefaultPrevented() || !isInTheDom) {\\r\\n          return;\\r\\n        }\\r\\n\\r\\n        var tip = this.getTipElement();\\r\\n        var tipId = Util.getUID(this.constructor.NAME);\\r\\n        tip.setAttribute('id', tipId);\\r\\n        this.element.setAttribute('aria-describedby', tipId);\\r\\n        this.setContent();\\r\\n\\r\\n        if (this.config.animation) {\\r\\n          $(tip).addClass(CLASS_NAME_FADE$2);\\r\\n        }\\r\\n\\r\\n        var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\\r\\n\\r\\n        var attachment = this._getAttachment(placement);\\r\\n\\r\\n        this.addAttachmentClass(attachment);\\r\\n\\r\\n        var container = this._getContainer();\\r\\n\\r\\n        $(tip).data(this.constructor.DATA_KEY, this);\\r\\n\\r\\n        if (!$.contains(this.element.ownerDocument.documentElement, this.tip)) {\\r\\n          $(tip).appendTo(container);\\r\\n        }\\r\\n\\r\\n        $(this.element).trigger(this.constructor.Event.INSERTED);\\r\\n        this._popper = new Popper(this.element, tip, this._getPopperConfig(attachment));\\r\\n        $(tip).addClass(CLASS_NAME_SHOW$4); // If this is a touch-enabled device we add extra\\r\\n        // empty mouseover listeners to the body's immediate children;\\r\\n        // only needed because of broken event delegation on iOS\\r\\n        // https://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\\r\\n\\r\\n        if ('ontouchstart' in document.documentElement) {\\r\\n          $(document.body).children().on('mouseover', null, $.noop);\\r\\n        }\\r\\n\\r\\n        var complete = function complete() {\\r\\n          if (_this.config.animation) {\\r\\n            _this._fixTransition();\\r\\n          }\\r\\n\\r\\n          var prevHoverState = _this._hoverState;\\r\\n          _this._hoverState = null;\\r\\n          $(_this.element).trigger(_this.constructor.Event.SHOWN);\\r\\n\\r\\n          if (prevHoverState === HOVER_STATE_OUT) {\\r\\n            _this._leave(null, _this);\\r\\n          }\\r\\n        };\\r\\n\\r\\n        if ($(this.tip).hasClass(CLASS_NAME_FADE$2)) {\\r\\n          var transitionDuration = Util.getTransitionDurationFromElement(this.tip);\\r\\n          $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\\r\\n        } else {\\r\\n          complete();\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.hide = function hide(callback) {\\r\\n      var _this2 = this;\\r\\n\\r\\n      var tip = this.getTipElement();\\r\\n      var hideEvent = $.Event(this.constructor.Event.HIDE);\\r\\n\\r\\n      var complete = function complete() {\\r\\n        if (_this2._hoverState !== HOVER_STATE_SHOW && tip.parentNode) {\\r\\n          tip.parentNode.removeChild(tip);\\r\\n        }\\r\\n\\r\\n        _this2._cleanTipClass();\\r\\n\\r\\n        _this2.element.removeAttribute('aria-describedby');\\r\\n\\r\\n        $(_this2.element).trigger(_this2.constructor.Event.HIDDEN);\\r\\n\\r\\n        if (_this2._popper !== null) {\\r\\n          _this2._popper.destroy();\\r\\n        }\\r\\n\\r\\n        if (callback) {\\r\\n          callback();\\r\\n        }\\r\\n      };\\r\\n\\r\\n      $(this.element).trigger(hideEvent);\\r\\n\\r\\n      if (hideEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      $(tip).removeClass(CLASS_NAME_SHOW$4); // If this is a touch-enabled device we remove the extra\\r\\n      // empty mouseover listeners we added for iOS support\\r\\n\\r\\n      if ('ontouchstart' in document.documentElement) {\\r\\n        $(document.body).children().off('mouseover', null, $.noop);\\r\\n      }\\r\\n\\r\\n      this._activeTrigger[TRIGGER_CLICK] = false;\\r\\n      this._activeTrigger[TRIGGER_FOCUS] = false;\\r\\n      this._activeTrigger[TRIGGER_HOVER] = false;\\r\\n\\r\\n      if ($(this.tip).hasClass(CLASS_NAME_FADE$2)) {\\r\\n        var transitionDuration = Util.getTransitionDurationFromElement(tip);\\r\\n        $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\\r\\n      } else {\\r\\n        complete();\\r\\n      }\\r\\n\\r\\n      this._hoverState = '';\\r\\n    };\\r\\n\\r\\n    _proto.update = function update() {\\r\\n      if (this._popper !== null) {\\r\\n        this._popper.scheduleUpdate();\\r\\n      }\\r\\n    } // Protected\\r\\n    ;\\r\\n\\r\\n    _proto.isWithContent = function isWithContent() {\\r\\n      return Boolean(this.getTitle());\\r\\n    };\\r\\n\\r\\n    _proto.addAttachmentClass = function addAttachmentClass(attachment) {\\r\\n      $(this.getTipElement()).addClass(CLASS_PREFIX + \\\"-\\\" + attachment);\\r\\n    };\\r\\n\\r\\n    _proto.getTipElement = function getTipElement() {\\r\\n      this.tip = this.tip || $(this.config.template)[0];\\r\\n      return this.tip;\\r\\n    };\\r\\n\\r\\n    _proto.setContent = function setContent() {\\r\\n      var tip = this.getTipElement();\\r\\n      this.setElementContent($(tip.querySelectorAll(SELECTOR_TOOLTIP_INNER)), this.getTitle());\\r\\n      $(tip).removeClass(CLASS_NAME_FADE$2 + \\\" \\\" + CLASS_NAME_SHOW$4);\\r\\n    };\\r\\n\\r\\n    _proto.setElementContent = function setElementContent($element, content) {\\r\\n      if (typeof content === 'object' && (content.nodeType || content.jquery)) {\\r\\n        // Content is a DOM node or a jQuery\\r\\n        if (this.config.html) {\\r\\n          if (!$(content).parent().is($element)) {\\r\\n            $element.empty().append(content);\\r\\n          }\\r\\n        } else {\\r\\n          $element.text($(content).text());\\r\\n        }\\r\\n\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (this.config.html) {\\r\\n        if (this.config.sanitize) {\\r\\n          content = sanitizeHtml(content, this.config.whiteList, this.config.sanitizeFn);\\r\\n        }\\r\\n\\r\\n        $element.html(content);\\r\\n      } else {\\r\\n        $element.text(content);\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.getTitle = function getTitle() {\\r\\n      var title = this.element.getAttribute('data-original-title');\\r\\n\\r\\n      if (!title) {\\r\\n        title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\\r\\n      }\\r\\n\\r\\n      return title;\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._getPopperConfig = function _getPopperConfig(attachment) {\\r\\n      var _this3 = this;\\r\\n\\r\\n      var defaultBsConfig = {\\r\\n        placement: attachment,\\r\\n        modifiers: {\\r\\n          offset: this._getOffset(),\\r\\n          flip: {\\r\\n            behavior: this.config.fallbackPlacement\\r\\n          },\\r\\n          arrow: {\\r\\n            element: SELECTOR_ARROW\\r\\n          },\\r\\n          preventOverflow: {\\r\\n            boundariesElement: this.config.boundary\\r\\n          }\\r\\n        },\\r\\n        onCreate: function onCreate(data) {\\r\\n          if (data.originalPlacement !== data.placement) {\\r\\n            _this3._handlePopperPlacementChange(data);\\r\\n          }\\r\\n        },\\r\\n        onUpdate: function onUpdate(data) {\\r\\n          return _this3._handlePopperPlacementChange(data);\\r\\n        }\\r\\n      };\\r\\n      return _extends({}, defaultBsConfig, this.config.popperConfig);\\r\\n    };\\r\\n\\r\\n    _proto._getOffset = function _getOffset() {\\r\\n      var _this4 = this;\\r\\n\\r\\n      var offset = {};\\r\\n\\r\\n      if (typeof this.config.offset === 'function') {\\r\\n        offset.fn = function (data) {\\r\\n          data.offsets = _extends({}, data.offsets, _this4.config.offset(data.offsets, _this4.element) || {});\\r\\n          return data;\\r\\n        };\\r\\n      } else {\\r\\n        offset.offset = this.config.offset;\\r\\n      }\\r\\n\\r\\n      return offset;\\r\\n    };\\r\\n\\r\\n    _proto._getContainer = function _getContainer() {\\r\\n      if (this.config.container === false) {\\r\\n        return document.body;\\r\\n      }\\r\\n\\r\\n      if (Util.isElement(this.config.container)) {\\r\\n        return $(this.config.container);\\r\\n      }\\r\\n\\r\\n      return $(document).find(this.config.container);\\r\\n    };\\r\\n\\r\\n    _proto._getAttachment = function _getAttachment(placement) {\\r\\n      return AttachmentMap[placement.toUpperCase()];\\r\\n    };\\r\\n\\r\\n    _proto._setListeners = function _setListeners() {\\r\\n      var _this5 = this;\\r\\n\\r\\n      var triggers = this.config.trigger.split(' ');\\r\\n      triggers.forEach(function (trigger) {\\r\\n        if (trigger === 'click') {\\r\\n          $(_this5.element).on(_this5.constructor.Event.CLICK, _this5.config.selector, function (event) {\\r\\n            return _this5.toggle(event);\\r\\n          });\\r\\n        } else if (trigger !== TRIGGER_MANUAL) {\\r\\n          var eventIn = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSEENTER : _this5.constructor.Event.FOCUSIN;\\r\\n          var eventOut = trigger === TRIGGER_HOVER ? _this5.constructor.Event.MOUSELEAVE : _this5.constructor.Event.FOCUSOUT;\\r\\n          $(_this5.element).on(eventIn, _this5.config.selector, function (event) {\\r\\n            return _this5._enter(event);\\r\\n          }).on(eventOut, _this5.config.selector, function (event) {\\r\\n            return _this5._leave(event);\\r\\n          });\\r\\n        }\\r\\n      });\\r\\n\\r\\n      this._hideModalHandler = function () {\\r\\n        if (_this5.element) {\\r\\n          _this5.hide();\\r\\n        }\\r\\n      };\\r\\n\\r\\n      $(this.element).closest('.modal').on('hide.bs.modal', this._hideModalHandler);\\r\\n\\r\\n      if (this.config.selector) {\\r\\n        this.config = _extends({}, this.config, {\\r\\n          trigger: 'manual',\\r\\n          selector: ''\\r\\n        });\\r\\n      } else {\\r\\n        this._fixTitle();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._fixTitle = function _fixTitle() {\\r\\n      var titleType = typeof this.element.getAttribute('data-original-title');\\r\\n\\r\\n      if (this.element.getAttribute('title') || titleType !== 'string') {\\r\\n        this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\\r\\n        this.element.setAttribute('title', '');\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._enter = function _enter(event, context) {\\r\\n      var dataKey = this.constructor.DATA_KEY;\\r\\n      context = context || $(event.currentTarget).data(dataKey);\\r\\n\\r\\n      if (!context) {\\r\\n        context = new this.constructor(event.currentTarget, this._getDelegateConfig());\\r\\n        $(event.currentTarget).data(dataKey, context);\\r\\n      }\\r\\n\\r\\n      if (event) {\\r\\n        context._activeTrigger[event.type === 'focusin' ? TRIGGER_FOCUS : TRIGGER_HOVER] = true;\\r\\n      }\\r\\n\\r\\n      if ($(context.getTipElement()).hasClass(CLASS_NAME_SHOW$4) || context._hoverState === HOVER_STATE_SHOW) {\\r\\n        context._hoverState = HOVER_STATE_SHOW;\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      clearTimeout(context._timeout);\\r\\n      context._hoverState = HOVER_STATE_SHOW;\\r\\n\\r\\n      if (!context.config.delay || !context.config.delay.show) {\\r\\n        context.show();\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      context._timeout = setTimeout(function () {\\r\\n        if (context._hoverState === HOVER_STATE_SHOW) {\\r\\n          context.show();\\r\\n        }\\r\\n      }, context.config.delay.show);\\r\\n    };\\r\\n\\r\\n    _proto._leave = function _leave(event, context) {\\r\\n      var dataKey = this.constructor.DATA_KEY;\\r\\n      context = context || $(event.currentTarget).data(dataKey);\\r\\n\\r\\n      if (!context) {\\r\\n        context = new this.constructor(event.currentTarget, this._getDelegateConfig());\\r\\n        $(event.currentTarget).data(dataKey, context);\\r\\n      }\\r\\n\\r\\n      if (event) {\\r\\n        context._activeTrigger[event.type === 'focusout' ? TRIGGER_FOCUS : TRIGGER_HOVER] = false;\\r\\n      }\\r\\n\\r\\n      if (context._isWithActiveTrigger()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      clearTimeout(context._timeout);\\r\\n      context._hoverState = HOVER_STATE_OUT;\\r\\n\\r\\n      if (!context.config.delay || !context.config.delay.hide) {\\r\\n        context.hide();\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      context._timeout = setTimeout(function () {\\r\\n        if (context._hoverState === HOVER_STATE_OUT) {\\r\\n          context.hide();\\r\\n        }\\r\\n      }, context.config.delay.hide);\\r\\n    };\\r\\n\\r\\n    _proto._isWithActiveTrigger = function _isWithActiveTrigger() {\\r\\n      for (var trigger in this._activeTrigger) {\\r\\n        if (this._activeTrigger[trigger]) {\\r\\n          return true;\\r\\n        }\\r\\n      }\\r\\n\\r\\n      return false;\\r\\n    };\\r\\n\\r\\n    _proto._getConfig = function _getConfig(config) {\\r\\n      var dataAttributes = $(this.element).data();\\r\\n      Object.keys(dataAttributes).forEach(function (dataAttr) {\\r\\n        if (DISALLOWED_ATTRIBUTES.indexOf(dataAttr) !== -1) {\\r\\n          delete dataAttributes[dataAttr];\\r\\n        }\\r\\n      });\\r\\n      config = _extends({}, this.constructor.Default, dataAttributes, typeof config === 'object' && config ? config : {});\\r\\n\\r\\n      if (typeof config.delay === 'number') {\\r\\n        config.delay = {\\r\\n          show: config.delay,\\r\\n          hide: config.delay\\r\\n        };\\r\\n      }\\r\\n\\r\\n      if (typeof config.title === 'number') {\\r\\n        config.title = config.title.toString();\\r\\n      }\\r\\n\\r\\n      if (typeof config.content === 'number') {\\r\\n        config.content = config.content.toString();\\r\\n      }\\r\\n\\r\\n      Util.typeCheckConfig(NAME$6, config, this.constructor.DefaultType);\\r\\n\\r\\n      if (config.sanitize) {\\r\\n        config.template = sanitizeHtml(config.template, config.whiteList, config.sanitizeFn);\\r\\n      }\\r\\n\\r\\n      return config;\\r\\n    };\\r\\n\\r\\n    _proto._getDelegateConfig = function _getDelegateConfig() {\\r\\n      var config = {};\\r\\n\\r\\n      if (this.config) {\\r\\n        for (var key in this.config) {\\r\\n          if (this.constructor.Default[key] !== this.config[key]) {\\r\\n            config[key] = this.config[key];\\r\\n          }\\r\\n        }\\r\\n      }\\r\\n\\r\\n      return config;\\r\\n    };\\r\\n\\r\\n    _proto._cleanTipClass = function _cleanTipClass() {\\r\\n      var $tip = $(this.getTipElement());\\r\\n      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX);\\r\\n\\r\\n      if (tabClass !== null && tabClass.length) {\\r\\n        $tip.removeClass(tabClass.join(''));\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._handlePopperPlacementChange = function _handlePopperPlacementChange(popperData) {\\r\\n      this.tip = popperData.instance.popper;\\r\\n\\r\\n      this._cleanTipClass();\\r\\n\\r\\n      this.addAttachmentClass(this._getAttachment(popperData.placement));\\r\\n    };\\r\\n\\r\\n    _proto._fixTransition = function _fixTransition() {\\r\\n      var tip = this.getTipElement();\\r\\n      var initConfigAnimation = this.config.animation;\\r\\n\\r\\n      if (tip.getAttribute('x-placement') !== null) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      $(tip).removeClass(CLASS_NAME_FADE$2);\\r\\n      this.config.animation = false;\\r\\n      this.hide();\\r\\n      this.show();\\r\\n      this.config.animation = initConfigAnimation;\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Tooltip._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var data = $(this).data(DATA_KEY$6);\\r\\n\\r\\n        var _config = typeof config === 'object' && config;\\r\\n\\r\\n        if (!data && /dispose|hide/.test(config)) {\\r\\n          return;\\r\\n        }\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Tooltip(this, _config);\\r\\n          $(this).data(DATA_KEY$6, data);\\r\\n        }\\r\\n\\r\\n        if (typeof config === 'string') {\\r\\n          if (typeof data[config] === 'undefined') {\\r\\n            throw new TypeError(\\\"No method named \\\\\\\"\\\" + config + \\\"\\\\\\\"\\\");\\r\\n          }\\r\\n\\r\\n          data[config]();\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _createClass(Tooltip, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION$6;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Default\\\",\\r\\n      get: function get() {\\r\\n        return Default$4;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"NAME\\\",\\r\\n      get: function get() {\\r\\n        return NAME$6;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"DATA_KEY\\\",\\r\\n      get: function get() {\\r\\n        return DATA_KEY$6;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Event\\\",\\r\\n      get: function get() {\\r\\n        return Event;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"EVENT_KEY\\\",\\r\\n      get: function get() {\\r\\n        return EVENT_KEY$6;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"DefaultType\\\",\\r\\n      get: function get() {\\r\\n        return DefaultType$4;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Tooltip;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $.fn[NAME$6] = Tooltip._jQueryInterface;\\r\\n  $.fn[NAME$6].Constructor = Tooltip;\\r\\n\\r\\n  $.fn[NAME$6].noConflict = function () {\\r\\n    $.fn[NAME$6] = JQUERY_NO_CONFLICT$6;\\r\\n    return Tooltip._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$7 = 'popover';\\r\\n  var VERSION$7 = '4.5.2';\\r\\n  var DATA_KEY$7 = 'bs.popover';\\r\\n  var EVENT_KEY$7 = \\\".\\\" + DATA_KEY$7;\\r\\n  var JQUERY_NO_CONFLICT$7 = $.fn[NAME$7];\\r\\n  var CLASS_PREFIX$1 = 'bs-popover';\\r\\n  var BSCLS_PREFIX_REGEX$1 = new RegExp(\\\"(^|\\\\\\\\s)\\\" + CLASS_PREFIX$1 + \\\"\\\\\\\\S+\\\", 'g');\\r\\n\\r\\n  var Default$5 = _extends({}, Tooltip.Default, {\\r\\n    placement: 'right',\\r\\n    trigger: 'click',\\r\\n    content: '',\\r\\n    template: '<div class=\\\"popover\\\" role=\\\"tooltip\\\">' + '<div class=\\\"arrow\\\"></div>' + '<h3 class=\\\"popover-header\\\"></h3>' + '<div class=\\\"popover-body\\\"></div></div>'\\r\\n  });\\r\\n\\r\\n  var DefaultType$5 = _extends({}, Tooltip.DefaultType, {\\r\\n    content: '(string|element|function)'\\r\\n  });\\r\\n\\r\\n  var CLASS_NAME_FADE$3 = 'fade';\\r\\n  var CLASS_NAME_SHOW$5 = 'show';\\r\\n  var SELECTOR_TITLE = '.popover-header';\\r\\n  var SELECTOR_CONTENT = '.popover-body';\\r\\n  var Event$1 = {\\r\\n    HIDE: \\\"hide\\\" + EVENT_KEY$7,\\r\\n    HIDDEN: \\\"hidden\\\" + EVENT_KEY$7,\\r\\n    SHOW: \\\"show\\\" + EVENT_KEY$7,\\r\\n    SHOWN: \\\"shown\\\" + EVENT_KEY$7,\\r\\n    INSERTED: \\\"inserted\\\" + EVENT_KEY$7,\\r\\n    CLICK: \\\"click\\\" + EVENT_KEY$7,\\r\\n    FOCUSIN: \\\"focusin\\\" + EVENT_KEY$7,\\r\\n    FOCUSOUT: \\\"focusout\\\" + EVENT_KEY$7,\\r\\n    MOUSEENTER: \\\"mouseenter\\\" + EVENT_KEY$7,\\r\\n    MOUSELEAVE: \\\"mouseleave\\\" + EVENT_KEY$7\\r\\n  };\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Popover = /*#__PURE__*/function (_Tooltip) {\\r\\n    _inheritsLoose(Popover, _Tooltip);\\r\\n\\r\\n    function Popover() {\\r\\n      return _Tooltip.apply(this, arguments) || this;\\r\\n    }\\r\\n\\r\\n    var _proto = Popover.prototype;\\r\\n\\r\\n    // Overrides\\r\\n    _proto.isWithContent = function isWithContent() {\\r\\n      return this.getTitle() || this._getContent();\\r\\n    };\\r\\n\\r\\n    _proto.addAttachmentClass = function addAttachmentClass(attachment) {\\r\\n      $(this.getTipElement()).addClass(CLASS_PREFIX$1 + \\\"-\\\" + attachment);\\r\\n    };\\r\\n\\r\\n    _proto.getTipElement = function getTipElement() {\\r\\n      this.tip = this.tip || $(this.config.template)[0];\\r\\n      return this.tip;\\r\\n    };\\r\\n\\r\\n    _proto.setContent = function setContent() {\\r\\n      var $tip = $(this.getTipElement()); // We use append for html objects to maintain js events\\r\\n\\r\\n      this.setElementContent($tip.find(SELECTOR_TITLE), this.getTitle());\\r\\n\\r\\n      var content = this._getContent();\\r\\n\\r\\n      if (typeof content === 'function') {\\r\\n        content = content.call(this.element);\\r\\n      }\\r\\n\\r\\n      this.setElementContent($tip.find(SELECTOR_CONTENT), content);\\r\\n      $tip.removeClass(CLASS_NAME_FADE$3 + \\\" \\\" + CLASS_NAME_SHOW$5);\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._getContent = function _getContent() {\\r\\n      return this.element.getAttribute('data-content') || this.config.content;\\r\\n    };\\r\\n\\r\\n    _proto._cleanTipClass = function _cleanTipClass() {\\r\\n      var $tip = $(this.getTipElement());\\r\\n      var tabClass = $tip.attr('class').match(BSCLS_PREFIX_REGEX$1);\\r\\n\\r\\n      if (tabClass !== null && tabClass.length > 0) {\\r\\n        $tip.removeClass(tabClass.join(''));\\r\\n      }\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Popover._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var data = $(this).data(DATA_KEY$7);\\r\\n\\r\\n        var _config = typeof config === 'object' ? config : null;\\r\\n\\r\\n        if (!data && /dispose|hide/.test(config)) {\\r\\n          return;\\r\\n        }\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Popover(this, _config);\\r\\n          $(this).data(DATA_KEY$7, data);\\r\\n        }\\r\\n\\r\\n        if (typeof config === 'string') {\\r\\n          if (typeof data[config] === 'undefined') {\\r\\n            throw new TypeError(\\\"No method named \\\\\\\"\\\" + config + \\\"\\\\\\\"\\\");\\r\\n          }\\r\\n\\r\\n          data[config]();\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _createClass(Popover, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      // Getters\\r\\n      get: function get() {\\r\\n        return VERSION$7;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Default\\\",\\r\\n      get: function get() {\\r\\n        return Default$5;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"NAME\\\",\\r\\n      get: function get() {\\r\\n        return NAME$7;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"DATA_KEY\\\",\\r\\n      get: function get() {\\r\\n        return DATA_KEY$7;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Event\\\",\\r\\n      get: function get() {\\r\\n        return Event$1;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"EVENT_KEY\\\",\\r\\n      get: function get() {\\r\\n        return EVENT_KEY$7;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"DefaultType\\\",\\r\\n      get: function get() {\\r\\n        return DefaultType$5;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Popover;\\r\\n  }(Tooltip);\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $.fn[NAME$7] = Popover._jQueryInterface;\\r\\n  $.fn[NAME$7].Constructor = Popover;\\r\\n\\r\\n  $.fn[NAME$7].noConflict = function () {\\r\\n    $.fn[NAME$7] = JQUERY_NO_CONFLICT$7;\\r\\n    return Popover._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$8 = 'scrollspy';\\r\\n  var VERSION$8 = '4.5.2';\\r\\n  var DATA_KEY$8 = 'bs.scrollspy';\\r\\n  var EVENT_KEY$8 = \\\".\\\" + DATA_KEY$8;\\r\\n  var DATA_API_KEY$6 = '.data-api';\\r\\n  var JQUERY_NO_CONFLICT$8 = $.fn[NAME$8];\\r\\n  var Default$6 = {\\r\\n    offset: 10,\\r\\n    method: 'auto',\\r\\n    target: ''\\r\\n  };\\r\\n  var DefaultType$6 = {\\r\\n    offset: 'number',\\r\\n    method: 'string',\\r\\n    target: '(string|element)'\\r\\n  };\\r\\n  var EVENT_ACTIVATE = \\\"activate\\\" + EVENT_KEY$8;\\r\\n  var EVENT_SCROLL = \\\"scroll\\\" + EVENT_KEY$8;\\r\\n  var EVENT_LOAD_DATA_API$2 = \\\"load\\\" + EVENT_KEY$8 + DATA_API_KEY$6;\\r\\n  var CLASS_NAME_DROPDOWN_ITEM = 'dropdown-item';\\r\\n  var CLASS_NAME_ACTIVE$2 = 'active';\\r\\n  var SELECTOR_DATA_SPY = '[data-spy=\\\"scroll\\\"]';\\r\\n  var SELECTOR_NAV_LIST_GROUP = '.nav, .list-group';\\r\\n  var SELECTOR_NAV_LINKS = '.nav-link';\\r\\n  var SELECTOR_NAV_ITEMS = '.nav-item';\\r\\n  var SELECTOR_LIST_ITEMS = '.list-group-item';\\r\\n  var SELECTOR_DROPDOWN = '.dropdown';\\r\\n  var SELECTOR_DROPDOWN_ITEMS = '.dropdown-item';\\r\\n  var SELECTOR_DROPDOWN_TOGGLE = '.dropdown-toggle';\\r\\n  var METHOD_OFFSET = 'offset';\\r\\n  var METHOD_POSITION = 'position';\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var ScrollSpy = /*#__PURE__*/function () {\\r\\n    function ScrollSpy(element, config) {\\r\\n      var _this = this;\\r\\n\\r\\n      this._element = element;\\r\\n      this._scrollElement = element.tagName === 'BODY' ? window : element;\\r\\n      this._config = this._getConfig(config);\\r\\n      this._selector = this._config.target + \\\" \\\" + SELECTOR_NAV_LINKS + \\\",\\\" + (this._config.target + \\\" \\\" + SELECTOR_LIST_ITEMS + \\\",\\\") + (this._config.target + \\\" \\\" + SELECTOR_DROPDOWN_ITEMS);\\r\\n      this._offsets = [];\\r\\n      this._targets = [];\\r\\n      this._activeTarget = null;\\r\\n      this._scrollHeight = 0;\\r\\n      $(this._scrollElement).on(EVENT_SCROLL, function (event) {\\r\\n        return _this._process(event);\\r\\n      });\\r\\n      this.refresh();\\r\\n\\r\\n      this._process();\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = ScrollSpy.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.refresh = function refresh() {\\r\\n      var _this2 = this;\\r\\n\\r\\n      var autoMethod = this._scrollElement === this._scrollElement.window ? METHOD_OFFSET : METHOD_POSITION;\\r\\n      var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\\r\\n      var offsetBase = offsetMethod === METHOD_POSITION ? this._getScrollTop() : 0;\\r\\n      this._offsets = [];\\r\\n      this._targets = [];\\r\\n      this._scrollHeight = this._getScrollHeight();\\r\\n      var targets = [].slice.call(document.querySelectorAll(this._selector));\\r\\n      targets.map(function (element) {\\r\\n        var target;\\r\\n        var targetSelector = Util.getSelectorFromElement(element);\\r\\n\\r\\n        if (targetSelector) {\\r\\n          target = document.querySelector(targetSelector);\\r\\n        }\\r\\n\\r\\n        if (target) {\\r\\n          var targetBCR = target.getBoundingClientRect();\\r\\n\\r\\n          if (targetBCR.width || targetBCR.height) {\\r\\n            // TODO (fat): remove sketch reliance on jQuery position/offset\\r\\n            return [$(target)[offsetMethod]().top + offsetBase, targetSelector];\\r\\n          }\\r\\n        }\\r\\n\\r\\n        return null;\\r\\n      }).filter(function (item) {\\r\\n        return item;\\r\\n      }).sort(function (a, b) {\\r\\n        return a[0] - b[0];\\r\\n      }).forEach(function (item) {\\r\\n        _this2._offsets.push(item[0]);\\r\\n\\r\\n        _this2._targets.push(item[1]);\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      $.removeData(this._element, DATA_KEY$8);\\r\\n      $(this._scrollElement).off(EVENT_KEY$8);\\r\\n      this._element = null;\\r\\n      this._scrollElement = null;\\r\\n      this._config = null;\\r\\n      this._selector = null;\\r\\n      this._offsets = null;\\r\\n      this._targets = null;\\r\\n      this._activeTarget = null;\\r\\n      this._scrollHeight = null;\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._getConfig = function _getConfig(config) {\\r\\n      config = _extends({}, Default$6, typeof config === 'object' && config ? config : {});\\r\\n\\r\\n      if (typeof config.target !== 'string' && Util.isElement(config.target)) {\\r\\n        var id = $(config.target).attr('id');\\r\\n\\r\\n        if (!id) {\\r\\n          id = Util.getUID(NAME$8);\\r\\n          $(config.target).attr('id', id);\\r\\n        }\\r\\n\\r\\n        config.target = \\\"#\\\" + id;\\r\\n      }\\r\\n\\r\\n      Util.typeCheckConfig(NAME$8, config, DefaultType$6);\\r\\n      return config;\\r\\n    };\\r\\n\\r\\n    _proto._getScrollTop = function _getScrollTop() {\\r\\n      return this._scrollElement === window ? this._scrollElement.pageYOffset : this._scrollElement.scrollTop;\\r\\n    };\\r\\n\\r\\n    _proto._getScrollHeight = function _getScrollHeight() {\\r\\n      return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\\r\\n    };\\r\\n\\r\\n    _proto._getOffsetHeight = function _getOffsetHeight() {\\r\\n      return this._scrollElement === window ? window.innerHeight : this._scrollElement.getBoundingClientRect().height;\\r\\n    };\\r\\n\\r\\n    _proto._process = function _process() {\\r\\n      var scrollTop = this._getScrollTop() + this._config.offset;\\r\\n\\r\\n      var scrollHeight = this._getScrollHeight();\\r\\n\\r\\n      var maxScroll = this._config.offset + scrollHeight - this._getOffsetHeight();\\r\\n\\r\\n      if (this._scrollHeight !== scrollHeight) {\\r\\n        this.refresh();\\r\\n      }\\r\\n\\r\\n      if (scrollTop >= maxScroll) {\\r\\n        var target = this._targets[this._targets.length - 1];\\r\\n\\r\\n        if (this._activeTarget !== target) {\\r\\n          this._activate(target);\\r\\n        }\\r\\n\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (this._activeTarget && scrollTop < this._offsets[0] && this._offsets[0] > 0) {\\r\\n        this._activeTarget = null;\\r\\n\\r\\n        this._clear();\\r\\n\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      for (var i = this._offsets.length; i--;) {\\r\\n        var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (typeof this._offsets[i + 1] === 'undefined' || scrollTop < this._offsets[i + 1]);\\r\\n\\r\\n        if (isActiveTarget) {\\r\\n          this._activate(this._targets[i]);\\r\\n        }\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._activate = function _activate(target) {\\r\\n      this._activeTarget = target;\\r\\n\\r\\n      this._clear();\\r\\n\\r\\n      var queries = this._selector.split(',').map(function (selector) {\\r\\n        return selector + \\\"[data-target=\\\\\\\"\\\" + target + \\\"\\\\\\\"],\\\" + selector + \\\"[href=\\\\\\\"\\\" + target + \\\"\\\\\\\"]\\\";\\r\\n      });\\r\\n\\r\\n      var $link = $([].slice.call(document.querySelectorAll(queries.join(','))));\\r\\n\\r\\n      if ($link.hasClass(CLASS_NAME_DROPDOWN_ITEM)) {\\r\\n        $link.closest(SELECTOR_DROPDOWN).find(SELECTOR_DROPDOWN_TOGGLE).addClass(CLASS_NAME_ACTIVE$2);\\r\\n        $link.addClass(CLASS_NAME_ACTIVE$2);\\r\\n      } else {\\r\\n        // Set triggered link as active\\r\\n        $link.addClass(CLASS_NAME_ACTIVE$2); // Set triggered links parents as active\\r\\n        // With both <ul> and <nav> markup a parent is the previous sibling of any nav ancestor\\r\\n\\r\\n        $link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_LINKS + \\\", \\\" + SELECTOR_LIST_ITEMS).addClass(CLASS_NAME_ACTIVE$2); // Handle special case when .nav-link is inside .nav-item\\r\\n\\r\\n        $link.parents(SELECTOR_NAV_LIST_GROUP).prev(SELECTOR_NAV_ITEMS).children(SELECTOR_NAV_LINKS).addClass(CLASS_NAME_ACTIVE$2);\\r\\n      }\\r\\n\\r\\n      $(this._scrollElement).trigger(EVENT_ACTIVATE, {\\r\\n        relatedTarget: target\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _proto._clear = function _clear() {\\r\\n      [].slice.call(document.querySelectorAll(this._selector)).filter(function (node) {\\r\\n        return node.classList.contains(CLASS_NAME_ACTIVE$2);\\r\\n      }).forEach(function (node) {\\r\\n        return node.classList.remove(CLASS_NAME_ACTIVE$2);\\r\\n      });\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    ScrollSpy._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var data = $(this).data(DATA_KEY$8);\\r\\n\\r\\n        var _config = typeof config === 'object' && config;\\r\\n\\r\\n        if (!data) {\\r\\n          data = new ScrollSpy(this, _config);\\r\\n          $(this).data(DATA_KEY$8, data);\\r\\n        }\\r\\n\\r\\n        if (typeof config === 'string') {\\r\\n          if (typeof data[config] === 'undefined') {\\r\\n            throw new TypeError(\\\"No method named \\\\\\\"\\\" + config + \\\"\\\\\\\"\\\");\\r\\n          }\\r\\n\\r\\n          data[config]();\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _createClass(ScrollSpy, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION$8;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Default\\\",\\r\\n      get: function get() {\\r\\n        return Default$6;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return ScrollSpy;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Data Api implementation\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $(window).on(EVENT_LOAD_DATA_API$2, function () {\\r\\n    var scrollSpys = [].slice.call(document.querySelectorAll(SELECTOR_DATA_SPY));\\r\\n    var scrollSpysLength = scrollSpys.length;\\r\\n\\r\\n    for (var i = scrollSpysLength; i--;) {\\r\\n      var $spy = $(scrollSpys[i]);\\r\\n\\r\\n      ScrollSpy._jQueryInterface.call($spy, $spy.data());\\r\\n    }\\r\\n  });\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  $.fn[NAME$8] = ScrollSpy._jQueryInterface;\\r\\n  $.fn[NAME$8].Constructor = ScrollSpy;\\r\\n\\r\\n  $.fn[NAME$8].noConflict = function () {\\r\\n    $.fn[NAME$8] = JQUERY_NO_CONFLICT$8;\\r\\n    return ScrollSpy._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$9 = 'tab';\\r\\n  var VERSION$9 = '4.5.2';\\r\\n  var DATA_KEY$9 = 'bs.tab';\\r\\n  var EVENT_KEY$9 = \\\".\\\" + DATA_KEY$9;\\r\\n  var DATA_API_KEY$7 = '.data-api';\\r\\n  var JQUERY_NO_CONFLICT$9 = $.fn[NAME$9];\\r\\n  var EVENT_HIDE$3 = \\\"hide\\\" + EVENT_KEY$9;\\r\\n  var EVENT_HIDDEN$3 = \\\"hidden\\\" + EVENT_KEY$9;\\r\\n  var EVENT_SHOW$3 = \\\"show\\\" + EVENT_KEY$9;\\r\\n  var EVENT_SHOWN$3 = \\\"shown\\\" + EVENT_KEY$9;\\r\\n  var EVENT_CLICK_DATA_API$6 = \\\"click\\\" + EVENT_KEY$9 + DATA_API_KEY$7;\\r\\n  var CLASS_NAME_DROPDOWN_MENU = 'dropdown-menu';\\r\\n  var CLASS_NAME_ACTIVE$3 = 'active';\\r\\n  var CLASS_NAME_DISABLED$1 = 'disabled';\\r\\n  var CLASS_NAME_FADE$4 = 'fade';\\r\\n  var CLASS_NAME_SHOW$6 = 'show';\\r\\n  var SELECTOR_DROPDOWN$1 = '.dropdown';\\r\\n  var SELECTOR_NAV_LIST_GROUP$1 = '.nav, .list-group';\\r\\n  var SELECTOR_ACTIVE$2 = '.active';\\r\\n  var SELECTOR_ACTIVE_UL = '> li > .active';\\r\\n  var SELECTOR_DATA_TOGGLE$4 = '[data-toggle=\\\"tab\\\"], [data-toggle=\\\"pill\\\"], [data-toggle=\\\"list\\\"]';\\r\\n  var SELECTOR_DROPDOWN_TOGGLE$1 = '.dropdown-toggle';\\r\\n  var SELECTOR_DROPDOWN_ACTIVE_CHILD = '> .dropdown-menu .active';\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Tab = /*#__PURE__*/function () {\\r\\n    function Tab(element) {\\r\\n      this._element = element;\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = Tab.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.show = function show() {\\r\\n      var _this = this;\\r\\n\\r\\n      if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(CLASS_NAME_ACTIVE$3) || $(this._element).hasClass(CLASS_NAME_DISABLED$1)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var target;\\r\\n      var previous;\\r\\n      var listElement = $(this._element).closest(SELECTOR_NAV_LIST_GROUP$1)[0];\\r\\n      var selector = Util.getSelectorFromElement(this._element);\\r\\n\\r\\n      if (listElement) {\\r\\n        var itemSelector = listElement.nodeName === 'UL' || listElement.nodeName === 'OL' ? SELECTOR_ACTIVE_UL : SELECTOR_ACTIVE$2;\\r\\n        previous = $.makeArray($(listElement).find(itemSelector));\\r\\n        previous = previous[previous.length - 1];\\r\\n      }\\r\\n\\r\\n      var hideEvent = $.Event(EVENT_HIDE$3, {\\r\\n        relatedTarget: this._element\\r\\n      });\\r\\n      var showEvent = $.Event(EVENT_SHOW$3, {\\r\\n        relatedTarget: previous\\r\\n      });\\r\\n\\r\\n      if (previous) {\\r\\n        $(previous).trigger(hideEvent);\\r\\n      }\\r\\n\\r\\n      $(this._element).trigger(showEvent);\\r\\n\\r\\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      if (selector) {\\r\\n        target = document.querySelector(selector);\\r\\n      }\\r\\n\\r\\n      this._activate(this._element, listElement);\\r\\n\\r\\n      var complete = function complete() {\\r\\n        var hiddenEvent = $.Event(EVENT_HIDDEN$3, {\\r\\n          relatedTarget: _this._element\\r\\n        });\\r\\n        var shownEvent = $.Event(EVENT_SHOWN$3, {\\r\\n          relatedTarget: previous\\r\\n        });\\r\\n        $(previous).trigger(hiddenEvent);\\r\\n        $(_this._element).trigger(shownEvent);\\r\\n      };\\r\\n\\r\\n      if (target) {\\r\\n        this._activate(target, target.parentNode, complete);\\r\\n      } else {\\r\\n        complete();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      $.removeData(this._element, DATA_KEY$9);\\r\\n      this._element = null;\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._activate = function _activate(element, container, callback) {\\r\\n      var _this2 = this;\\r\\n\\r\\n      var activeElements = container && (container.nodeName === 'UL' || container.nodeName === 'OL') ? $(container).find(SELECTOR_ACTIVE_UL) : $(container).children(SELECTOR_ACTIVE$2);\\r\\n      var active = activeElements[0];\\r\\n      var isTransitioning = callback && active && $(active).hasClass(CLASS_NAME_FADE$4);\\r\\n\\r\\n      var complete = function complete() {\\r\\n        return _this2._transitionComplete(element, active, callback);\\r\\n      };\\r\\n\\r\\n      if (active && isTransitioning) {\\r\\n        var transitionDuration = Util.getTransitionDurationFromElement(active);\\r\\n        $(active).removeClass(CLASS_NAME_SHOW$6).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\\r\\n      } else {\\r\\n        complete();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._transitionComplete = function _transitionComplete(element, active, callback) {\\r\\n      if (active) {\\r\\n        $(active).removeClass(CLASS_NAME_ACTIVE$3);\\r\\n        var dropdownChild = $(active.parentNode).find(SELECTOR_DROPDOWN_ACTIVE_CHILD)[0];\\r\\n\\r\\n        if (dropdownChild) {\\r\\n          $(dropdownChild).removeClass(CLASS_NAME_ACTIVE$3);\\r\\n        }\\r\\n\\r\\n        if (active.getAttribute('role') === 'tab') {\\r\\n          active.setAttribute('aria-selected', false);\\r\\n        }\\r\\n      }\\r\\n\\r\\n      $(element).addClass(CLASS_NAME_ACTIVE$3);\\r\\n\\r\\n      if (element.getAttribute('role') === 'tab') {\\r\\n        element.setAttribute('aria-selected', true);\\r\\n      }\\r\\n\\r\\n      Util.reflow(element);\\r\\n\\r\\n      if (element.classList.contains(CLASS_NAME_FADE$4)) {\\r\\n        element.classList.add(CLASS_NAME_SHOW$6);\\r\\n      }\\r\\n\\r\\n      if (element.parentNode && $(element.parentNode).hasClass(CLASS_NAME_DROPDOWN_MENU)) {\\r\\n        var dropdownElement = $(element).closest(SELECTOR_DROPDOWN$1)[0];\\r\\n\\r\\n        if (dropdownElement) {\\r\\n          var dropdownToggleList = [].slice.call(dropdownElement.querySelectorAll(SELECTOR_DROPDOWN_TOGGLE$1));\\r\\n          $(dropdownToggleList).addClass(CLASS_NAME_ACTIVE$3);\\r\\n        }\\r\\n\\r\\n        element.setAttribute('aria-expanded', true);\\r\\n      }\\r\\n\\r\\n      if (callback) {\\r\\n        callback();\\r\\n      }\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Tab._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var $this = $(this);\\r\\n        var data = $this.data(DATA_KEY$9);\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Tab(this);\\r\\n          $this.data(DATA_KEY$9, data);\\r\\n        }\\r\\n\\r\\n        if (typeof config === 'string') {\\r\\n          if (typeof data[config] === 'undefined') {\\r\\n            throw new TypeError(\\\"No method named \\\\\\\"\\\" + config + \\\"\\\\\\\"\\\");\\r\\n          }\\r\\n\\r\\n          data[config]();\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _createClass(Tab, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION$9;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Tab;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Data Api implementation\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $(document).on(EVENT_CLICK_DATA_API$6, SELECTOR_DATA_TOGGLE$4, function (event) {\\r\\n    event.preventDefault();\\r\\n\\r\\n    Tab._jQueryInterface.call($(this), 'show');\\r\\n  });\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  $.fn[NAME$9] = Tab._jQueryInterface;\\r\\n  $.fn[NAME$9].Constructor = Tab;\\r\\n\\r\\n  $.fn[NAME$9].noConflict = function () {\\r\\n    $.fn[NAME$9] = JQUERY_NO_CONFLICT$9;\\r\\n    return Tab._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Constants\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var NAME$a = 'toast';\\r\\n  var VERSION$a = '4.5.2';\\r\\n  var DATA_KEY$a = 'bs.toast';\\r\\n  var EVENT_KEY$a = \\\".\\\" + DATA_KEY$a;\\r\\n  var JQUERY_NO_CONFLICT$a = $.fn[NAME$a];\\r\\n  var EVENT_CLICK_DISMISS$1 = \\\"click.dismiss\\\" + EVENT_KEY$a;\\r\\n  var EVENT_HIDE$4 = \\\"hide\\\" + EVENT_KEY$a;\\r\\n  var EVENT_HIDDEN$4 = \\\"hidden\\\" + EVENT_KEY$a;\\r\\n  var EVENT_SHOW$4 = \\\"show\\\" + EVENT_KEY$a;\\r\\n  var EVENT_SHOWN$4 = \\\"shown\\\" + EVENT_KEY$a;\\r\\n  var CLASS_NAME_FADE$5 = 'fade';\\r\\n  var CLASS_NAME_HIDE = 'hide';\\r\\n  var CLASS_NAME_SHOW$7 = 'show';\\r\\n  var CLASS_NAME_SHOWING = 'showing';\\r\\n  var DefaultType$7 = {\\r\\n    animation: 'boolean',\\r\\n    autohide: 'boolean',\\r\\n    delay: 'number'\\r\\n  };\\r\\n  var Default$7 = {\\r\\n    animation: true,\\r\\n    autohide: true,\\r\\n    delay: 500\\r\\n  };\\r\\n  var SELECTOR_DATA_DISMISS$1 = '[data-dismiss=\\\"toast\\\"]';\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * Class Definition\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n  var Toast = /*#__PURE__*/function () {\\r\\n    function Toast(element, config) {\\r\\n      this._element = element;\\r\\n      this._config = this._getConfig(config);\\r\\n      this._timeout = null;\\r\\n\\r\\n      this._setListeners();\\r\\n    } // Getters\\r\\n\\r\\n\\r\\n    var _proto = Toast.prototype;\\r\\n\\r\\n    // Public\\r\\n    _proto.show = function show() {\\r\\n      var _this = this;\\r\\n\\r\\n      var showEvent = $.Event(EVENT_SHOW$4);\\r\\n      $(this._element).trigger(showEvent);\\r\\n\\r\\n      if (showEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      this._clearTimeout();\\r\\n\\r\\n      if (this._config.animation) {\\r\\n        this._element.classList.add(CLASS_NAME_FADE$5);\\r\\n      }\\r\\n\\r\\n      var complete = function complete() {\\r\\n        _this._element.classList.remove(CLASS_NAME_SHOWING);\\r\\n\\r\\n        _this._element.classList.add(CLASS_NAME_SHOW$7);\\r\\n\\r\\n        $(_this._element).trigger(EVENT_SHOWN$4);\\r\\n\\r\\n        if (_this._config.autohide) {\\r\\n          _this._timeout = setTimeout(function () {\\r\\n            _this.hide();\\r\\n          }, _this._config.delay);\\r\\n        }\\r\\n      };\\r\\n\\r\\n      this._element.classList.remove(CLASS_NAME_HIDE);\\r\\n\\r\\n      Util.reflow(this._element);\\r\\n\\r\\n      this._element.classList.add(CLASS_NAME_SHOWING);\\r\\n\\r\\n      if (this._config.animation) {\\r\\n        var transitionDuration = Util.getTransitionDurationFromElement(this._element);\\r\\n        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\\r\\n      } else {\\r\\n        complete();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto.hide = function hide() {\\r\\n      if (!this._element.classList.contains(CLASS_NAME_SHOW$7)) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      var hideEvent = $.Event(EVENT_HIDE$4);\\r\\n      $(this._element).trigger(hideEvent);\\r\\n\\r\\n      if (hideEvent.isDefaultPrevented()) {\\r\\n        return;\\r\\n      }\\r\\n\\r\\n      this._close();\\r\\n    };\\r\\n\\r\\n    _proto.dispose = function dispose() {\\r\\n      this._clearTimeout();\\r\\n\\r\\n      if (this._element.classList.contains(CLASS_NAME_SHOW$7)) {\\r\\n        this._element.classList.remove(CLASS_NAME_SHOW$7);\\r\\n      }\\r\\n\\r\\n      $(this._element).off(EVENT_CLICK_DISMISS$1);\\r\\n      $.removeData(this._element, DATA_KEY$a);\\r\\n      this._element = null;\\r\\n      this._config = null;\\r\\n    } // Private\\r\\n    ;\\r\\n\\r\\n    _proto._getConfig = function _getConfig(config) {\\r\\n      config = _extends({}, Default$7, $(this._element).data(), typeof config === 'object' && config ? config : {});\\r\\n      Util.typeCheckConfig(NAME$a, config, this.constructor.DefaultType);\\r\\n      return config;\\r\\n    };\\r\\n\\r\\n    _proto._setListeners = function _setListeners() {\\r\\n      var _this2 = this;\\r\\n\\r\\n      $(this._element).on(EVENT_CLICK_DISMISS$1, SELECTOR_DATA_DISMISS$1, function () {\\r\\n        return _this2.hide();\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _proto._close = function _close() {\\r\\n      var _this3 = this;\\r\\n\\r\\n      var complete = function complete() {\\r\\n        _this3._element.classList.add(CLASS_NAME_HIDE);\\r\\n\\r\\n        $(_this3._element).trigger(EVENT_HIDDEN$4);\\r\\n      };\\r\\n\\r\\n      this._element.classList.remove(CLASS_NAME_SHOW$7);\\r\\n\\r\\n      if (this._config.animation) {\\r\\n        var transitionDuration = Util.getTransitionDurationFromElement(this._element);\\r\\n        $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(transitionDuration);\\r\\n      } else {\\r\\n        complete();\\r\\n      }\\r\\n    };\\r\\n\\r\\n    _proto._clearTimeout = function _clearTimeout() {\\r\\n      clearTimeout(this._timeout);\\r\\n      this._timeout = null;\\r\\n    } // Static\\r\\n    ;\\r\\n\\r\\n    Toast._jQueryInterface = function _jQueryInterface(config) {\\r\\n      return this.each(function () {\\r\\n        var $element = $(this);\\r\\n        var data = $element.data(DATA_KEY$a);\\r\\n\\r\\n        var _config = typeof config === 'object' && config;\\r\\n\\r\\n        if (!data) {\\r\\n          data = new Toast(this, _config);\\r\\n          $element.data(DATA_KEY$a, data);\\r\\n        }\\r\\n\\r\\n        if (typeof config === 'string') {\\r\\n          if (typeof data[config] === 'undefined') {\\r\\n            throw new TypeError(\\\"No method named \\\\\\\"\\\" + config + \\\"\\\\\\\"\\\");\\r\\n          }\\r\\n\\r\\n          data[config](this);\\r\\n        }\\r\\n      });\\r\\n    };\\r\\n\\r\\n    _createClass(Toast, null, [{\\r\\n      key: \\\"VERSION\\\",\\r\\n      get: function get() {\\r\\n        return VERSION$a;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"DefaultType\\\",\\r\\n      get: function get() {\\r\\n        return DefaultType$7;\\r\\n      }\\r\\n    }, {\\r\\n      key: \\\"Default\\\",\\r\\n      get: function get() {\\r\\n        return Default$7;\\r\\n      }\\r\\n    }]);\\r\\n\\r\\n    return Toast;\\r\\n  }();\\r\\n  /**\\r\\n   * ------------------------------------------------------------------------\\r\\n   * jQuery\\r\\n   * ------------------------------------------------------------------------\\r\\n   */\\r\\n\\r\\n\\r\\n  $.fn[NAME$a] = Toast._jQueryInterface;\\r\\n  $.fn[NAME$a].Constructor = Toast;\\r\\n\\r\\n  $.fn[NAME$a].noConflict = function () {\\r\\n    $.fn[NAME$a] = JQUERY_NO_CONFLICT$a;\\r\\n    return Toast._jQueryInterface;\\r\\n  };\\r\\n\\r\\n  exports.Alert = Alert;\\r\\n  exports.Button = Button;\\r\\n  exports.Carousel = Carousel;\\r\\n  exports.Collapse = Collapse;\\r\\n  exports.Dropdown = Dropdown;\\r\\n  exports.Modal = Modal;\\r\\n  exports.Popover = Popover;\\r\\n  exports.Scrollspy = ScrollSpy;\\r\\n  exports.Tab = Tab;\\r\\n  exports.Toast = Toast;\\r\\n  exports.Tooltip = Tooltip;\\r\\n  exports.Util = Util;\\r\\n\\r\\n  Object.defineProperty(exports, '__esModule', { value: true });\\r\\n\\r\\n})));\\r\\n//# sourceMappingURL=bootstrap.js.map\\r\\n\\n\\n//# sourceURL=webpack:///./node_modules/bootstrap/dist/js/bootstrap.js?\")},rIKr:function(module,exports,__webpack_require__){eval('var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\\r\\n * jQuery Validation Plugin v1.19.2\\r\\n *\\r\\n * https://jqueryvalidation.org/\\r\\n *\\r\\n * Copyright (c) 2020 Jörn Zaefferer\\r\\n * Released under the MIT license\\r\\n */\\r\\n(function( factory ) {\\r\\n\\tif ( true ) {\\r\\n\\t\\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(/*! jquery */ \"EVdn\")], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === \\'function\\' ?\\n\\t\\t\\t\\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\\n\\t\\t\\t\\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\r\\n\\t} else {}\\r\\n}(function( $ ) {\\r\\n\\r\\n$.extend( $.fn, {\\r\\n\\r\\n\\t// https://jqueryvalidation.org/validate/\\r\\n\\tvalidate: function( options ) {\\r\\n\\r\\n\\t\\t// If nothing is selected, return nothing; can\\'t chain anyway\\r\\n\\t\\tif ( !this.length ) {\\r\\n\\t\\t\\tif ( options && options.debug && window.console ) {\\r\\n\\t\\t\\t\\tconsole.warn( \"Nothing selected, can\\'t validate, returning nothing.\" );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Check if a validator for this form was already created\\r\\n\\t\\tvar validator = $.data( this[ 0 ], \"validator\" );\\r\\n\\t\\tif ( validator ) {\\r\\n\\t\\t\\treturn validator;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Add novalidate tag if HTML5.\\r\\n\\t\\tthis.attr( \"novalidate\", \"novalidate\" );\\r\\n\\r\\n\\t\\tvalidator = new $.validator( options, this[ 0 ] );\\r\\n\\t\\t$.data( this[ 0 ], \"validator\", validator );\\r\\n\\r\\n\\t\\tif ( validator.settings.onsubmit ) {\\r\\n\\r\\n\\t\\t\\tthis.on( \"click.validate\", \":submit\", function( event ) {\\r\\n\\r\\n\\t\\t\\t\\t// Track the used submit button to properly handle scripted\\r\\n\\t\\t\\t\\t// submits later.\\r\\n\\t\\t\\t\\tvalidator.submitButton = event.currentTarget;\\r\\n\\r\\n\\t\\t\\t\\t// Allow suppressing validation by adding a cancel class to the submit button\\r\\n\\t\\t\\t\\tif ( $( this ).hasClass( \"cancel\" ) ) {\\r\\n\\t\\t\\t\\t\\tvalidator.cancelSubmit = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Allow suppressing validation by adding the html5 formnovalidate attribute to the submit button\\r\\n\\t\\t\\t\\tif ( $( this ).attr( \"formnovalidate\" ) !== undefined ) {\\r\\n\\t\\t\\t\\t\\tvalidator.cancelSubmit = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t// Validate the form on submit\\r\\n\\t\\t\\tthis.on( \"submit.validate\", function( event ) {\\r\\n\\t\\t\\t\\tif ( validator.settings.debug ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Prevent form submit to be able to see console output\\r\\n\\t\\t\\t\\t\\tevent.preventDefault();\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tfunction handle() {\\r\\n\\t\\t\\t\\t\\tvar hidden, result;\\r\\n\\r\\n\\t\\t\\t\\t\\t// Insert a hidden input as a replacement for the missing submit button\\r\\n\\t\\t\\t\\t\\t// The hidden input is inserted in two cases:\\r\\n\\t\\t\\t\\t\\t//   - A user defined a `submitHandler`\\r\\n\\t\\t\\t\\t\\t//   - There was a pending request due to `remote` method and `stopRequest()`\\r\\n\\t\\t\\t\\t\\t//     was called to submit the form in case it\\'s valid\\r\\n\\t\\t\\t\\t\\tif ( validator.submitButton && ( validator.settings.submitHandler || validator.formSubmitted ) ) {\\r\\n\\t\\t\\t\\t\\t\\thidden = $( \"<input type=\\'hidden\\'/>\" )\\r\\n\\t\\t\\t\\t\\t\\t\\t.attr( \"name\", validator.submitButton.name )\\r\\n\\t\\t\\t\\t\\t\\t\\t.val( $( validator.submitButton ).val() )\\r\\n\\t\\t\\t\\t\\t\\t\\t.appendTo( validator.currentForm );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( validator.settings.submitHandler && !validator.settings.debug ) {\\r\\n\\t\\t\\t\\t\\t\\tresult = validator.settings.submitHandler.call( validator, validator.currentForm, event );\\r\\n\\t\\t\\t\\t\\t\\tif ( hidden ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t// And clean up afterwards; thanks to no-block-scope, hidden can be referenced\\r\\n\\t\\t\\t\\t\\t\\t\\thidden.remove();\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\tif ( result !== undefined ) {\\r\\n\\t\\t\\t\\t\\t\\t\\treturn result;\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Prevent submit for invalid forms or custom submit handlers\\r\\n\\t\\t\\t\\tif ( validator.cancelSubmit ) {\\r\\n\\t\\t\\t\\t\\tvalidator.cancelSubmit = false;\\r\\n\\t\\t\\t\\t\\treturn handle();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif ( validator.form() ) {\\r\\n\\t\\t\\t\\t\\tif ( validator.pendingRequest ) {\\r\\n\\t\\t\\t\\t\\t\\tvalidator.formSubmitted = true;\\r\\n\\t\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\treturn handle();\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tvalidator.focusInvalid();\\r\\n\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn validator;\\r\\n\\t},\\r\\n\\r\\n\\t// https://jqueryvalidation.org/valid/\\r\\n\\tvalid: function() {\\r\\n\\t\\tvar valid, validator, errorList;\\r\\n\\r\\n\\t\\tif ( $( this[ 0 ] ).is( \"form\" ) ) {\\r\\n\\t\\t\\tvalid = this.validate().form();\\r\\n\\t\\t} else {\\r\\n\\t\\t\\terrorList = [];\\r\\n\\t\\t\\tvalid = true;\\r\\n\\t\\t\\tvalidator = $( this[ 0 ].form ).validate();\\r\\n\\t\\t\\tthis.each( function() {\\r\\n\\t\\t\\t\\tvalid = validator.element( this ) && valid;\\r\\n\\t\\t\\t\\tif ( !valid ) {\\r\\n\\t\\t\\t\\t\\terrorList = errorList.concat( validator.errorList );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} );\\r\\n\\t\\t\\tvalidator.errorList = errorList;\\r\\n\\t\\t}\\r\\n\\t\\treturn valid;\\r\\n\\t},\\r\\n\\r\\n\\t// https://jqueryvalidation.org/rules/\\r\\n\\trules: function( command, argument ) {\\r\\n\\t\\tvar element = this[ 0 ],\\r\\n\\t\\t\\tisContentEditable = typeof this.attr( \"contenteditable\" ) !== \"undefined\" && this.attr( \"contenteditable\" ) !== \"false\",\\r\\n\\t\\t\\tsettings, staticRules, existingRules, data, param, filtered;\\r\\n\\r\\n\\t\\t// If nothing is selected, return empty object; can\\'t chain anyway\\r\\n\\t\\tif ( element == null ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( !element.form && isContentEditable ) {\\r\\n\\t\\t\\telement.form = this.closest( \"form\" )[ 0 ];\\r\\n\\t\\t\\telement.name = this.attr( \"name\" );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( element.form == null ) {\\r\\n\\t\\t\\treturn;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( command ) {\\r\\n\\t\\t\\tsettings = $.data( element.form, \"validator\" ).settings;\\r\\n\\t\\t\\tstaticRules = settings.rules;\\r\\n\\t\\t\\texistingRules = $.validator.staticRules( element );\\r\\n\\t\\t\\tswitch ( command ) {\\r\\n\\t\\t\\tcase \"add\":\\r\\n\\t\\t\\t\\t$.extend( existingRules, $.validator.normalizeRule( argument ) );\\r\\n\\r\\n\\t\\t\\t\\t// Remove messages from rules, but allow them to be set separately\\r\\n\\t\\t\\t\\tdelete existingRules.messages;\\r\\n\\t\\t\\t\\tstaticRules[ element.name ] = existingRules;\\r\\n\\t\\t\\t\\tif ( argument.messages ) {\\r\\n\\t\\t\\t\\t\\tsettings.messages[ element.name ] = $.extend( settings.messages[ element.name ], argument.messages );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\tcase \"remove\":\\r\\n\\t\\t\\t\\tif ( !argument ) {\\r\\n\\t\\t\\t\\t\\tdelete staticRules[ element.name ];\\r\\n\\t\\t\\t\\t\\treturn existingRules;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tfiltered = {};\\r\\n\\t\\t\\t\\t$.each( argument.split( /\\\\s/ ), function( index, method ) {\\r\\n\\t\\t\\t\\t\\tfiltered[ method ] = existingRules[ method ];\\r\\n\\t\\t\\t\\t\\tdelete existingRules[ method ];\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\treturn filtered;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tdata = $.validator.normalizeRules(\\r\\n\\t\\t$.extend(\\r\\n\\t\\t\\t{},\\r\\n\\t\\t\\t$.validator.classRules( element ),\\r\\n\\t\\t\\t$.validator.attributeRules( element ),\\r\\n\\t\\t\\t$.validator.dataRules( element ),\\r\\n\\t\\t\\t$.validator.staticRules( element )\\r\\n\\t\\t), element );\\r\\n\\r\\n\\t\\t// Make sure required is at front\\r\\n\\t\\tif ( data.required ) {\\r\\n\\t\\t\\tparam = data.required;\\r\\n\\t\\t\\tdelete data.required;\\r\\n\\t\\t\\tdata = $.extend( { required: param }, data );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// Make sure remote is at back\\r\\n\\t\\tif ( data.remote ) {\\r\\n\\t\\t\\tparam = data.remote;\\r\\n\\t\\t\\tdelete data.remote;\\r\\n\\t\\t\\tdata = $.extend( data, { remote: param } );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn data;\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// JQuery trim is deprecated, provide a trim method based on String.prototype.trim\\r\\nvar trim = function( str ) {\\r\\n\\r\\n\\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim#Polyfill\\r\\n\\treturn str.replace( /^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g, \"\" );\\r\\n};\\r\\n\\r\\n// Custom selectors\\r\\n$.extend( $.expr.pseudos || $.expr[ \":\" ], {\\t\\t// \\'|| $.expr[ \":\" ]\\' here enables backwards compatibility to jQuery 1.7. Can be removed when dropping jQ 1.7.x support\\r\\n\\r\\n\\t// https://jqueryvalidation.org/blank-selector/\\r\\n\\tblank: function( a ) {\\r\\n\\t\\treturn !trim( \"\" + $( a ).val() );\\r\\n\\t},\\r\\n\\r\\n\\t// https://jqueryvalidation.org/filled-selector/\\r\\n\\tfilled: function( a ) {\\r\\n\\t\\tvar val = $( a ).val();\\r\\n\\t\\treturn val !== null && !!trim( \"\" + val );\\r\\n\\t},\\r\\n\\r\\n\\t// https://jqueryvalidation.org/unchecked-selector/\\r\\n\\tunchecked: function( a ) {\\r\\n\\t\\treturn !$( a ).prop( \"checked\" );\\r\\n\\t}\\r\\n} );\\r\\n\\r\\n// Constructor for validator\\r\\n$.validator = function( options, form ) {\\r\\n\\tthis.settings = $.extend( true, {}, $.validator.defaults, options );\\r\\n\\tthis.currentForm = form;\\r\\n\\tthis.init();\\r\\n};\\r\\n\\r\\n// https://jqueryvalidation.org/jQuery.validator.format/\\r\\n$.validator.format = function( source, params ) {\\r\\n\\tif ( arguments.length === 1 ) {\\r\\n\\t\\treturn function() {\\r\\n\\t\\t\\tvar args = $.makeArray( arguments );\\r\\n\\t\\t\\targs.unshift( source );\\r\\n\\t\\t\\treturn $.validator.format.apply( this, args );\\r\\n\\t\\t};\\r\\n\\t}\\r\\n\\tif ( params === undefined ) {\\r\\n\\t\\treturn source;\\r\\n\\t}\\r\\n\\tif ( arguments.length > 2 && params.constructor !== Array  ) {\\r\\n\\t\\tparams = $.makeArray( arguments ).slice( 1 );\\r\\n\\t}\\r\\n\\tif ( params.constructor !== Array ) {\\r\\n\\t\\tparams = [ params ];\\r\\n\\t}\\r\\n\\t$.each( params, function( i, n ) {\\r\\n\\t\\tsource = source.replace( new RegExp( \"\\\\\\\\{\" + i + \"\\\\\\\\}\", \"g\" ), function() {\\r\\n\\t\\t\\treturn n;\\r\\n\\t\\t} );\\r\\n\\t} );\\r\\n\\treturn source;\\r\\n};\\r\\n\\r\\n$.extend( $.validator, {\\r\\n\\r\\n\\tdefaults: {\\r\\n\\t\\tmessages: {},\\r\\n\\t\\tgroups: {},\\r\\n\\t\\trules: {},\\r\\n\\t\\terrorClass: \"error\",\\r\\n\\t\\tpendingClass: \"pending\",\\r\\n\\t\\tvalidClass: \"valid\",\\r\\n\\t\\terrorElement: \"label\",\\r\\n\\t\\tfocusCleanup: false,\\r\\n\\t\\tfocusInvalid: true,\\r\\n\\t\\terrorContainer: $( [] ),\\r\\n\\t\\terrorLabelContainer: $( [] ),\\r\\n\\t\\tonsubmit: true,\\r\\n\\t\\tignore: \":hidden\",\\r\\n\\t\\tignoreTitle: false,\\r\\n\\t\\tonfocusin: function( element ) {\\r\\n\\t\\t\\tthis.lastActive = element;\\r\\n\\r\\n\\t\\t\\t// Hide error label and remove error class on focus if enabled\\r\\n\\t\\t\\tif ( this.settings.focusCleanup ) {\\r\\n\\t\\t\\t\\tif ( this.settings.unhighlight ) {\\r\\n\\t\\t\\t\\t\\tthis.settings.unhighlight.call( this, element, this.settings.errorClass, this.settings.validClass );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tthis.hideThese( this.errorsFor( element ) );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\tonfocusout: function( element ) {\\r\\n\\t\\t\\tif ( !this.checkable( element ) && ( element.name in this.submitted || !this.optional( element ) ) ) {\\r\\n\\t\\t\\t\\tthis.element( element );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\tonkeyup: function( element, event ) {\\r\\n\\r\\n\\t\\t\\t// Avoid revalidate the field when pressing one of the following keys\\r\\n\\t\\t\\t// Shift       => 16\\r\\n\\t\\t\\t// Ctrl        => 17\\r\\n\\t\\t\\t// Alt         => 18\\r\\n\\t\\t\\t// Caps lock   => 20\\r\\n\\t\\t\\t// End         => 35\\r\\n\\t\\t\\t// Home        => 36\\r\\n\\t\\t\\t// Left arrow  => 37\\r\\n\\t\\t\\t// Up arrow    => 38\\r\\n\\t\\t\\t// Right arrow => 39\\r\\n\\t\\t\\t// Down arrow  => 40\\r\\n\\t\\t\\t// Insert      => 45\\r\\n\\t\\t\\t// Num lock    => 144\\r\\n\\t\\t\\t// AltGr key   => 225\\r\\n\\t\\t\\tvar excludedKeys = [\\r\\n\\t\\t\\t\\t16, 17, 18, 20, 35, 36, 37,\\r\\n\\t\\t\\t\\t38, 39, 40, 45, 144, 225\\r\\n\\t\\t\\t];\\r\\n\\r\\n\\t\\t\\tif ( event.which === 9 && this.elementValue( element ) === \"\" || $.inArray( event.keyCode, excludedKeys ) !== -1 ) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t} else if ( element.name in this.submitted || element.name in this.invalid ) {\\r\\n\\t\\t\\t\\tthis.element( element );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\tonclick: function( element ) {\\r\\n\\r\\n\\t\\t\\t// Click on selects, radiobuttons and checkboxes\\r\\n\\t\\t\\tif ( element.name in this.submitted ) {\\r\\n\\t\\t\\t\\tthis.element( element );\\r\\n\\r\\n\\t\\t\\t// Or option elements, check parent select in that case\\r\\n\\t\\t\\t} else if ( element.parentNode.name in this.submitted ) {\\r\\n\\t\\t\\t\\tthis.element( element.parentNode );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\thighlight: function( element, errorClass, validClass ) {\\r\\n\\t\\t\\tif ( element.type === \"radio\" ) {\\r\\n\\t\\t\\t\\tthis.findByName( element.name ).addClass( errorClass ).removeClass( validClass );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t$( element ).addClass( errorClass ).removeClass( validClass );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\t\\tunhighlight: function( element, errorClass, validClass ) {\\r\\n\\t\\t\\tif ( element.type === \"radio\" ) {\\r\\n\\t\\t\\t\\tthis.findByName( element.name ).removeClass( errorClass ).addClass( validClass );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t$( element ).removeClass( errorClass ).addClass( validClass );\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\t// https://jqueryvalidation.org/jQuery.validator.setDefaults/\\r\\n\\tsetDefaults: function( settings ) {\\r\\n\\t\\t$.extend( $.validator.defaults, settings );\\r\\n\\t},\\r\\n\\r\\n\\tmessages: {\\r\\n\\t\\trequired: \"This field is required.\",\\r\\n\\t\\tremote: \"Please fix this field.\",\\r\\n\\t\\temail: \"Please enter a valid email address.\",\\r\\n\\t\\turl: \"Please enter a valid URL.\",\\r\\n\\t\\tdate: \"Please enter a valid date.\",\\r\\n\\t\\tdateISO: \"Please enter a valid date (ISO).\",\\r\\n\\t\\tnumber: \"Please enter a valid number.\",\\r\\n\\t\\tdigits: \"Please enter only digits.\",\\r\\n\\t\\tequalTo: \"Please enter the same value again.\",\\r\\n\\t\\tmaxlength: $.validator.format( \"Please enter no more than {0} characters.\" ),\\r\\n\\t\\tminlength: $.validator.format( \"Please enter at least {0} characters.\" ),\\r\\n\\t\\trangelength: $.validator.format( \"Please enter a value between {0} and {1} characters long.\" ),\\r\\n\\t\\trange: $.validator.format( \"Please enter a value between {0} and {1}.\" ),\\r\\n\\t\\tmax: $.validator.format( \"Please enter a value less than or equal to {0}.\" ),\\r\\n\\t\\tmin: $.validator.format( \"Please enter a value greater than or equal to {0}.\" ),\\r\\n\\t\\tstep: $.validator.format( \"Please enter a multiple of {0}.\" )\\r\\n\\t},\\r\\n\\r\\n\\tautoCreateRanges: false,\\r\\n\\r\\n\\tprototype: {\\r\\n\\r\\n\\t\\tinit: function() {\\r\\n\\t\\t\\tthis.labelContainer = $( this.settings.errorLabelContainer );\\r\\n\\t\\t\\tthis.errorContext = this.labelContainer.length && this.labelContainer || $( this.currentForm );\\r\\n\\t\\t\\tthis.containers = $( this.settings.errorContainer ).add( this.settings.errorLabelContainer );\\r\\n\\t\\t\\tthis.submitted = {};\\r\\n\\t\\t\\tthis.valueCache = {};\\r\\n\\t\\t\\tthis.pendingRequest = 0;\\r\\n\\t\\t\\tthis.pending = {};\\r\\n\\t\\t\\tthis.invalid = {};\\r\\n\\t\\t\\tthis.reset();\\r\\n\\r\\n\\t\\t\\tvar currentForm = this.currentForm,\\r\\n\\t\\t\\t\\tgroups = ( this.groups = {} ),\\r\\n\\t\\t\\t\\trules;\\r\\n\\t\\t\\t$.each( this.settings.groups, function( key, value ) {\\r\\n\\t\\t\\t\\tif ( typeof value === \"string\" ) {\\r\\n\\t\\t\\t\\t\\tvalue = value.split( /\\\\s/ );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t$.each( value, function( index, name ) {\\r\\n\\t\\t\\t\\t\\tgroups[ name ] = key;\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t\\t} );\\r\\n\\t\\t\\trules = this.settings.rules;\\r\\n\\t\\t\\t$.each( rules, function( key, value ) {\\r\\n\\t\\t\\t\\trules[ key ] = $.validator.normalizeRule( value );\\r\\n\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\tfunction delegate( event ) {\\r\\n\\t\\t\\t\\tvar isContentEditable = typeof $( this ).attr( \"contenteditable\" ) !== \"undefined\" && $( this ).attr( \"contenteditable\" ) !== \"false\";\\r\\n\\r\\n\\t\\t\\t\\t// Set form expando on contenteditable\\r\\n\\t\\t\\t\\tif ( !this.form && isContentEditable ) {\\r\\n\\t\\t\\t\\t\\tthis.form = $( this ).closest( \"form\" )[ 0 ];\\r\\n\\t\\t\\t\\t\\tthis.name = $( this ).attr( \"name\" );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Ignore the element if it belongs to another form. This will happen mainly\\r\\n\\t\\t\\t\\t// when setting the `form` attribute of an input to the id of another form.\\r\\n\\t\\t\\t\\tif ( currentForm !== this.form ) {\\r\\n\\t\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tvar validator = $.data( this.form, \"validator\" ),\\r\\n\\t\\t\\t\\t\\teventType = \"on\" + event.type.replace( /^validate/, \"\" ),\\r\\n\\t\\t\\t\\t\\tsettings = validator.settings;\\r\\n\\t\\t\\t\\tif ( settings[ eventType ] && !$( this ).is( settings.ignore ) ) {\\r\\n\\t\\t\\t\\t\\tsettings[ eventType ].call( validator, this, event );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t$( this.currentForm )\\r\\n\\t\\t\\t\\t.on( \"focusin.validate focusout.validate keyup.validate\",\\r\\n\\t\\t\\t\\t\\t\":text, [type=\\'password\\'], [type=\\'file\\'], select, textarea, [type=\\'number\\'], [type=\\'search\\'], \" +\\r\\n\\t\\t\\t\\t\\t\"[type=\\'tel\\'], [type=\\'url\\'], [type=\\'email\\'], [type=\\'datetime\\'], [type=\\'date\\'], [type=\\'month\\'], \" +\\r\\n\\t\\t\\t\\t\\t\"[type=\\'week\\'], [type=\\'time\\'], [type=\\'datetime-local\\'], [type=\\'range\\'], [type=\\'color\\'], \" +\\r\\n\\t\\t\\t\\t\\t\"[type=\\'radio\\'], [type=\\'checkbox\\'], [contenteditable], [type=\\'button\\']\", delegate )\\r\\n\\r\\n\\t\\t\\t\\t// Support: Chrome, oldIE\\r\\n\\t\\t\\t\\t// \"select\" is provided as event.target when clicking a option\\r\\n\\t\\t\\t\\t.on( \"click.validate\", \"select, option, [type=\\'radio\\'], [type=\\'checkbox\\']\", delegate );\\r\\n\\r\\n\\t\\t\\tif ( this.settings.invalidHandler ) {\\r\\n\\t\\t\\t\\t$( this.currentForm ).on( \"invalid-form.validate\", this.settings.invalidHandler );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/Validator.form/\\r\\n\\t\\tform: function() {\\r\\n\\t\\t\\tthis.checkForm();\\r\\n\\t\\t\\t$.extend( this.submitted, this.errorMap );\\r\\n\\t\\t\\tthis.invalid = $.extend( {}, this.errorMap );\\r\\n\\t\\t\\tif ( !this.valid() ) {\\r\\n\\t\\t\\t\\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ] );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis.showErrors();\\r\\n\\t\\t\\treturn this.valid();\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tcheckForm: function() {\\r\\n\\t\\t\\tthis.prepareForm();\\r\\n\\t\\t\\tfor ( var i = 0, elements = ( this.currentElements = this.elements() ); elements[ i ]; i++ ) {\\r\\n\\t\\t\\t\\tthis.check( elements[ i ] );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn this.valid();\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/Validator.element/\\r\\n\\t\\telement: function( element ) {\\r\\n\\t\\t\\tvar cleanElement = this.clean( element ),\\r\\n\\t\\t\\t\\tcheckElement = this.validationTargetFor( cleanElement ),\\r\\n\\t\\t\\t\\tv = this,\\r\\n\\t\\t\\t\\tresult = true,\\r\\n\\t\\t\\t\\trs, group;\\r\\n\\r\\n\\t\\t\\tif ( checkElement === undefined ) {\\r\\n\\t\\t\\t\\tdelete this.invalid[ cleanElement.name ];\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tthis.prepareElement( checkElement );\\r\\n\\t\\t\\t\\tthis.currentElements = $( checkElement );\\r\\n\\r\\n\\t\\t\\t\\t// If this element is grouped, then validate all group elements already\\r\\n\\t\\t\\t\\t// containing a value\\r\\n\\t\\t\\t\\tgroup = this.groups[ checkElement.name ];\\r\\n\\t\\t\\t\\tif ( group ) {\\r\\n\\t\\t\\t\\t\\t$.each( this.groups, function( name, testgroup ) {\\r\\n\\t\\t\\t\\t\\t\\tif ( testgroup === group && name !== checkElement.name ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tcleanElement = v.validationTargetFor( v.clean( v.findByName( name ) ) );\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( cleanElement && cleanElement.name in v.invalid ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tv.currentElements.push( cleanElement );\\r\\n\\t\\t\\t\\t\\t\\t\\t\\tresult = v.check( cleanElement ) && result;\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\trs = this.check( checkElement ) !== false;\\r\\n\\t\\t\\t\\tresult = result && rs;\\r\\n\\t\\t\\t\\tif ( rs ) {\\r\\n\\t\\t\\t\\t\\tthis.invalid[ checkElement.name ] = false;\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tthis.invalid[ checkElement.name ] = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tif ( !this.numberOfInvalids() ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Hide error containers on last error\\r\\n\\t\\t\\t\\t\\tthis.toHide = this.toHide.add( this.containers );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tthis.showErrors();\\r\\n\\r\\n\\t\\t\\t\\t// Add aria-invalid status for screen readers\\r\\n\\t\\t\\t\\t$( element ).attr( \"aria-invalid\", !rs );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn result;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/Validator.showErrors/\\r\\n\\t\\tshowErrors: function( errors ) {\\r\\n\\t\\t\\tif ( errors ) {\\r\\n\\t\\t\\t\\tvar validator = this;\\r\\n\\r\\n\\t\\t\\t\\t// Add items to error list and map\\r\\n\\t\\t\\t\\t$.extend( this.errorMap, errors );\\r\\n\\t\\t\\t\\tthis.errorList = $.map( this.errorMap, function( message, name ) {\\r\\n\\t\\t\\t\\t\\treturn {\\r\\n\\t\\t\\t\\t\\t\\tmessage: message,\\r\\n\\t\\t\\t\\t\\t\\telement: validator.findByName( name )[ 0 ]\\r\\n\\t\\t\\t\\t\\t};\\r\\n\\t\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\t\\t// Remove items from success list\\r\\n\\t\\t\\t\\tthis.successList = $.grep( this.successList, function( element ) {\\r\\n\\t\\t\\t\\t\\treturn !( element.name in errors );\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( this.settings.showErrors ) {\\r\\n\\t\\t\\t\\tthis.settings.showErrors.call( this, this.errorMap, this.errorList );\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tthis.defaultShowErrors();\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/Validator.resetForm/\\r\\n\\t\\tresetForm: function() {\\r\\n\\t\\t\\tif ( $.fn.resetForm ) {\\r\\n\\t\\t\\t\\t$( this.currentForm ).resetForm();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis.invalid = {};\\r\\n\\t\\t\\tthis.submitted = {};\\r\\n\\t\\t\\tthis.prepareForm();\\r\\n\\t\\t\\tthis.hideErrors();\\r\\n\\t\\t\\tvar elements = this.elements()\\r\\n\\t\\t\\t\\t.removeData( \"previousValue\" )\\r\\n\\t\\t\\t\\t.removeAttr( \"aria-invalid\" );\\r\\n\\r\\n\\t\\t\\tthis.resetElements( elements );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tresetElements: function( elements ) {\\r\\n\\t\\t\\tvar i;\\r\\n\\r\\n\\t\\t\\tif ( this.settings.unhighlight ) {\\r\\n\\t\\t\\t\\tfor ( i = 0; elements[ i ]; i++ ) {\\r\\n\\t\\t\\t\\t\\tthis.settings.unhighlight.call( this, elements[ i ],\\r\\n\\t\\t\\t\\t\\t\\tthis.settings.errorClass, \"\" );\\r\\n\\t\\t\\t\\t\\tthis.findByName( elements[ i ].name ).removeClass( this.settings.validClass );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\telements\\r\\n\\t\\t\\t\\t\\t.removeClass( this.settings.errorClass )\\r\\n\\t\\t\\t\\t\\t.removeClass( this.settings.validClass );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tnumberOfInvalids: function() {\\r\\n\\t\\t\\treturn this.objectLength( this.invalid );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tobjectLength: function( obj ) {\\r\\n\\t\\t\\t/* jshint unused: false */\\r\\n\\t\\t\\tvar count = 0,\\r\\n\\t\\t\\t\\ti;\\r\\n\\t\\t\\tfor ( i in obj ) {\\r\\n\\r\\n\\t\\t\\t\\t// This check allows counting elements with empty error\\r\\n\\t\\t\\t\\t// message as invalid elements\\r\\n\\t\\t\\t\\tif ( obj[ i ] !== undefined && obj[ i ] !== null && obj[ i ] !== false ) {\\r\\n\\t\\t\\t\\t\\tcount++;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn count;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\thideErrors: function() {\\r\\n\\t\\t\\tthis.hideThese( this.toHide );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\thideThese: function( errors ) {\\r\\n\\t\\t\\terrors.not( this.containers ).text( \"\" );\\r\\n\\t\\t\\tthis.addWrapper( errors ).hide();\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tvalid: function() {\\r\\n\\t\\t\\treturn this.size() === 0;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tsize: function() {\\r\\n\\t\\t\\treturn this.errorList.length;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tfocusInvalid: function() {\\r\\n\\t\\t\\tif ( this.settings.focusInvalid ) {\\r\\n\\t\\t\\t\\ttry {\\r\\n\\t\\t\\t\\t\\t$( this.findLastActive() || this.errorList.length && this.errorList[ 0 ].element || [] )\\r\\n\\t\\t\\t\\t\\t.filter( \":visible\" )\\r\\n\\t\\t\\t\\t\\t.trigger( \"focus\" )\\r\\n\\r\\n\\t\\t\\t\\t\\t// Manually trigger focusin event; without it, focusin handler isn\\'t called, findLastActive won\\'t have anything to find\\r\\n\\t\\t\\t\\t\\t.trigger( \"focusin\" );\\r\\n\\t\\t\\t\\t} catch ( e ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Ignore IE throwing errors when focusing hidden elements\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tfindLastActive: function() {\\r\\n\\t\\t\\tvar lastActive = this.lastActive;\\r\\n\\t\\t\\treturn lastActive && $.grep( this.errorList, function( n ) {\\r\\n\\t\\t\\t\\treturn n.element.name === lastActive.name;\\r\\n\\t\\t\\t} ).length === 1 && lastActive;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\telements: function() {\\r\\n\\t\\t\\tvar validator = this,\\r\\n\\t\\t\\t\\trulesCache = {};\\r\\n\\r\\n\\t\\t\\t// Select all valid inputs inside the form (no submit or reset buttons)\\r\\n\\t\\t\\treturn $( this.currentForm )\\r\\n\\t\\t\\t.find( \"input, select, textarea, [contenteditable]\" )\\r\\n\\t\\t\\t.not( \":submit, :reset, :image, :disabled\" )\\r\\n\\t\\t\\t.not( this.settings.ignore )\\r\\n\\t\\t\\t.filter( function() {\\r\\n\\t\\t\\t\\tvar name = this.name || $( this ).attr( \"name\" ); // For contenteditable\\r\\n\\t\\t\\t\\tvar isContentEditable = typeof $( this ).attr( \"contenteditable\" ) !== \"undefined\" && $( this ).attr( \"contenteditable\" ) !== \"false\";\\r\\n\\r\\n\\t\\t\\t\\tif ( !name && validator.settings.debug && window.console ) {\\r\\n\\t\\t\\t\\t\\tconsole.error( \"%o has no name assigned\", this );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Set form expando on contenteditable\\r\\n\\t\\t\\t\\tif ( isContentEditable ) {\\r\\n\\t\\t\\t\\t\\tthis.form = $( this ).closest( \"form\" )[ 0 ];\\r\\n\\t\\t\\t\\t\\tthis.name = name;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Ignore elements that belong to other/nested forms\\r\\n\\t\\t\\t\\tif ( this.form !== validator.currentForm ) {\\r\\n\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Select only the first element for each name, and only those with rules specified\\r\\n\\t\\t\\t\\tif ( name in rulesCache || !validator.objectLength( $( this ).rules() ) ) {\\r\\n\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\trulesCache[ name ] = true;\\r\\n\\t\\t\\t\\treturn true;\\r\\n\\t\\t\\t} );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tclean: function( selector ) {\\r\\n\\t\\t\\treturn $( selector )[ 0 ];\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\terrors: function() {\\r\\n\\t\\t\\tvar errorClass = this.settings.errorClass.split( \" \" ).join( \".\" );\\r\\n\\t\\t\\treturn $( this.settings.errorElement + \".\" + errorClass, this.errorContext );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tresetInternals: function() {\\r\\n\\t\\t\\tthis.successList = [];\\r\\n\\t\\t\\tthis.errorList = [];\\r\\n\\t\\t\\tthis.errorMap = {};\\r\\n\\t\\t\\tthis.toShow = $( [] );\\r\\n\\t\\t\\tthis.toHide = $( [] );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\treset: function() {\\r\\n\\t\\t\\tthis.resetInternals();\\r\\n\\t\\t\\tthis.currentElements = $( [] );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tprepareForm: function() {\\r\\n\\t\\t\\tthis.reset();\\r\\n\\t\\t\\tthis.toHide = this.errors().add( this.containers );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tprepareElement: function( element ) {\\r\\n\\t\\t\\tthis.reset();\\r\\n\\t\\t\\tthis.toHide = this.errorsFor( element );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\telementValue: function( element ) {\\r\\n\\t\\t\\tvar $element = $( element ),\\r\\n\\t\\t\\t\\ttype = element.type,\\r\\n\\t\\t\\t\\tisContentEditable = typeof $element.attr( \"contenteditable\" ) !== \"undefined\" && $element.attr( \"contenteditable\" ) !== \"false\",\\r\\n\\t\\t\\t\\tval, idx;\\r\\n\\r\\n\\t\\t\\tif ( type === \"radio\" || type === \"checkbox\" ) {\\r\\n\\t\\t\\t\\treturn this.findByName( element.name ).filter( \":checked\" ).val();\\r\\n\\t\\t\\t} else if ( type === \"number\" && typeof element.validity !== \"undefined\" ) {\\r\\n\\t\\t\\t\\treturn element.validity.badInput ? \"NaN\" : $element.val();\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( isContentEditable ) {\\r\\n\\t\\t\\t\\tval = $element.text();\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tval = $element.val();\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( type === \"file\" ) {\\r\\n\\r\\n\\t\\t\\t\\t// Modern browser (chrome & safari)\\r\\n\\t\\t\\t\\tif ( val.substr( 0, 12 ) === \"C:\\\\\\\\fakepath\\\\\\\\\" ) {\\r\\n\\t\\t\\t\\t\\treturn val.substr( 12 );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Legacy browsers\\r\\n\\t\\t\\t\\t// Unix-based path\\r\\n\\t\\t\\t\\tidx = val.lastIndexOf( \"/\" );\\r\\n\\t\\t\\t\\tif ( idx >= 0 ) {\\r\\n\\t\\t\\t\\t\\treturn val.substr( idx + 1 );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Windows-based path\\r\\n\\t\\t\\t\\tidx = val.lastIndexOf( \"\\\\\\\\\" );\\r\\n\\t\\t\\t\\tif ( idx >= 0 ) {\\r\\n\\t\\t\\t\\t\\treturn val.substr( idx + 1 );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Just the file name\\r\\n\\t\\t\\t\\treturn val;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tif ( typeof val === \"string\" ) {\\r\\n\\t\\t\\t\\treturn val.replace( /\\\\r/g, \"\" );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn val;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tcheck: function( element ) {\\r\\n\\t\\t\\telement = this.validationTargetFor( this.clean( element ) );\\r\\n\\r\\n\\t\\t\\tvar rules = $( element ).rules(),\\r\\n\\t\\t\\t\\trulesCount = $.map( rules, function( n, i ) {\\r\\n\\t\\t\\t\\t\\treturn i;\\r\\n\\t\\t\\t\\t} ).length,\\r\\n\\t\\t\\t\\tdependencyMismatch = false,\\r\\n\\t\\t\\t\\tval = this.elementValue( element ),\\r\\n\\t\\t\\t\\tresult, method, rule, normalizer;\\r\\n\\r\\n\\t\\t\\t// Prioritize the local normalizer defined for this element over the global one\\r\\n\\t\\t\\t// if the former exists, otherwise user the global one in case it exists.\\r\\n\\t\\t\\tif ( typeof rules.normalizer === \"function\" ) {\\r\\n\\t\\t\\t\\tnormalizer = rules.normalizer;\\r\\n\\t\\t\\t} else if (\\ttypeof this.settings.normalizer === \"function\" ) {\\r\\n\\t\\t\\t\\tnormalizer = this.settings.normalizer;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// If normalizer is defined, then call it to retreive the changed value instead\\r\\n\\t\\t\\t// of using the real one.\\r\\n\\t\\t\\t// Note that `this` in the normalizer is `element`.\\r\\n\\t\\t\\tif ( normalizer ) {\\r\\n\\t\\t\\t\\tval = normalizer.call( element, val );\\r\\n\\r\\n\\t\\t\\t\\t// Delete the normalizer from rules to avoid treating it as a pre-defined method.\\r\\n\\t\\t\\t\\tdelete rules.normalizer;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tfor ( method in rules ) {\\r\\n\\t\\t\\t\\trule = { method: method, parameters: rules[ method ] };\\r\\n\\t\\t\\t\\ttry {\\r\\n\\t\\t\\t\\t\\tresult = $.validator.methods[ method ].call( this, val, element, rule.parameters );\\r\\n\\r\\n\\t\\t\\t\\t\\t// If a method indicates that the field is optional and therefore valid,\\r\\n\\t\\t\\t\\t\\t// don\\'t mark it as valid when there are no other rules\\r\\n\\t\\t\\t\\t\\tif ( result === \"dependency-mismatch\" && rulesCount === 1 ) {\\r\\n\\t\\t\\t\\t\\t\\tdependencyMismatch = true;\\r\\n\\t\\t\\t\\t\\t\\tcontinue;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tdependencyMismatch = false;\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( result === \"pending\" ) {\\r\\n\\t\\t\\t\\t\\t\\tthis.toHide = this.toHide.not( this.errorsFor( element ) );\\r\\n\\t\\t\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tif ( !result ) {\\r\\n\\t\\t\\t\\t\\t\\tthis.formatAndAdd( element, rule );\\r\\n\\t\\t\\t\\t\\t\\treturn false;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t} catch ( e ) {\\r\\n\\t\\t\\t\\t\\tif ( this.settings.debug && window.console ) {\\r\\n\\t\\t\\t\\t\\t\\tconsole.log( \"Exception occurred when checking element \" + element.id + \", check the \\'\" + rule.method + \"\\' method.\", e );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tif ( e instanceof TypeError ) {\\r\\n\\t\\t\\t\\t\\t\\te.message += \".  Exception occurred when checking element \" + element.id + \", check the \\'\" + rule.method + \"\\' method.\";\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\tthrow e;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( dependencyMismatch ) {\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( this.objectLength( rules ) ) {\\r\\n\\t\\t\\t\\tthis.successList.push( element );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn true;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Return the custom message for the given element and validation method\\r\\n\\t\\t// specified in the element\\'s HTML5 data attribute\\r\\n\\t\\t// return the generic message if present and no method specific message is present\\r\\n\\t\\tcustomDataMessage: function( element, method ) {\\r\\n\\t\\t\\treturn $( element ).data( \"msg\" + method.charAt( 0 ).toUpperCase() +\\r\\n\\t\\t\\t\\tmethod.substring( 1 ).toLowerCase() ) || $( element ).data( \"msg\" );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Return the custom message for the given element name and validation method\\r\\n\\t\\tcustomMessage: function( name, method ) {\\r\\n\\t\\t\\tvar m = this.settings.messages[ name ];\\r\\n\\t\\t\\treturn m && ( m.constructor === String ? m : m[ method ] );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Return the first defined argument, allowing empty strings\\r\\n\\t\\tfindDefined: function() {\\r\\n\\t\\t\\tfor ( var i = 0; i < arguments.length; i++ ) {\\r\\n\\t\\t\\t\\tif ( arguments[ i ] !== undefined ) {\\r\\n\\t\\t\\t\\t\\treturn arguments[ i ];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn undefined;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// The second parameter \\'rule\\' used to be a string, and extended to an object literal\\r\\n\\t\\t// of the following form:\\r\\n\\t\\t// rule = {\\r\\n\\t\\t//     method: \"method name\",\\r\\n\\t\\t//     parameters: \"the given method parameters\"\\r\\n\\t\\t// }\\r\\n\\t\\t//\\r\\n\\t\\t// The old behavior still supported, kept to maintain backward compatibility with\\r\\n\\t\\t// old code, and will be removed in the next major release.\\r\\n\\t\\tdefaultMessage: function( element, rule ) {\\r\\n\\t\\t\\tif ( typeof rule === \"string\" ) {\\r\\n\\t\\t\\t\\trule = { method: rule };\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tvar message = this.findDefined(\\r\\n\\t\\t\\t\\t\\tthis.customMessage( element.name, rule.method ),\\r\\n\\t\\t\\t\\t\\tthis.customDataMessage( element, rule.method ),\\r\\n\\r\\n\\t\\t\\t\\t\\t// \\'title\\' is never undefined, so handle empty string as undefined\\r\\n\\t\\t\\t\\t\\t!this.settings.ignoreTitle && element.title || undefined,\\r\\n\\t\\t\\t\\t\\t$.validator.messages[ rule.method ],\\r\\n\\t\\t\\t\\t\\t\"<strong>Warning: No message defined for \" + element.name + \"</strong>\"\\r\\n\\t\\t\\t\\t),\\r\\n\\t\\t\\t\\ttheregex = /\\\\$?\\\\{(\\\\d+)\\\\}/g;\\r\\n\\t\\t\\tif ( typeof message === \"function\" ) {\\r\\n\\t\\t\\t\\tmessage = message.call( this, rule.parameters, element );\\r\\n\\t\\t\\t} else if ( theregex.test( message ) ) {\\r\\n\\t\\t\\t\\tmessage = $.validator.format( message.replace( theregex, \"{$1}\" ), rule.parameters );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn message;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tformatAndAdd: function( element, rule ) {\\r\\n\\t\\t\\tvar message = this.defaultMessage( element, rule );\\r\\n\\r\\n\\t\\t\\tthis.errorList.push( {\\r\\n\\t\\t\\t\\tmessage: message,\\r\\n\\t\\t\\t\\telement: element,\\r\\n\\t\\t\\t\\tmethod: rule.method\\r\\n\\t\\t\\t} );\\r\\n\\r\\n\\t\\t\\tthis.errorMap[ element.name ] = message;\\r\\n\\t\\t\\tthis.submitted[ element.name ] = message;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\taddWrapper: function( toToggle ) {\\r\\n\\t\\t\\tif ( this.settings.wrapper ) {\\r\\n\\t\\t\\t\\ttoToggle = toToggle.add( toToggle.parent( this.settings.wrapper ) );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn toToggle;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tdefaultShowErrors: function() {\\r\\n\\t\\t\\tvar i, elements, error;\\r\\n\\t\\t\\tfor ( i = 0; this.errorList[ i ]; i++ ) {\\r\\n\\t\\t\\t\\terror = this.errorList[ i ];\\r\\n\\t\\t\\t\\tif ( this.settings.highlight ) {\\r\\n\\t\\t\\t\\t\\tthis.settings.highlight.call( this, error.element, this.settings.errorClass, this.settings.validClass );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tthis.showLabel( error.element, error.message );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( this.errorList.length ) {\\r\\n\\t\\t\\t\\tthis.toShow = this.toShow.add( this.containers );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( this.settings.success ) {\\r\\n\\t\\t\\t\\tfor ( i = 0; this.successList[ i ]; i++ ) {\\r\\n\\t\\t\\t\\t\\tthis.showLabel( this.successList[ i ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( this.settings.unhighlight ) {\\r\\n\\t\\t\\t\\tfor ( i = 0, elements = this.validElements(); elements[ i ]; i++ ) {\\r\\n\\t\\t\\t\\t\\tthis.settings.unhighlight.call( this, elements[ i ], this.settings.errorClass, this.settings.validClass );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis.toHide = this.toHide.not( this.toShow );\\r\\n\\t\\t\\tthis.hideErrors();\\r\\n\\t\\t\\tthis.addWrapper( this.toShow ).show();\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tvalidElements: function() {\\r\\n\\t\\t\\treturn this.currentElements.not( this.invalidElements() );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tinvalidElements: function() {\\r\\n\\t\\t\\treturn $( this.errorList ).map( function() {\\r\\n\\t\\t\\t\\treturn this.element;\\r\\n\\t\\t\\t} );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tshowLabel: function( element, message ) {\\r\\n\\t\\t\\tvar place, group, errorID, v,\\r\\n\\t\\t\\t\\terror = this.errorsFor( element ),\\r\\n\\t\\t\\t\\telementID = this.idOrName( element ),\\r\\n\\t\\t\\t\\tdescribedBy = $( element ).attr( \"aria-describedby\" );\\r\\n\\r\\n\\t\\t\\tif ( error.length ) {\\r\\n\\r\\n\\t\\t\\t\\t// Refresh error/success class\\r\\n\\t\\t\\t\\terror.removeClass( this.settings.validClass ).addClass( this.settings.errorClass );\\r\\n\\r\\n\\t\\t\\t\\t// Replace message on existing label\\r\\n\\t\\t\\t\\terror.html( message );\\r\\n\\t\\t\\t} else {\\r\\n\\r\\n\\t\\t\\t\\t// Create error element\\r\\n\\t\\t\\t\\terror = $( \"<\" + this.settings.errorElement + \">\" )\\r\\n\\t\\t\\t\\t\\t.attr( \"id\", elementID + \"-error\" )\\r\\n\\t\\t\\t\\t\\t.addClass( this.settings.errorClass )\\r\\n\\t\\t\\t\\t\\t.html( message || \"\" );\\r\\n\\r\\n\\t\\t\\t\\t// Maintain reference to the element to be placed into the DOM\\r\\n\\t\\t\\t\\tplace = error;\\r\\n\\t\\t\\t\\tif ( this.settings.wrapper ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// Make sure the element is visible, even in IE\\r\\n\\t\\t\\t\\t\\t// actually showing the wrapped element is handled elsewhere\\r\\n\\t\\t\\t\\t\\tplace = error.hide().show().wrap( \"<\" + this.settings.wrapper + \"/>\" ).parent();\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif ( this.labelContainer.length ) {\\r\\n\\t\\t\\t\\t\\tthis.labelContainer.append( place );\\r\\n\\t\\t\\t\\t} else if ( this.settings.errorPlacement ) {\\r\\n\\t\\t\\t\\t\\tthis.settings.errorPlacement.call( this, place, $( element ) );\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tplace.insertAfter( element );\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Link error back to the element\\r\\n\\t\\t\\t\\tif ( error.is( \"label\" ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t// If the error is a label, then associate using \\'for\\'\\r\\n\\t\\t\\t\\t\\terror.attr( \"for\", elementID );\\r\\n\\r\\n\\t\\t\\t\\t\\t// If the element is not a child of an associated label, then it\\'s necessary\\r\\n\\t\\t\\t\\t\\t// to explicitly apply aria-describedby\\r\\n\\t\\t\\t\\t} else if ( error.parents( \"label[for=\\'\" + this.escapeCssMeta( elementID ) + \"\\']\" ).length === 0 ) {\\r\\n\\t\\t\\t\\t\\terrorID = error.attr( \"id\" );\\r\\n\\r\\n\\t\\t\\t\\t\\t// Respect existing non-error aria-describedby\\r\\n\\t\\t\\t\\t\\tif ( !describedBy ) {\\r\\n\\t\\t\\t\\t\\t\\tdescribedBy = errorID;\\r\\n\\t\\t\\t\\t\\t} else if ( !describedBy.match( new RegExp( \"\\\\\\\\b\" + this.escapeCssMeta( errorID ) + \"\\\\\\\\b\" ) ) ) {\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t// Add to end of list if not already present\\r\\n\\t\\t\\t\\t\\t\\tdescribedBy += \" \" + errorID;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t$( element ).attr( \"aria-describedby\", describedBy );\\r\\n\\r\\n\\t\\t\\t\\t\\t// If this element is grouped, then assign to all elements in the same group\\r\\n\\t\\t\\t\\t\\tgroup = this.groups[ element.name ];\\r\\n\\t\\t\\t\\t\\tif ( group ) {\\r\\n\\t\\t\\t\\t\\t\\tv = this;\\r\\n\\t\\t\\t\\t\\t\\t$.each( v.groups, function( name, testgroup ) {\\r\\n\\t\\t\\t\\t\\t\\t\\tif ( testgroup === group ) {\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t$( \"[name=\\'\" + v.escapeCssMeta( name ) + \"\\']\", v.currentForm )\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t.attr( \"aria-describedby\", error.attr( \"id\" ) );\\r\\n\\t\\t\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\t\\t} );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( !message && this.settings.success ) {\\r\\n\\t\\t\\t\\terror.text( \"\" );\\r\\n\\t\\t\\t\\tif ( typeof this.settings.success === \"string\" ) {\\r\\n\\t\\t\\t\\t\\terror.addClass( this.settings.success );\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tthis.settings.success( error, element );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tthis.toShow = this.toShow.add( error );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\terrorsFor: function( element ) {\\r\\n\\t\\t\\tvar name = this.escapeCssMeta( this.idOrName( element ) ),\\r\\n\\t\\t\\t\\tdescriber = $( element ).attr( \"aria-describedby\" ),\\r\\n\\t\\t\\t\\tselector = \"label[for=\\'\" + name + \"\\'], label[for=\\'\" + name + \"\\'] *\";\\r\\n\\r\\n\\t\\t\\t// \\'aria-describedby\\' should directly reference the error element\\r\\n\\t\\t\\tif ( describer ) {\\r\\n\\t\\t\\t\\tselector = selector + \", #\" + this.escapeCssMeta( describer )\\r\\n\\t\\t\\t\\t\\t.replace( /\\\\s+/g, \", #\" );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn this\\r\\n\\t\\t\\t\\t.errors()\\r\\n\\t\\t\\t\\t.filter( selector );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// See https://api.jquery.com/category/selectors/, for CSS\\r\\n\\t\\t// meta-characters that should be escaped in order to be used with JQuery\\r\\n\\t\\t// as a literal part of a name/id or any selector.\\r\\n\\t\\tescapeCssMeta: function( string ) {\\r\\n\\t\\t\\treturn string.replace( /([\\\\\\\\!\"#$%&\\'()*+,./:;<=>?@\\\\[\\\\]^`{|}~])/g, \"\\\\\\\\$1\" );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tidOrName: function( element ) {\\r\\n\\t\\t\\treturn this.groups[ element.name ] || ( this.checkable( element ) ? element.name : element.id || element.name );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tvalidationTargetFor: function( element ) {\\r\\n\\r\\n\\t\\t\\t// If radio/checkbox, validate first element in group instead\\r\\n\\t\\t\\tif ( this.checkable( element ) ) {\\r\\n\\t\\t\\t\\telement = this.findByName( element.name );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t// Always apply ignore filter\\r\\n\\t\\t\\treturn $( element ).not( this.settings.ignore )[ 0 ];\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tcheckable: function( element ) {\\r\\n\\t\\t\\treturn ( /radio|checkbox/i ).test( element.type );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tfindByName: function( name ) {\\r\\n\\t\\t\\treturn $( this.currentForm ).find( \"[name=\\'\" + this.escapeCssMeta( name ) + \"\\']\" );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tgetLength: function( value, element ) {\\r\\n\\t\\t\\tswitch ( element.nodeName.toLowerCase() ) {\\r\\n\\t\\t\\tcase \"select\":\\r\\n\\t\\t\\t\\treturn $( \"option:selected\", element ).length;\\r\\n\\t\\t\\tcase \"input\":\\r\\n\\t\\t\\t\\tif ( this.checkable( element ) ) {\\r\\n\\t\\t\\t\\t\\treturn this.findByName( element.name ).filter( \":checked\" ).length;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn value.length;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tdepend: function( param, element ) {\\r\\n\\t\\t\\treturn this.dependTypes[ typeof param ] ? this.dependTypes[ typeof param ]( param, element ) : true;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tdependTypes: {\\r\\n\\t\\t\\t\"boolean\": function( param ) {\\r\\n\\t\\t\\t\\treturn param;\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"string\": function( param, element ) {\\r\\n\\t\\t\\t\\treturn !!$( param, element.form ).length;\\r\\n\\t\\t\\t},\\r\\n\\t\\t\\t\"function\": function( param, element ) {\\r\\n\\t\\t\\t\\treturn param( element );\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\toptional: function( element ) {\\r\\n\\t\\t\\tvar val = this.elementValue( element );\\r\\n\\t\\t\\treturn !$.validator.methods.required.call( this, val, element ) && \"dependency-mismatch\";\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tstartRequest: function( element ) {\\r\\n\\t\\t\\tif ( !this.pending[ element.name ] ) {\\r\\n\\t\\t\\t\\tthis.pendingRequest++;\\r\\n\\t\\t\\t\\t$( element ).addClass( this.settings.pendingClass );\\r\\n\\t\\t\\t\\tthis.pending[ element.name ] = true;\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tstopRequest: function( element, valid ) {\\r\\n\\t\\t\\tthis.pendingRequest--;\\r\\n\\r\\n\\t\\t\\t// Sometimes synchronization fails, make sure pendingRequest is never < 0\\r\\n\\t\\t\\tif ( this.pendingRequest < 0 ) {\\r\\n\\t\\t\\t\\tthis.pendingRequest = 0;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tdelete this.pending[ element.name ];\\r\\n\\t\\t\\t$( element ).removeClass( this.settings.pendingClass );\\r\\n\\t\\t\\tif ( valid && this.pendingRequest === 0 && this.formSubmitted && this.form() ) {\\r\\n\\t\\t\\t\\t$( this.currentForm ).submit();\\r\\n\\r\\n\\t\\t\\t\\t// Remove the hidden input that was used as a replacement for the\\r\\n\\t\\t\\t\\t// missing submit button. The hidden input is added by `handle()`\\r\\n\\t\\t\\t\\t// to ensure that the value of the used submit button is passed on\\r\\n\\t\\t\\t\\t// for scripted submits triggered by this method\\r\\n\\t\\t\\t\\tif ( this.submitButton ) {\\r\\n\\t\\t\\t\\t\\t$( \"input:hidden[name=\\'\" + this.submitButton.name + \"\\']\", this.currentForm ).remove();\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\tthis.formSubmitted = false;\\r\\n\\t\\t\\t} else if ( !valid && this.pendingRequest === 0 && this.formSubmitted ) {\\r\\n\\t\\t\\t\\t$( this.currentForm ).triggerHandler( \"invalid-form\", [ this ] );\\r\\n\\t\\t\\t\\tthis.formSubmitted = false;\\r\\n\\t\\t\\t}\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\tpreviousValue: function( element, method ) {\\r\\n\\t\\t\\tmethod = typeof method === \"string\" && method || \"remote\";\\r\\n\\r\\n\\t\\t\\treturn $.data( element, \"previousValue\" ) || $.data( element, \"previousValue\", {\\r\\n\\t\\t\\t\\told: null,\\r\\n\\t\\t\\t\\tvalid: true,\\r\\n\\t\\t\\t\\tmessage: this.defaultMessage( element, { method: method } )\\r\\n\\t\\t\\t} );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// Cleans up all forms and elements, removes validator-specific events\\r\\n\\t\\tdestroy: function() {\\r\\n\\t\\t\\tthis.resetForm();\\r\\n\\r\\n\\t\\t\\t$( this.currentForm )\\r\\n\\t\\t\\t\\t.off( \".validate\" )\\r\\n\\t\\t\\t\\t.removeData( \"validator\" )\\r\\n\\t\\t\\t\\t.find( \".validate-equalTo-blur\" )\\r\\n\\t\\t\\t\\t\\t.off( \".validate-equalTo\" )\\r\\n\\t\\t\\t\\t\\t.removeClass( \"validate-equalTo-blur\" )\\r\\n\\t\\t\\t\\t.find( \".validate-lessThan-blur\" )\\r\\n\\t\\t\\t\\t\\t.off( \".validate-lessThan\" )\\r\\n\\t\\t\\t\\t\\t.removeClass( \"validate-lessThan-blur\" )\\r\\n\\t\\t\\t\\t.find( \".validate-lessThanEqual-blur\" )\\r\\n\\t\\t\\t\\t\\t.off( \".validate-lessThanEqual\" )\\r\\n\\t\\t\\t\\t\\t.removeClass( \"validate-lessThanEqual-blur\" )\\r\\n\\t\\t\\t\\t.find( \".validate-greaterThanEqual-blur\" )\\r\\n\\t\\t\\t\\t\\t.off( \".validate-greaterThanEqual\" )\\r\\n\\t\\t\\t\\t\\t.removeClass( \"validate-greaterThanEqual-blur\" )\\r\\n\\t\\t\\t\\t.find( \".validate-greaterThan-blur\" )\\r\\n\\t\\t\\t\\t\\t.off( \".validate-greaterThan\" )\\r\\n\\t\\t\\t\\t\\t.removeClass( \"validate-greaterThan-blur\" );\\r\\n\\t\\t}\\r\\n\\r\\n\\t},\\r\\n\\r\\n\\tclassRuleSettings: {\\r\\n\\t\\trequired: { required: true },\\r\\n\\t\\temail: { email: true },\\r\\n\\t\\turl: { url: true },\\r\\n\\t\\tdate: { date: true },\\r\\n\\t\\tdateISO: { dateISO: true },\\r\\n\\t\\tnumber: { number: true },\\r\\n\\t\\tdigits: { digits: true },\\r\\n\\t\\tcreditcard: { creditcard: true }\\r\\n\\t},\\r\\n\\r\\n\\taddClassRules: function( className, rules ) {\\r\\n\\t\\tif ( className.constructor === String ) {\\r\\n\\t\\t\\tthis.classRuleSettings[ className ] = rules;\\r\\n\\t\\t} else {\\r\\n\\t\\t\\t$.extend( this.classRuleSettings, className );\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tclassRules: function( element ) {\\r\\n\\t\\tvar rules = {},\\r\\n\\t\\t\\tclasses = $( element ).attr( \"class\" );\\r\\n\\r\\n\\t\\tif ( classes ) {\\r\\n\\t\\t\\t$.each( classes.split( \" \" ), function() {\\r\\n\\t\\t\\t\\tif ( this in $.validator.classRuleSettings ) {\\r\\n\\t\\t\\t\\t\\t$.extend( rules, $.validator.classRuleSettings[ this ] );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t} );\\r\\n\\t\\t}\\r\\n\\t\\treturn rules;\\r\\n\\t},\\r\\n\\r\\n\\tnormalizeAttributeRule: function( rules, type, method, value ) {\\r\\n\\r\\n\\t\\t// Convert the value to a number for number inputs, and for text for backwards compability\\r\\n\\t\\t// allows type=\"date\" and others to be compared as strings\\r\\n\\t\\tif ( /min|max|step/.test( method ) && ( type === null || /number|range|text/.test( type ) ) ) {\\r\\n\\t\\t\\tvalue = Number( value );\\r\\n\\r\\n\\t\\t\\t// Support Opera Mini, which returns NaN for undefined minlength\\r\\n\\t\\t\\tif ( isNaN( value ) ) {\\r\\n\\t\\t\\t\\tvalue = undefined;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\tif ( value || value === 0 ) {\\r\\n\\t\\t\\trules[ method ] = value;\\r\\n\\t\\t} else if ( type === method && type !== \"range\" ) {\\r\\n\\r\\n\\t\\t\\t// Exception: the jquery validate \\'range\\' method\\r\\n\\t\\t\\t// does not test for the html5 \\'range\\' type\\r\\n\\t\\t\\trules[ method ] = true;\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\tattributeRules: function( element ) {\\r\\n\\t\\tvar rules = {},\\r\\n\\t\\t\\t$element = $( element ),\\r\\n\\t\\t\\ttype = element.getAttribute( \"type\" ),\\r\\n\\t\\t\\tmethod, value;\\r\\n\\r\\n\\t\\tfor ( method in $.validator.methods ) {\\r\\n\\r\\n\\t\\t\\t// Support for <input required> in both html5 and older browsers\\r\\n\\t\\t\\tif ( method === \"required\" ) {\\r\\n\\t\\t\\t\\tvalue = element.getAttribute( method );\\r\\n\\r\\n\\t\\t\\t\\t// Some browsers return an empty string for the required attribute\\r\\n\\t\\t\\t\\t// and non-HTML5 browsers might have required=\"\" markup\\r\\n\\t\\t\\t\\tif ( value === \"\" ) {\\r\\n\\t\\t\\t\\t\\tvalue = true;\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t// Force non-HTML5 browsers to return bool\\r\\n\\t\\t\\t\\tvalue = !!value;\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tvalue = $element.attr( method );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.normalizeAttributeRule( rules, type, method, value );\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\t// \\'maxlength\\' may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs\\r\\n\\t\\tif ( rules.maxlength && /-1|2147483647|524288/.test( rules.maxlength ) ) {\\r\\n\\t\\t\\tdelete rules.maxlength;\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn rules;\\r\\n\\t},\\r\\n\\r\\n\\tdataRules: function( element ) {\\r\\n\\t\\tvar rules = {},\\r\\n\\t\\t\\t$element = $( element ),\\r\\n\\t\\t\\ttype = element.getAttribute( \"type\" ),\\r\\n\\t\\t\\tmethod, value;\\r\\n\\r\\n\\t\\tfor ( method in $.validator.methods ) {\\r\\n\\t\\t\\tvalue = $element.data( \"rule\" + method.charAt( 0 ).toUpperCase() + method.substring( 1 ).toLowerCase() );\\r\\n\\r\\n\\t\\t\\t// Cast empty attributes like `data-rule-required` to `true`\\r\\n\\t\\t\\tif ( value === \"\" ) {\\r\\n\\t\\t\\t\\tvalue = true;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tthis.normalizeAttributeRule( rules, type, method, value );\\r\\n\\t\\t}\\r\\n\\t\\treturn rules;\\r\\n\\t},\\r\\n\\r\\n\\tstaticRules: function( element ) {\\r\\n\\t\\tvar rules = {},\\r\\n\\t\\t\\tvalidator = $.data( element.form, \"validator\" );\\r\\n\\r\\n\\t\\tif ( validator.settings.rules ) {\\r\\n\\t\\t\\trules = $.validator.normalizeRule( validator.settings.rules[ element.name ] ) || {};\\r\\n\\t\\t}\\r\\n\\t\\treturn rules;\\r\\n\\t},\\r\\n\\r\\n\\tnormalizeRules: function( rules, element ) {\\r\\n\\r\\n\\t\\t// Handle dependency check\\r\\n\\t\\t$.each( rules, function( prop, val ) {\\r\\n\\r\\n\\t\\t\\t// Ignore rule when param is explicitly false, eg. required:false\\r\\n\\t\\t\\tif ( val === false ) {\\r\\n\\t\\t\\t\\tdelete rules[ prop ];\\r\\n\\t\\t\\t\\treturn;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( val.param || val.depends ) {\\r\\n\\t\\t\\t\\tvar keepRule = true;\\r\\n\\t\\t\\t\\tswitch ( typeof val.depends ) {\\r\\n\\t\\t\\t\\tcase \"string\":\\r\\n\\t\\t\\t\\t\\tkeepRule = !!$( val.depends, element.form ).length;\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\tcase \"function\":\\r\\n\\t\\t\\t\\t\\tkeepRule = val.depends.call( element, element );\\r\\n\\t\\t\\t\\t\\tbreak;\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\tif ( keepRule ) {\\r\\n\\t\\t\\t\\t\\trules[ prop ] = val.param !== undefined ? val.param : true;\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t$.data( element.form, \"validator\" ).resetElements( $( element ) );\\r\\n\\t\\t\\t\\t\\tdelete rules[ prop ];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\r\\n\\t\\t// Evaluate parameters\\r\\n\\t\\t$.each( rules, function( rule, parameter ) {\\r\\n\\t\\t\\trules[ rule ] = $.isFunction( parameter ) && rule !== \"normalizer\" ? parameter( element ) : parameter;\\r\\n\\t\\t} );\\r\\n\\r\\n\\t\\t// Clean number parameters\\r\\n\\t\\t$.each( [ \"minlength\", \"maxlength\" ], function() {\\r\\n\\t\\t\\tif ( rules[ this ] ) {\\r\\n\\t\\t\\t\\trules[ this ] = Number( rules[ this ] );\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\t\\t$.each( [ \"rangelength\", \"range\" ], function() {\\r\\n\\t\\t\\tvar parts;\\r\\n\\t\\t\\tif ( rules[ this ] ) {\\r\\n\\t\\t\\t\\tif ( $.isArray( rules[ this ] ) ) {\\r\\n\\t\\t\\t\\t\\trules[ this ] = [ Number( rules[ this ][ 0 ] ), Number( rules[ this ][ 1 ] ) ];\\r\\n\\t\\t\\t\\t} else if ( typeof rules[ this ] === \"string\" ) {\\r\\n\\t\\t\\t\\t\\tparts = rules[ this ].replace( /[\\\\[\\\\]]/g, \"\" ).split( /[\\\\s,]+/ );\\r\\n\\t\\t\\t\\t\\trules[ this ] = [ Number( parts[ 0 ] ), Number( parts[ 1 ] ) ];\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}\\r\\n\\t\\t} );\\r\\n\\r\\n\\t\\tif ( $.validator.autoCreateRanges ) {\\r\\n\\r\\n\\t\\t\\t// Auto-create ranges\\r\\n\\t\\t\\tif ( rules.min != null && rules.max != null ) {\\r\\n\\t\\t\\t\\trules.range = [ rules.min, rules.max ];\\r\\n\\t\\t\\t\\tdelete rules.min;\\r\\n\\t\\t\\t\\tdelete rules.max;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( rules.minlength != null && rules.maxlength != null ) {\\r\\n\\t\\t\\t\\trules.rangelength = [ rules.minlength, rules.maxlength ];\\r\\n\\t\\t\\t\\tdelete rules.minlength;\\r\\n\\t\\t\\t\\tdelete rules.maxlength;\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\r\\n\\t\\treturn rules;\\r\\n\\t},\\r\\n\\r\\n\\t// Converts a simple string to a {string: true} rule, e.g., \"required\" to {required:true}\\r\\n\\tnormalizeRule: function( data ) {\\r\\n\\t\\tif ( typeof data === \"string\" ) {\\r\\n\\t\\t\\tvar transformed = {};\\r\\n\\t\\t\\t$.each( data.split( /\\\\s/ ), function() {\\r\\n\\t\\t\\t\\ttransformed[ this ] = true;\\r\\n\\t\\t\\t} );\\r\\n\\t\\t\\tdata = transformed;\\r\\n\\t\\t}\\r\\n\\t\\treturn data;\\r\\n\\t},\\r\\n\\r\\n\\t// https://jqueryvalidation.org/jQuery.validator.addMethod/\\r\\n\\taddMethod: function( name, method, message ) {\\r\\n\\t\\t$.validator.methods[ name ] = method;\\r\\n\\t\\t$.validator.messages[ name ] = message !== undefined ? message : $.validator.messages[ name ];\\r\\n\\t\\tif ( method.length < 3 ) {\\r\\n\\t\\t\\t$.validator.addClassRules( name, $.validator.normalizeRule( name ) );\\r\\n\\t\\t}\\r\\n\\t},\\r\\n\\r\\n\\t// https://jqueryvalidation.org/jQuery.validator.methods/\\r\\n\\tmethods: {\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/required-method/\\r\\n\\t\\trequired: function( value, element, param ) {\\r\\n\\r\\n\\t\\t\\t// Check if dependency is met\\r\\n\\t\\t\\tif ( !this.depend( param, element ) ) {\\r\\n\\t\\t\\t\\treturn \"dependency-mismatch\";\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( element.nodeName.toLowerCase() === \"select\" ) {\\r\\n\\r\\n\\t\\t\\t\\t// Could be an array for select-multiple or a string, both are fine this way\\r\\n\\t\\t\\t\\tvar val = $( element ).val();\\r\\n\\t\\t\\t\\treturn val && val.length > 0;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif ( this.checkable( element ) ) {\\r\\n\\t\\t\\t\\treturn this.getLength( value, element ) > 0;\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn value !== undefined && value !== null && value.length > 0;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/email-method/\\r\\n\\t\\temail: function( value, element ) {\\r\\n\\r\\n\\t\\t\\t// From https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\\r\\n\\t\\t\\t// Retrieved 2014-01-14\\r\\n\\t\\t\\t// If you have a problem with this implementation, report a bug against the above spec\\r\\n\\t\\t\\t// Or use custom methods to implement your own email validation\\r\\n\\t\\t\\treturn this.optional( element ) || /^[a-zA-Z0-9.!#$%&\\'*+\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test( value );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/url-method/\\r\\n\\t\\turl: function( value, element ) {\\r\\n\\r\\n\\t\\t\\t// Copyright (c) 2010-2013 Diego Perini, MIT licensed\\r\\n\\t\\t\\t// https://gist.github.com/dperini/729294\\r\\n\\t\\t\\t// see also https://mathiasbynens.be/demo/url-regex\\r\\n\\t\\t\\t// modified to allow protocol-relative URLs\\r\\n\\t\\t\\treturn this.optional( element ) || /^(?:(?:(?:https?|ftp):)?\\\\/\\\\/)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})).?)(?::\\\\d{2,5})?(?:[/?#]\\\\S*)?$/i.test( value );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/date-method/\\r\\n\\t\\tdate: ( function() {\\r\\n\\t\\t\\tvar called = false;\\r\\n\\r\\n\\t\\t\\treturn function( value, element ) {\\r\\n\\t\\t\\t\\tif ( !called ) {\\r\\n\\t\\t\\t\\t\\tcalled = true;\\r\\n\\t\\t\\t\\t\\tif ( this.settings.debug && window.console ) {\\r\\n\\t\\t\\t\\t\\t\\tconsole.warn(\\r\\n\\t\\t\\t\\t\\t\\t\\t\"The `date` method is deprecated and will be removed in version \\'2.0.0\\'.\\\\n\" +\\r\\n\\t\\t\\t\\t\\t\\t\\t\"Please don\\'t use it, since it relies on the Date constructor, which\\\\n\" +\\r\\n\\t\\t\\t\\t\\t\\t\\t\"behaves very differently across browsers and locales. Use `dateISO`\\\\n\" +\\r\\n\\t\\t\\t\\t\\t\\t\\t\"instead or one of the locale specific methods in `localizations/`\\\\n\" +\\r\\n\\t\\t\\t\\t\\t\\t\\t\"and `additional-methods.js`.\"\\r\\n\\t\\t\\t\\t\\t\\t);\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\treturn this.optional( element ) || !/Invalid|NaN/.test( new Date( value ).toString() );\\r\\n\\t\\t\\t};\\r\\n\\t\\t}() ),\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/dateISO-method/\\r\\n\\t\\tdateISO: function( value, element ) {\\r\\n\\t\\t\\treturn this.optional( element ) || /^\\\\d{4}[\\\\/\\\\-](0?[1-9]|1[012])[\\\\/\\\\-](0?[1-9]|[12][0-9]|3[01])$/.test( value );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/number-method/\\r\\n\\t\\tnumber: function( value, element ) {\\r\\n\\t\\t\\treturn this.optional( element ) || /^(?:-?\\\\d+|-?\\\\d{1,3}(?:,\\\\d{3})+)?(?:\\\\.\\\\d+)?$/.test( value );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/digits-method/\\r\\n\\t\\tdigits: function( value, element ) {\\r\\n\\t\\t\\treturn this.optional( element ) || /^\\\\d+$/.test( value );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/minlength-method/\\r\\n\\t\\tminlength: function( value, element, param ) {\\r\\n\\t\\t\\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\\r\\n\\t\\t\\treturn this.optional( element ) || length >= param;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/maxlength-method/\\r\\n\\t\\tmaxlength: function( value, element, param ) {\\r\\n\\t\\t\\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\\r\\n\\t\\t\\treturn this.optional( element ) || length <= param;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/rangelength-method/\\r\\n\\t\\trangelength: function( value, element, param ) {\\r\\n\\t\\t\\tvar length = $.isArray( value ) ? value.length : this.getLength( value, element );\\r\\n\\t\\t\\treturn this.optional( element ) || ( length >= param[ 0 ] && length <= param[ 1 ] );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/min-method/\\r\\n\\t\\tmin: function( value, element, param ) {\\r\\n\\t\\t\\treturn this.optional( element ) || value >= param;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/max-method/\\r\\n\\t\\tmax: function( value, element, param ) {\\r\\n\\t\\t\\treturn this.optional( element ) || value <= param;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/range-method/\\r\\n\\t\\trange: function( value, element, param ) {\\r\\n\\t\\t\\treturn this.optional( element ) || ( value >= param[ 0 ] && value <= param[ 1 ] );\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/step-method/\\r\\n\\t\\tstep: function( value, element, param ) {\\r\\n\\t\\t\\tvar type = $( element ).attr( \"type\" ),\\r\\n\\t\\t\\t\\terrorMessage = \"Step attribute on input type \" + type + \" is not supported.\",\\r\\n\\t\\t\\t\\tsupportedTypes = [ \"text\", \"number\", \"range\" ],\\r\\n\\t\\t\\t\\tre = new RegExp( \"\\\\\\\\b\" + type + \"\\\\\\\\b\" ),\\r\\n\\t\\t\\t\\tnotSupported = type && !re.test( supportedTypes.join() ),\\r\\n\\t\\t\\t\\tdecimalPlaces = function( num ) {\\r\\n\\t\\t\\t\\t\\tvar match = ( \"\" + num ).match( /(?:\\\\.(\\\\d+))?$/ );\\r\\n\\t\\t\\t\\t\\tif ( !match ) {\\r\\n\\t\\t\\t\\t\\t\\treturn 0;\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\t\\t\\t// Number of digits right of decimal point.\\r\\n\\t\\t\\t\\t\\treturn match[ 1 ] ? match[ 1 ].length : 0;\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\ttoInt = function( num ) {\\r\\n\\t\\t\\t\\t\\treturn Math.round( num * Math.pow( 10, decimals ) );\\r\\n\\t\\t\\t\\t},\\r\\n\\t\\t\\t\\tvalid = true,\\r\\n\\t\\t\\t\\tdecimals;\\r\\n\\r\\n\\t\\t\\t// Works only for text, number and range input types\\r\\n\\t\\t\\t// TODO find a way to support input types date, datetime, datetime-local, month, time and week\\r\\n\\t\\t\\tif ( notSupported ) {\\r\\n\\t\\t\\t\\tthrow new Error( errorMessage );\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tdecimals = decimalPlaces( param );\\r\\n\\r\\n\\t\\t\\t// Value can\\'t have too many decimals\\r\\n\\t\\t\\tif ( decimalPlaces( value ) > decimals || toInt( value ) % toInt( param ) !== 0 ) {\\r\\n\\t\\t\\t\\tvalid = false;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\treturn this.optional( element ) || valid;\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/equalTo-method/\\r\\n\\t\\tequalTo: function( value, element, param ) {\\r\\n\\r\\n\\t\\t\\t// Bind to the blur event of the target in order to revalidate whenever the target field is updated\\r\\n\\t\\t\\tvar target = $( param );\\r\\n\\t\\t\\tif ( this.settings.onfocusout && target.not( \".validate-equalTo-blur\" ).length ) {\\r\\n\\t\\t\\t\\ttarget.addClass( \"validate-equalTo-blur\" ).on( \"blur.validate-equalTo\", function() {\\r\\n\\t\\t\\t\\t\\t$( element ).valid();\\r\\n\\t\\t\\t\\t} );\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\treturn value === target.val();\\r\\n\\t\\t},\\r\\n\\r\\n\\t\\t// https://jqueryvalidation.org/remote-method/\\r\\n\\t\\tremote: function( value, element, param, method ) {\\r\\n\\t\\t\\tif ( this.optional( element ) ) {\\r\\n\\t\\t\\t\\treturn \"dependency-mismatch\";\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tmethod = typeof method === \"string\" && method || \"remote\";\\r\\n\\r\\n\\t\\t\\tvar previous = this.previousValue( element, method ),\\r\\n\\t\\t\\t\\tvalidator, data, optionDataString;\\r\\n\\r\\n\\t\\t\\tif ( !this.settings.messages[ element.name ] ) {\\r\\n\\t\\t\\t\\tthis.settings.messages[ element.name ] = {};\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tprevious.originalMessage = previous.originalMessage || this.settings.messages[ element.name ][ method ];\\r\\n\\t\\t\\tthis.settings.messages[ element.name ][ method ] = previous.message;\\r\\n\\r\\n\\t\\t\\tparam = typeof param === \"string\" && { url: param } || param;\\r\\n\\t\\t\\toptionDataString = $.param( $.extend( { data: value }, param.data ) );\\r\\n\\t\\t\\tif ( previous.old === optionDataString ) {\\r\\n\\t\\t\\t\\treturn previous.valid;\\r\\n\\t\\t\\t}\\r\\n\\r\\n\\t\\t\\tprevious.old = optionDataString;\\r\\n\\t\\t\\tvalidator = this;\\r\\n\\t\\t\\tthis.startRequest( element );\\r\\n\\t\\t\\tdata = {};\\r\\n\\t\\t\\tdata[ element.name ] = value;\\r\\n\\t\\t\\t$.ajax( $.extend( true, {\\r\\n\\t\\t\\t\\tmode: \"abort\",\\r\\n\\t\\t\\t\\tport: \"validate\" + element.name,\\r\\n\\t\\t\\t\\tdataType: \"json\",\\r\\n\\t\\t\\t\\tdata: data,\\r\\n\\t\\t\\t\\tcontext: validator.currentForm,\\r\\n\\t\\t\\t\\tsuccess: function( response ) {\\r\\n\\t\\t\\t\\t\\tvar valid = response === true || response === \"true\",\\r\\n\\t\\t\\t\\t\\t\\terrors, message, submitted;\\r\\n\\r\\n\\t\\t\\t\\t\\tvalidator.settings.messages[ element.name ][ method ] = previous.originalMessage;\\r\\n\\t\\t\\t\\t\\tif ( valid ) {\\r\\n\\t\\t\\t\\t\\t\\tsubmitted = validator.formSubmitted;\\r\\n\\t\\t\\t\\t\\t\\tvalidator.resetInternals();\\r\\n\\t\\t\\t\\t\\t\\tvalidator.toHide = validator.errorsFor( element );\\r\\n\\t\\t\\t\\t\\t\\tvalidator.formSubmitted = submitted;\\r\\n\\t\\t\\t\\t\\t\\tvalidator.successList.push( element );\\r\\n\\t\\t\\t\\t\\t\\tvalidator.invalid[ element.name ] = false;\\r\\n\\t\\t\\t\\t\\t\\tvalidator.showErrors();\\r\\n\\t\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\t\\terrors = {};\\r\\n\\t\\t\\t\\t\\t\\tmessage = response || validator.defaultMessage( element, { method: method, parameters: value } );\\r\\n\\t\\t\\t\\t\\t\\terrors[ element.name ] = previous.message = message;\\r\\n\\t\\t\\t\\t\\t\\tvalidator.invalid[ element.name ] = true;\\r\\n\\t\\t\\t\\t\\t\\tvalidator.showErrors( errors );\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t\\tprevious.valid = valid;\\r\\n\\t\\t\\t\\t\\tvalidator.stopRequest( element, valid );\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t}, param ) );\\r\\n\\t\\t\\treturn \"pending\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\r\\n} );\\r\\n\\r\\n// Ajax mode: abort\\r\\n// usage: $.ajax({ mode: \"abort\"[, port: \"uniqueport\"]});\\r\\n// if mode:\"abort\" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()\\r\\n\\r\\nvar pendingRequests = {},\\r\\n\\tajax;\\r\\n\\r\\n// Use a prefilter if available (1.5+)\\r\\nif ( $.ajaxPrefilter ) {\\r\\n\\t$.ajaxPrefilter( function( settings, _, xhr ) {\\r\\n\\t\\tvar port = settings.port;\\r\\n\\t\\tif ( settings.mode === \"abort\" ) {\\r\\n\\t\\t\\tif ( pendingRequests[ port ] ) {\\r\\n\\t\\t\\t\\tpendingRequests[ port ].abort();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tpendingRequests[ port ] = xhr;\\r\\n\\t\\t}\\r\\n\\t} );\\r\\n} else {\\r\\n\\r\\n\\t// Proxy ajax\\r\\n\\tajax = $.ajax;\\r\\n\\t$.ajax = function( settings ) {\\r\\n\\t\\tvar mode = ( \"mode\" in settings ? settings : $.ajaxSettings ).mode,\\r\\n\\t\\t\\tport = ( \"port\" in settings ? settings : $.ajaxSettings ).port;\\r\\n\\t\\tif ( mode === \"abort\" ) {\\r\\n\\t\\t\\tif ( pendingRequests[ port ] ) {\\r\\n\\t\\t\\t\\tpendingRequests[ port ].abort();\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tpendingRequests[ port ] = ajax.apply( this, arguments );\\r\\n\\t\\t\\treturn pendingRequests[ port ];\\r\\n\\t\\t}\\r\\n\\t\\treturn ajax.apply( this, arguments );\\r\\n\\t};\\r\\n}\\r\\nreturn $;\\r\\n}));\\n\\n//# sourceURL=webpack:///./node_modules/jquery-validation/dist/jquery.validate.js?')},yLpj:function(module,exports){eval('var g;\\r\\n\\r\\n// This works in non-strict mode\\r\\ng = (function() {\\r\\n\\treturn this;\\r\\n})();\\r\\n\\r\\ntry {\\r\\n\\t// This works if eval is allowed (see CSP)\\r\\n\\tg = g || new Function(\"return this\")();\\r\\n} catch (e) {\\r\\n\\t// This works if the window reference is available\\r\\n\\tif (typeof window === \"object\") g = window;\\r\\n}\\r\\n\\r\\n// g can still be undefined, but nothing to do about it...\\r\\n// We return undefined, instead of nothing here, so it\\'s\\r\\n// easier to handle this case. if(!global) { ...}\\r\\n\\r\\nmodule.exports = g;\\r\\n\\n\\n//# sourceURL=webpack:///(webpack)/buildin/global.js?')}}]);","extractedComments":["/*!***************************************************!*\\\n  !*** ./node_modules/popper.js/dist/esm/popper.js ***!\n  \\***************************************************/","/*! exports provided: default */","/*!********************************************!*\\\n  !*** ./node_modules/jquery/dist/jquery.js ***!\n  \\********************************************/","/*! no static exports found */","/*!*****************************************************!*\\\n  !*** ./node_modules/bootstrap/dist/js/bootstrap.js ***!\n  \\*****************************************************/","/*!****************************************************************!*\\\n  !*** ./node_modules/jquery-validation/dist/jquery.validate.js ***!\n  \\****************************************************************/","/*!***********************************!*\\\n  !*** (webpack)/buildin/global.js ***!\n  \\***********************************/"]}